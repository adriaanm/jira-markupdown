You claim that ProjectA should have JarA in its classpath but this is not the behavior that JDT has. In order for ProjectA to have JarA in its classpath ProjectB must export ProjectC so we have JarA exported by ProjectC and ProjectC exported by ProjectB that is a dependency of ProjectA.

The above works perfectly well in trunk but unfortunately there are some issues with the build manager so if you use multiple projects you have sometimes to do a clean&build to see the updates.

Miles you should close this issue as invalid since the behavior described in the ticket is not compatible with JDT and SDT implements JDT's behavior correctly.
