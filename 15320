```scala
package com.example

import java.io.{File, FileInputStream}

object A
{
    val BLOCK_SIZE = 4096

    def filter(dir: File)(p: String => Boolean): List[String] = Nil

    def readFile[T](input: File)(f: FileInputStream => T) =
    {
        val stream = new FileInputStream(input)

        try
        {
            f(stream)
        }
        finally
        {
            stream.close()
        }
    }

    private def checkContentsIdentical(first: File, second: File): Boolean =
    {
        val firstBlock = new Array[Byte](A.BLOCK_SIZE)

        readFile(first) { firstStream =>
                true
        }
    }
}
```
```scala
import com.example.A

class B
{
    private def localMatch(localFilename: String): Boolean = false

    def inputFiles
    {
        A.filter(null)(localMatch _)
    }

}
```

Compile the two files in sequence with 2.8.0.RC2 -optimise
```scala
.../2.8.0.RC2/files/bin/scalac  \
    -optimise A.scala && \
.../2.8.0.RC2/files/bin/scalac \
    -optimise B.scala
```
```scala
block SI-1 :
  NEW REFERENCE(java.io.FileInputStream)
  DUP
  LOAD_LOCAL variable par1
  CALL_METHOD java.io.FileInputStreamjava.io.FileInputStream.<init> (static-instance)
  STORE_LOCAL variable loc3
  LOAD_LOCAL variable loc3
  CALL_METHOD java.io.FileInputStreamjava.io.FileInputStream.close (dynamic)
  CONSTANT (Constant(1))
  RETURN (INT)
Successors: 
trying to emit: STORE_LOCAL variable loc4
Exception in thread "main" java.lang.AssertionError: assertion failed: BasicBlock closed
	at scala.tools.nsc.backend.icode.BasicBlocks$$BasicBlock.emit(BasicBlocks.scala:346)
	at scala.tools.nsc.backend.icode.BasicBlocks$$BasicBlock.emit(BasicBlocks.scala:332)
	at scala.tools.nsc.symtab.classfile.ICodeReader$$LinearCode$$$$anonfun$$toBasicBlock$$1.apply(ICodeReader.scala:749)
	at scala.tools.nsc.symtab.classfile.ICodeReader$$LinearCode$$$$anonfun$$toBasicBlock$$1.apply(ICodeReader.scala:706)
	at scala.collection.Iterator$$class.foreach(Iterator.scala:632)
	at scala.collection.mutable.ListBuffer$$$$anon$$1.foreach(ListBuffer.scala:305)
	at scala.tools.nsc.symtab.classfile.ICodeReader$$LinearCode.toBasicBlock(ICodeReader.scala:706)
	at scala.tools.nsc.symtab.classfile.ICodeReader.parseByteCode(ICodeReader.scala:638)
	at scala.tools.nsc.symtab.classfile.ICodeReader.parseAttribute(ICodeReader.scala:187)
	at scala.tools.nsc.symtab.classfile.ICodeReader$$$$anonfun$$parseMethod$$1.apply(ICodeReader.scala:170)
	at scala.tools.nsc.symtab.classfile.ICodeReader$$$$anonfun$$parseMethod$$1.apply(ICodeReader.scala:170)
	at scala.collection.immutable.Range$$ByOne$$class.foreach(Range.scala:279)
	at scala.collection.immutable.Range$$$$anon$$2.foreach(Range.scala:259)
	at scala.tools.nsc.symtab.classfile.ICodeReader.parseMethod(ICodeReader.scala:170)
	at scala.tools.nsc.symtab.classfile.ICodeReader$$$$anonfun$$parseClass$$2.apply(ICodeReader.scala:84)
	at scala.tools.nsc.symtab.classfile.ICodeReader$$$$anonfun$$parseClass$$2.apply(ICodeReader.scala:84)
	at scala.collection.immutable.Range$$ByOne$$class.foreach(Range.scala:276)
	at scala.collection.immutable.Range$$$$anon$$2.foreach(Range.scala:259)
	at scala.tools.nsc.symtab.classfile.ICodeReader.parseClass(ICodeReader.scala:84)
	at scala.tools.nsc.symtab.classfile.ClassfileParser.parse(ClassfileParser.scala:99)
	at scala.tools.nsc.symtab.classfile.ICodeReader.readClass(ICodeReader.scala:54)
	at scala.tools.nsc.backend.icode.Repository$$class.load(Repository.scala:47)
	at scala.tools.nsc.backend.icode.Repository$$class.icode(Repository.scala:40)
	at scala.tools.nsc.backend.icode.ICodes.icode(ICodes.scala:27)
	at scala.tools.nsc.backend.opt.Inliners$$Inliner$$$$anonfun$$analyzeMethod$$1$$$$anonfun$$apply$$4.apply(Inliners.scala:339)
	at scala.tools.nsc.backend.opt.Inliners$$Inliner$$$$anonfun$$analyzeMethod$$1$$$$anonfun$$apply$$4.apply(Inliners.scala:313)
	at scala.collection.IndexedSeqOptimized$$class.foreach(IndexedSeqOptimized.scala:35)
	at scala.collection.mutable.ArrayOps.foreach(ArrayOps.scala:35)
	at scala.tools.nsc.backend.icode.BasicBlocks$$BasicBlock.foreach(BasicBlocks.scala:138)
	at scala.tools.nsc.backend.opt.Inliners$$Inliner$$$$anonfun$$analyzeMethod$$1.apply(Inliners.scala:313)
	at scala.tools.nsc.backend.opt.Inliners$$Inliner$$$$anonfun$$analyzeMethod$$1.apply(Inliners.scala:311)
	at scala.collection.LinearSeqOptimized$$class.foreach(LinearSeqOptimized.scala:62)
	at scala.collection.immutable.List.foreach(List.scala:46)
	at scala.tools.nsc.backend.opt.Inliners$$Inliner.analyzeMethod(Inliners.scala:311)
	at scala.tools.nsc.backend.opt.Inliners$$Inliner$$$$anonfun$$analyzeClass$$2.apply(Inliners.scala:288)
	at scala.tools.nsc.backend.opt.Inliners$$Inliner$$$$anonfun$$analyzeClass$$2.apply(Inliners.scala:288)
	at scala.collection.LinearSeqOptimized$$class.foreach(LinearSeqOptimized.scala:62)
	at scala.collection.immutable.List.foreach(List.scala:46)
	at scala.tools.nsc.backend.opt.Inliners$$Inliner.analyzeClass(Inliners.scala:288)
	at scala.tools.nsc.backend.opt.Inliners$$InliningPhase.apply(Inliners.scala:51)
	at scala.tools.nsc.backend.icode.ICodes$$ICodePhase$$$$anonfun$$apply$$1.apply(ICodes.scala:94)
	at scala.tools.nsc.backend.icode.ICodes$$ICodePhase$$$$anonfun$$apply$$1.apply(ICodes.scala:94)
	at scala.collection.LinearSeqOptimized$$class.foreach(LinearSeqOptimized.scala:62)
	at scala.collection.immutable.List.foreach(List.scala:46)
	at scala.collection.generic.TraversableForwarder$$class.foreach(TraversableForwarder.scala:45)
	at scala.collection.mutable.LinkedHashSet.foreach(LinkedHashSet.scala:74)
	at scala.tools.nsc.backend.icode.ICodes$$ICodePhase.apply(ICodes.scala:94)
	at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$applyPhase$$1.apply(Global.scala:272)
	at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$applyPhase$$1.apply(Global.scala:272)
	at scala.tools.nsc.reporters.Reporter.withSource(Reporter.scala:49)
	at scala.tools.nsc.Global$$GlobalPhase.applyPhase(Global.scala:272)
	at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$run$$1.apply(Global.scala:248)
	at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$run$$1.apply(Global.scala:248)
	at scala.collection.Iterator$$class.foreach(Iterator.scala:632)
	at scala.collection.mutable.ListBuffer$$$$anon$$1.foreach(ListBuffer.scala:305)
	at scala.tools.nsc.Global$$GlobalPhase.run(Global.scala:248)
	at scala.tools.nsc.Global$$Run.compileSources(Global.scala:729)
	at scala.tools.nsc.Global$$Run.compile(Global.scala:815)
	at scala.tools.nsc.Main$$.process(Main.scala:109)
	at scala.tools.nsc.Main$$.main(Main.scala:123)
	at scala.tools.nsc.Main.main(Main.scala)
```
