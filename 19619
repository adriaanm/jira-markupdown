Unfortunately no minimal right now, as this appears only when I run a whole test suite - on single test it works ok.

Failing test is in expression evaluator PR for Scala IDE (https://github.com/scala-ide/scala-ide/pull/906/files#diff-2dbb5006e81b31769258a37f8cc7016eR50)

Stack trace:
```scala
java.lang.IndexOutOfBoundsException: 0
	at scala.collection.LinearSeqOptimized$class.apply(LinearSeqOptimized.scala:65)
	at scala.collection.immutable.List.apply(List.scala:84)
	at scala.reflect.internal.Importers$StandardImporter.recreateOrRelink$1(Importers.scala:170)
	at scala.reflect.internal.Importers$StandardImporter.importSymbol(Importers.scala:210)
	at scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateType$3.apply(Importers.scala:232)
	at scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateType$3.apply(Importers.scala:232)
	at scala.collection.immutable.List.map(List.scala:273)
	at scala.reflect.internal.Importers$StandardImporter.recreateType(Importers.scala:232)
	at scala.reflect.internal.Importers$StandardImporter.importType(Importers.scala:284)
	at scala.reflect.internal.Importers$StandardImporter.recreatedTreeCompleter(Importers.scala:304)
	at scala.reflect.internal.Importers$StandardImporter$$anonfun$importTree$1.apply$mcV$sp(Importers.scala:417)
	at scala.reflect.internal.Importers$StandardImporter.tryFixup(Importers.scala:49)
	at scala.reflect.internal.Importers$StandardImporter.importTree(Importers.scala:418)
	at scala.reflect.internal.Importers$StandardImporter.recreateTree(Importers.scala:367)
	at scala.reflect.internal.Importers$StandardImporter.importTree(Importers.scala:415)
	at scala.reflect.internal.Importers$StandardImporter.recreateTree(Importers.scala:374)
	at scala.reflect.internal.Importers$StandardImporter.importTree(Importers.scala:415)
	at scala.reflect.internal.Importers$StandardImporter.recreateTree(Importers.scala:333)
	at scala.reflect.internal.Importers$StandardImporter.importTree(Importers.scala:415)
	at scala.reflect.internal.Importers$StandardImporter.recreateTree(Importers.scala:333)
	at scala.reflect.internal.Importers$StandardImporter.importTree(Importers.scala:415)
	at scala.reflect.internal.Importers$StandardImporter.importTree(Importers.scala:29)
	at scala.tools.reflect.ToolBoxFactory$ToolBoxImpl$$anonfun$typecheck$2.apply(ToolBoxFactory.scala:376)
	at scala.tools.reflect.ToolBoxFactory$ToolBoxImpl$$anonfun$typecheck$2.apply(ToolBoxFactory.scala:367)
	at scala.tools.reflect.ToolBoxFactory$ToolBoxImpl$withCompilerApi$.liftedTree2$1(ToolBoxFactory.scala:355)
	at scala.tools.reflect.ToolBoxFactory$ToolBoxImpl$withCompilerApi$.apply(ToolBoxFactory.scala:355)
	at scala.tools.reflect.ToolBoxFactory$ToolBoxImpl.typecheck(ToolBoxFactory.scala:367)
	at scala.tools.reflect.ToolBoxFactory$ToolBoxImpl.typecheck(ToolBoxFactory.scala:27)
	at org.scalaide.debug.internal.expression.proxies.phases.TypeCheck.doTypeCheck$1(TypeCheck.scala:44)
	at org.scalaide.debug.internal.expression.proxies.phases.TypeCheck.transform(TypeCheck.scala:46)
	at org.scalaide.debug.internal.expression.ExpressionEvaluator$$anonfun$1.apply(ExpressionEvaluator.scala:152)
	at org.scalaide.debug.internal.expression.ExpressionEvaluator$$anonfun$1.apply(ExpressionEvaluator.scala:146)
	at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:124)
	at scala.collection.immutable.List.foldLeft(List.scala:84)
	at org.scalaide.debug.internal.expression.ExpressionEvaluator.org$scalaide$debug$internal$expression$ExpressionEvaluator$$transform(ExpressionEvaluator.scala:146)
	at org.scalaide.debug.internal.expression.ExpressionEvaluator$$anonfun$compileExpression$1.apply(ExpressionEvaluator.scala:80)
	at org.scalaide.debug.internal.expression.ExpressionEvaluator$$anonfun$compileExpression$1.apply(ExpressionEvaluator.scala:73)
	at scala.util.Try$.apply(Try.scala:191)
	at org.scalaide.debug.internal.expression.ExpressionEvaluator.compileExpression(ExpressionEvaluator.scala:73)
	at org.scalaide.debug.internal.expression.JdiExpressionEvaluator.apply(JdiExpressionEvaluator.scala:61)
	... 53 more
```
