The description is on the doc comment of [https://lampsvn.epfl.ch/trac/scala/browser/scala/tags/R_2_8_0_final/src/library/scala/Math.scala#L76 scala.Math.EPS_DOUBLE], which is deprecated with a pointer to `Double.Epsilon`. `Double.Epsilon` itself is not part of the API documentation.

This is the accepted meaning of epsilon. Apache Commons Math defines it as:
```scala
class MathUtils {
/** Smallest positive number such that 1 - EPSILON is not numerically equal to 1. */
    public static final double EPSILON = 0x1.0p-53;
```

Usage:
```scala
scala> import org.apache.commons.math.util.MathUtils
import org.apache.commons.math.util.MathUtils

scala> (1d - Double.Epsilon) == 1d
res18: Boolean = true

scala> (1d - MathUtils.EPSILON) == 1d
res19: Boolean = false

scala> (1d - MathUtils.EPSILON / 2) == 1d
res20: Boolean = true

scala>  MathUtils.EPSILON
res21: Double = 1.1102230246251565E-16
```

I guess the deviation from the names used in Java stemmed from the confusing name `MIN_VALUE`, which could be interpreted as `-MAX_VALUE` or the smallest positive value. But epsilon is the wrong name for this value.

Proposal:

 * Change `Double.Epsilon` to the value defined by Apache Commons Math, with a migration warning.
 * Add `Double.MinPositiveValue` = `java.lang.Double.MIN_VALUE`
 * Add `Double.MinNegativeValue` = `-Double.MaxValue`
 * Deprecate `Double.MinValue`, rather than leave it a different meaning from `java.lang.Double.MIN_VALUE`, with which Java developers may be familiar.
 * Do the same for the other `AnyVal` companion objects.
 * Remove the already deprecated constants from `scala.Math`.
