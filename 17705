The following program compiles, 
```
import scala.concurrent._
import scala.concurrent.duration.Duration.Inf

object Test {
  import ExecutionContext.Implicits._

  def main(args: Array[String]) {
    println("main()")
  }

  def delegate(): String = "abc"

  val r = Await.result(future {

    {
      "abc"
      // delegate()
    }

  }, Inf)
  println("awaited: " + r)
}
```


and when run prints:
```
awaited: abc
main()
```

However, uncommenting the invocation to `delegate()` results in the program not terminating.

I was expecting both versions to be semantically equivalent.
