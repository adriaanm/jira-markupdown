I could swear this worked at some point, but maybe I didn't test it correctly.  Is there some reason package objects can't expose inherited members? Without this ability scala.Math and scala.math the package object are going to have a large shared cut and paste.  And of course any future situations where a regular object wants to evolve into a package object without being an exact clone of it.

{code}
package scala

trait Bloop {
  // "value foo is not a member of package math"
  def foo(x: Int) = x*x
}

package object math extends Bloop {
  def foo2(x: Int) = x*x
}
{code}
