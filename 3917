There are at least two ways to work around this problem. One way is to disable the fork-join pool (falling back to a thread pool that does not use `Unsafe` intrinsics) by setting the `actors.enableForkJoin` JVM property: `-Dactors.enableForkJoin=false`. Another way is to re-configure the global actors scheduler:
```scala
import scala.actors.Scheduler
import scala.actors.scheduler.ResizableThreadPoolScheduler

Scheduler.impl = {
  val s = new ResizableThreadPoolScheduler(false)
  s.start()
  s
}
```

Schedulers can also be overridden on a per-actor basis:
```scala
import scala.actors.scheduler.ResizableThreadPoolScheduler

object MyConfig {
  val scheduler = {
    val s = new ResizableThreadPoolScheduler(false)
    s.start()
    s
  }
}

trait MyActor {
  override def scheduler = MyConfig.scheduler
}
```
