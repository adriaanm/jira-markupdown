When `Actor.start` is called, various fields are reset to their initial values. Currently these are: `trapExit`, `exitReason`, `exiting` and `shouldExit`.

I don't think `trapExit` should be reset. Here's why:

(a) It's a public field that is set by the user, unlike the other fields.

(b) It would be good to be able to set it *before* calling `start`, and outside the `act` method. I say this because you cannot be confident that code in the `act` method has executed unless you use some sort of synchronization (like sending/receiving a message).

I got caught with this when I was writing some [http://trac-hg.assembla.com/scala-mina/browser/integration-scala/src/main/scala/org/apache/mina/integration/scala/util/ActorUtils.scala exit-handling code], and I saw [http://www.nabble.com/Does-Actor.link-work--td15968585.html a similar mistake] on the mailing lists today. If the current behaviour isn't changed, then mentioning it in `trapExit`'s documentation would probably be a helpful alternative.
