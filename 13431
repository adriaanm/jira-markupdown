This fails to compile:

{code}
object Foo{
  def name_=(name : String) = println(name);
}

Foo.name = "bob"
{code}

This on the other hand works fine:

{code}
object Foo{
  def name_=(name : String) = println(name);
  def name = "Foo"
}

Foo.name = "bob"
{code}

It seems odd that the setter definition depends on having an accessor definition even when we don't access the value. It would be nice if it didn't.

I don't actually care that much though. I'd settle for an improved error message at the use site or a warning at the definition site. 
