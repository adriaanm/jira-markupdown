You can take B out of the equation: it's the same if Test extends A directly.
```

// together ok
% scalac3 Test.scala A.java 
// separate not ok
% scalac3 Test.scala 
Test.scala:2: error: not found: type I
  def foo(): I = null
             ^
one error found
```

Even if I define the java like this (public/public)
```scala
package j;

public interface A {
    public interface I { }
}
```
...why does scala see it as "protected type I = A.I" ?
