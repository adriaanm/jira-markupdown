For the below code, the compiler issues no warning; only the runtime catches the `MatchError`:
```scala
import scala.reflect.runtime.universe._

val (c : Int, p: TermName) = {
 val (c1 : Int, p1: List[TermName]) = {
  (5, List(null))
 }
 (c1, p1)
}
```

When importing `TermName` explicitly, a warning is issued:
```scala
import scala.reflect.runtime.universe.TermName
...

warning: abstract type pattern reflect.runtime.universe.TermName is unchecked since it is eliminated by erasure
```

However, as it is known that `TermName <: NameApi`, the latter being an abstract class, I believe that the correct warning would have been a `fruitless type test` warning.
