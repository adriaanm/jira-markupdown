Possibly related to SI-4426 since that's what I was reducing when I ran into this one.  Someday I hope to find fewer than one new bug per attempted bugfix...
{code}
object Main {
  def f = {
    class A {
      val x = {
        object cc
        ()
      }
    }
    new A
  }
}
{code}
{code}
// java.lang.Error: symbol variable bitmap$$0$$1 does not exist in Main$$$$anon$$1$$Main.f
//  at scala.tools.nsc.symtab.SymbolTable.abort(SymbolTable.scala:35)
//  at scala.tools.nsc.backend.icode.GenICode$$ICodePhase.scala$$tools$$nsc$$backend$$icode$$GenICode$$ICodePhase$$$$genLoad(GenICode.scala:1026)
//  at scala.tools.nsc.backend.icode.GenICode$$ICodePhase$$$$anonfun$$genLoadArguments$$1.apply(GenICode.scala:1221)
//  at scala.tools.nsc.backend.icode.GenICode$$ICodePhase$$$$anonfun$$genLoadArguments$$1.apply(GenICode.scala:1219)
//  at scala.collection.LinearSeqOptimized$$class.foldLeft(LinearSeqOptimized.scala:111)
//  at scala.collection.immutable.List.foldLeft(List.scala:45)
//  at scala.tools.nsc.backend.icode.GenICode$$ICodePhase.genLoadArguments(GenICode.scala:1219)
//  at scala.tools.nsc.backend.icode.GenICode$$ICodePhase.scala$$tools$$nsc$$backend$$icode$$GenICode$$ICodePhase$$$$genLoad(GenICode.scala:834)
//  at scala.tools.nsc.backend.icode.GenICode$$ICodePhase.gen(GenICode.scala:114)
{code}
It works in 2.8.1, and is obviously related to the object -> lazy val changes (as I suspect is SI-4426.)
