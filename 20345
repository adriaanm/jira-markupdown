The code
```scala
object test  {
  def main(args: Array[String]): Unit = {
    ((List(Some(1), None)).flatMap(_.toList))(0)
  }
}
```
does not compile with a type mismatch error related to implicit argument of flatMap.
While this code
```scala
object test  {
  def main(args: Array[String]): Unit = {
    val x = (List(Some(1), None)).flatMap(_.toList)
    ((List(Some(1), None)).flatMap(_.toList)).apply(0)
    x(0)
  }
}
```
compiles well.
I think the issue here is that the parentheses around (List(Some(1), None)).flatMap(_.toList) is somehow neglected and lead to a type mismatch error
