{code}
scala> class Foo{ override def equals(o: Any) = false; override def hashCode = 1}
defined class Foo


scala> var m = Map[Foo, Int]()
m: scala.collection.immutable.Map[Foo,Int] = Map()

scala> for (i <- 1 to 8000) m += (new Foo) -> i
java.lang.StackOverflowError
        at scala.collection.immutable.ListMap$$Node.get(ListMap.scala:148)
        at scala.collection.immutable.ListMap$$Node.get(ListMap.scala:148)
        at scala.collection.immutable.ListMap$$Node.get(ListMap.scala:148)
        at scala.collection.immutable.ListMap$$Node.get(ListMap.scala:148)
        at scala.collection.immutable.ListMap$$Node.get(ListMap.scala:148)
        at scala.collection.immutable.ListMap$$Node.get(ListMap.scala:148)
        at scala.collection.immutable.ListMap$$Node.get(ListMap.scala:148)
        at scala.collection.immutable.ListMap$$Node.get(ListMap.scala:148)
        at scala.collection.immutable.ListMap$$Node.get(ListMap.scala:148)
        at scala.collection.immutable.ListMap$$Node.get(ListMap.scala:148)
        at scala.collection.immutable.ListMap$$Node.get(ListMap.scala:148)
        at scala.collection.immutable....

{code}

The issue is that ListMap.Node#get is recursive instead of iterative. ListMap is used by HashMapCollision1. 
