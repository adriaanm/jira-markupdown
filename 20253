sample code snippet:
```scala
object Entice extends App {

  import scala.reflect.runtime.universe._

  def normal0(x: (List[Int] {def value})@SerialVersionUID(1L) with Int {def xxx: Int}) = ???

  def normal(x: (List[T] forSome {type T})@SerialVersionUID(1L) with Int {def xxx: Int}) = ???

  println(typeOf[Entice.type].member(TermName("normal0")).info.paramLists.head.head.info.asInstanceOf[RefinedType].parents.head.getClass)
  println(typeOf[Entice.type].member(TermName("normal")).info.paramLists.head.head.info.asInstanceOf[RefinedType].parents.head.getClass)
}
```

The output is: 
```

    class scala.reflect.internal.Types$AnnotatedType
    class scala.reflect.internal.Types$ExistentialType
```

IMO the second line in the output should be `AnnotatedType` as same as the 1st line, doesn't it? 

May i missed something?
