A for block that iters on two map.iterator with a guard throws a "type mismatch" error.

This construction use to work (at least until 2.8.0.r19180-b20091021023451 ), but not any more:
```scala
Welcome to Scala version 2.8.0.r19281-b20091026023411 (Java HotSpot(TM) Server VM, Java 1.6.0_16).
Type in expressions to have them evaluated.
Type :help for more information.

scala>  val m = Map("foo" -> "bar")                                                  
m: scala.collection.immutable.Map[java.lang.String,java.lang.String] = Map(foo -> bar)

scala> for { (a,b) <- m.iterator ; (c,d) <- m.iterator ; if(a != b) } yield a        
<console>:6: error: type mismatch;
 found   : scala.collection.immutable.Stream[java.lang.String]
 required: Iterator[?]
       for { (a,b) <- m.iterator ; (c,d) <- m.iterator ; if(a != b) } yield a
                                         ^

scala>
```

The forloop without yield still works:
```scala
scala> for((a,b) <- m.iterator ; (c,d) <- m.iterator ; if(a != b) ) { println(a) }
foo

scala> 
```
