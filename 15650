Consider the following Java method:

{code}
class TestClass {
  public void foo(Object [] args) { ... }
}
{code}

This method can be called normally from Scala providing an *Array[AnyRef]*. However, although the *[]* and *...* notations are considered equivalent in Java, if the method is defined as:

{code}
  public void foo(Object ... args) { ... }
{code}

the same array will be passed to the method as a single object, providing only one argument.

This causes problems, for instance, when calling java.lang.reflect.Method.invoke().
