This is really cool, but I'm going to be an ingrate and reopen it because it's really hard to use.  I had to analyze the diff to the parser to even figure out what syntax it might possibly accept -- none of my many guesses ever parsed.

Example: I have a method mainMethod which I use thusly.
```scala
    def mainMethod(f: MethodVisitor => Unit): Unit = { ... }

    // from elsewhere
    cw mainMethod { mw => 
      implicit val _mw = mw

      // the methods being called here by way of implicit take an implicit mw
      ("java/lang/System" getStatic "out")
      ("java/io/PrintStream" invokeVirtual "println")("Hello world!")      
      ("java/lang/System" invokeStatic "setProperty")("propfoo", "valuebar")
    }
```
So naturally I'd be pleased to be able to write:
```scala
    cw mainMethod { implicit mw => ...
```
But that does not parse.  The only way I can get it to parse are when I explicitly type it prior to the parameter being used.  I failed to find any way to annotate the type of the parameter or to use an anonymous parameter.  So here is how it looks if I accept the limitations:
```scala
    val body: MethodVisitor => Unit = implicit mw => {
      ("java/lang/System" getStatic "out")
      ("java/io/PrintStream" invokeVirtual "println")("Hello world!")      
      ("java/lang/System" invokeStatic "setProperty")("propfoo", "valuebar")
    }
    
    cw mainMethod body
```
But this is far inferior to the original version.
