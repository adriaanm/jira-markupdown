Replying to [comment:8 washburn]:
> Replying to [comment:7 washburn]:
> > Replying to [comment:6 DRMacIver]:
> > > When would an implicit conversion ever be applied to something of type Nothing? It's a subtype of everything else, so is never used as the wrong type.
> > 
> > It does seem suspect, and it does seem like whatever he is trying to achieve could be accomplished in another fashion.  However, I figured it would be best to have the issue of whether Nothing may be used in implicit conversions as a separate ticket. 
> 
> Another perspective on the matter is that Scala does not actually treat the Nothing type quite correctly.  In most systems with a bottom type, you are allowed to use something with type Nothing as if it had any possible field, among other things.  As such this would mean that there would be no point to using implicit conversions on expressions with type Nothing, because any possible projections or method invocation should already succeed without an implicit conversion.  

It might seem like one would never want a by-name Nothing to be implicitly converted, but that's exactly what I needed.
I have written a library that is very similar to Scala actors Actor object yet for a simpler domain.
My library react method returns Nothing just like the Actor class.
Where i differ slightly is that my "mkBody" library method is
not parameterized like the one in scala Actors but has type

implicit def mkBody(body: => Nothing):Body = new Body(() => body)

so the compiler sees the mkBody has a by-name Nothing method such that if it would perform the same type of implicit conversion as happens with scala Actor code

  implicit def mkBody[a](body: => a) = new Body[a] {
    def andThen[b](other: => b): Unit = self.seq(body, other)
  }

then similarly users of my library could do stuff like

X.react { ... } andThen { more code }

where the andThen is a method of the Body type.

If the compiler is going to insist on treating => Nothing as not allowed for implicit conversion, then I guess I'm going to have to try to trick the compiler perhaps with a parameterization ala Scala actors or with Any type or something. ??
I didnt think I should need to do this as => Nothing is the only possible thing I want to "wrap" in an implicit conversion.

Now, if => Nothing implicit conversions are really meant to be disallowed, then shouldn't the language spec state something about it.
Actually, if one just fixed the compiler to not error the case out, I dont see this breaking anything else -- you would get the implicit conversion applied. (But certainly I'm just a naive user and not at all familiar with the scala compiler).

Anyway thanks you guys for the consideration.

