As reported by Daniel Armak on the mailing list:

I encountered this error trying to compile code that uses the shapeless ~?> typeclass with the toolbox, and simplified it to this:

{code}
import scala.reflect.runtime.currentMirror
import scala.tools.reflect.ToolBox

val tb = ToolBox(currentMirror).mkToolBox()
val source = """{
  import scala.language.higherKinds

  class Outer[X] {
    class Inner[Y]
  }
  class Other[T[_]]

  new Other[Outer[Int]#Inner]()
}"""

val tree = tb.parse(source)
tb.typecheck(tree).tpe
{code}

This fails with:

{noformat}
Exception in thread "main" scala.MatchError: <tree with deferred refcheck> (of class scala.tools.nsc.ast.Trees$TypeTreeWithDeferredRefCheck)
    at scala.reflect.internal.Importers$StandardImporter.recreateTree(Importers.scala:309)
{noformat}

Importers doesn't deal with the extra AST node types introduced in nsc.Global, namely {{TypeTreeWithDeferredRefCheck}}
