{code}
object Test {
  def f(xs: Int*): xs.type = {println("!!!"); xs}
  f(1)
  val x: Int = 1
  f(x)
}
{code}

{noformat}
% qbin/scalac -Xprint:typer sandbox/repeated-depmet.scala
sandbox/repeated-depmet.scala:3: warning: a pure expression does nothing in statement position; you may be omitting necessary parentheses
  f(1)
   ^
[[syntax trees at end of                     typer]] // repeated-depmet.scala
package <empty> {
  object Test extends scala.AnyRef {
    def <init>(): Test.type = {
      Test.super.<init>();
      ()
    };
    def f(xs: Int*): xs.type = {
      scala.this.Predef.println("!!!");
      xs
    };
    1;
    private[this] val x: Int = 1;
    <stable> <accessor> def x: Int = Test.this.x;
    Test.this.f(Test.this.x)
  }
}

one warning found

qbin/scala
Welcome to Scala version 2.11.0-20131020-085639-509440d258 (Java HotSpot(TM) 64-Bit Server VM, Java 1.6.0_37).
Type in expressions to have them evaluated.
Type :help for more information.

scala> Test.f(1, 2, 3)
ReplGlobal.abort: unexpected type: class scala.reflect.internal.Symbols$TypeSkolem type xs
error: unexpected type: class scala.reflect.internal.Symbols$TypeSkolem type xs
scala.reflect.internal.FatalError: unexpected type: class scala.reflect.internal.Symbols$TypeSkolem type xs
	at scala.reflect.internal.SymbolTable.abort(SymbolTable.scala:54)
	at scala.tools.nsc.Global.abort(Global.scala:262)
{noformat}
{code}
