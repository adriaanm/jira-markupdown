WrappedString Scaladoc 2.8.1:

"This class serves as a wrapper augmenting Strings with all the operations found in indexed sequences. The difference between this class and StringOps is that calling transformer methods such as filter and __map will yield an object of type WrappedString rather than a String__"
```scala
  scala> import scala.collection.immutable.WrappedString
  import scala.collection.immutable.WrappedString

  scala> val s = new WrappedString("foo")               
  s: scala.collection.immutable.WrappedString = WrappedString(f, o, o)

  scala> s.filter(x => true)
  res1: scala.collection.immutable.WrappedString = WrappedString(f, o, o)

  scala> s.map(x => x)                                  
  res2: scala.collection.immutable.IndexedSeq[Char] = Vector(f, o, o)  
```


Reading the documentation I would expect WrappedString to have a an implicit CanBuildFrom so that map et al would return a WrappedString.

Also, the scaladoc simplified version of map doesn't make any sense:
```scala
def map [B] (f: (Char) ⇒ B) : WrappedString[B]
def map [B, That] (f: (Char) ⇒ B)(implicit bf: CanBuildFrom[WrappedString, B, That]) : That
```

I guess that is because of the 
```scala
@define Coll WrappedString
@define coll wrapped string
```

which further points in the direction that the intention is that it should have a CanBuildFrom implicit, right?

=== Additional information ===
StackOverflow question: http://stackoverflow.com/questions/4947250/scala-collection-immutable-wrappedstring-need-an-implicit-canbuildfrom-to-fulfill

  - Scala: 2.8.1
