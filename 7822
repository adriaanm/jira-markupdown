Even though this issue has been closed, I'd like to point out something said on issue [SI-4316|https://issues.scala-lang.org/browse/SI-4316], linked by SI-4023:

{quote}
Paul Phillips added a comment - 13/Aug/11 7:58 PM
Don't hold me to too many details, but yes. It is the reverse which gets us elsewhere: reflection expects a class called foo$bar$baz$1 to be nested inside a class called foo$bar$baz, and with us that's not all that likely.

Grzegorz Kossakowski added a comment - 13/Aug/11 8:05 PM
I see. It's interesting, I thought InnerClasses attribute in a class servers exactly this purpose to provide information about nesting. If implementations decided to ignore their own invention and rely on strings then I'd be in favor of ignoring Java reflection entirely.
It's quite likely that we'll be in luxury situation of having native Scala reflection that we can point folks at.
{quote}

Is Scala reflection making use of that InnerClasses attribute? Could it, to avoid this problem?
