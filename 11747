In your example, when typechecking the type of the parameter of `p`, the compiler can only use the existential `_$1` (the existential from the declared upper bound). When you instantiate the method type with `T=Ai`, nothing can be substituted into that type.

In order to infer that `T=Int`, you would need to expose it as a type parameter. For example:
```scala
def f1[T](p: A[T])(f: p.Te) = ???
f1(new Ai)(5)
```
