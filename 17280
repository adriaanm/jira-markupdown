{code}
scala> class A(val x: Int) extends AnyVal { def this(s: String) = this(s.length) }
defined class A

scala> new A("a") == new A("b")
java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer
    at scala.runtime.BoxesRunTime.unboxToInt(Unknown Source)
    at .<init>(<console>:9)
    at .<clinit>(<console>)

scala> class X(val a: Int) extends AnyVal { def this(x: String) = this(0) }
defined class X

scala> new X("").a
java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer
    at
{code}

Troublesome spots in the implementation:

https://github.com/scala/scala/blob/39fc4aa84/src/compiler/scala/tools/nsc/transform/Erasure.scala#L362

https://github.com/scala/scala/blob/39fc4aa84/src/compiler/scala/tools/nsc/transform/Erasure.scala#L1003

https://github.com/scala/scala/blob/39fc4aa84/src/compiler/scala/tools/nsc/transform/PostErasure.scala#L36

https://github.com/scala/scala/blob/39fc4aa84/src/compiler/scala/tools/nsc/transform/PostErasure.scala#L46

I tried to constrain these spots to only consider primary constructor, but this triggered a compiler crash which I'm yet to pin down.

A heavy handed approach would be to disallow secondary constructors for now.

