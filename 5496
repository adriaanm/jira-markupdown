Replying to [comment:3 prokopec]:
> Can you post a small reproducible piece of code that causes the bug you are describing?

this is the smallest version of the code, but the class MyActor from above is still necessairy.
```scala
object Server extends Actor {
  import scala.actors.remote.{Node,RemoteActor,FreshNameCreator}
  def act{
    loop{
      react{
        case "connect" =>
          val s = FreshNameCreator.newName
          val newactor = new MyActor
          
          // register this actor as remote accessable actor
          RemoteActor.register(s, newactor )         
          
          // now we want to test weather the connection can be made       
          val testactor = RemoteActor.select(Node("localhost",9999), s )
          
          // but this message never arrives the actor
          testactor ! "message from act"
      }
    }
  }
  
  def main(args:Array[String]){
    start
    
    //RemoteActor.classLoader = getClass().getClassLoader()
    RemoteActor.alive(9999)
    RemoteActor.register('server, this )

    this ! "connect"
  }
}
```

the expectet output is "message from act" but there is no output
