So old, in fact, that is was among my first thoughts. Alas:
```scala
./build/quick/bin/scala -Yvirtpatmat -unchecked
Welcome to Scala version 2.10.0-M1-0374-g526c92848a-2012-02-19 (Java HotSpot(TM) 64-Bit Server VM, Java 1.6.0_29).
Type in expressions to have them evaluated.
Type :help for more information.

scala> import reflect.mirror._import reflect.mirror._

scala> object A { def foo(t: Tree) = t.tpe match { case MethodType(_, _) => 0 }} 
<console>:10: warning: abstract type reflect.mirror.MethodType in type pattern reflect.mirror.MethodType is unchecked since it is eliminated by erasure
       object A { def foo(t: Tree) = t.tpe match { case MethodType(_, _) => 0 }} 
                                                                  ^
defined module A

scala> :paste
// Entering paste mode (ctrl-D to finish)

trait A {  
  type Type
  type MethodType <: Type
  
  val MethodType: MethodTypeExtractor = null

  abstract class MethodTypeExtractor {    
    def unapply(tpe: MethodType): Option[(Any, Any)]
  }
}

object Test {  
  val a: A = null

  def foo(tpe: a.Type) = tpe match {
    case a.MethodType(_, _) =>
  }
}

// Exiting paste mode, now interpreting.

<console>:25: warning: abstract type Test.a.MethodType in type pattern Test.a.MethodType is unchecked since it is eliminated by erasure
           case a.MethodType(_, _) =>
                            ^
```
