Scala 2.7.2.RC2
```scala
trait Functor[F[_]] {
  def fmap[A, B](f: A => B, fa: F[A]): F[B]
}

object Functor {
  implicit val OptionFunctor = new Functor[Option] {
    def fmap[A, B](f: A => B, fa: Option[A]) = fa map f
  }
}

trait FunctorW[F[_], A] {
  val v: F[A]
  val functor: Functor[F]

  def >[B](f: A => B) = functor.fmap(f, v)
}

object FunctorW {
  def functor[F[_]] = new {
    def apply[A](ft: F[A])(implicit f: Functor[F]) = new FunctorW[F, A] {
      val v = ft
      val functor = f
    }
  }

  implicit def OptionFunctor[A](as: Option[A]) = functor[Option](as)
}

/*
$$ scala Main
java.lang.NoSuchMethodException: FunctorW$$$$anon$$3.apply(scala.Option, Functor)
        at java.lang.Class.getMethod(Class.java:1605)
        at FunctorW$$.reflMethod$$Method1(Functor.scala:26)
        at FunctorW$$.OptionFunctor(Functor.scala:26)
        at Main$$.main(Functor.scala:34)
        at Main.main(Functor.scala)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at scala.tools.nsc.ObjectRunner$$$$anonfun$$run$$1.apply(ObjectRunner.scala:75)
        at scala.tools.nsc.ObjectRunner$$.withContextClassLoader(ObjectRunner.scala:49)
        at scala.tools.nsc.ObjectRunner$$.run(ObjectRunner.scala:74)
        at scala.tools.nsc.MainGenericRunner$$.main(MainGenericRunner.scala:164)
        at scala.tools.nsc.MainGenericRunner.main(MainGenericRunner.scala)
*/
object Main {
  import FunctorW._

  def main(args: Array[String]) {
    val o: Option[Int] = Some(7)
    val p = o > (_ + 1)
    println(p)
  }
}
```
