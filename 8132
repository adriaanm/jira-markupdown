scala/bug#1786 almost seems that it should have fixed this, but the F-bound case in particular doesn't seem to have benefited from the inferred existential bound introduced there.

(in 2.11.0-M3, a variant of 1786's sample code):
```scala
abstract class SomeClass2[T] {def tValue: T}
class MyClass2[T <: SomeClass2[T]](val myValue:T) 

def myMethod(i:MyClass2[_]) {
   i.myValue.tValue      // << error: value tValue is not a member of _$1
}

def myMethod[T <: SomeClass2[T]](i:MyClass2[T]) {
   i.myValue.tValue      // << works
}
```
