The following code crashes the compiler (trunk)
```scala
abstract class Type
case class SingleType(a: AnyRef, b: AnyRef) extends Type

class Foo {
  def unify(t1: Type, t2: Type): Unit = t1 match {
    case SingleType(_) => unify(tp1, tp2)
  }
}
```

Note that the case is wrong, as it uses `SingleType` with a single argument, while it is defined to take two. The stack trace is:
```scala
Exception in thread "main" scala.MatchError: (a: AnyRef,b: AnyRef)SingleType
	at scala.tools.nsc.typechecker.NamesDefaults$$class.baseFunBlock$$1(NamesDefaults.scala:164)
	at scala.tools.nsc.typechecker.NamesDefaults$$class.transformNamedApplication(NamesDefaults.scala:288)
	at scala.tools.nsc.Global$$analyzer$$.transformNamedApplication(Global.scala:329)
	at scala.tools.nsc.typechecker.Typers$$Typer.tryNamesDefaults$$1(Typers.scala:2033)
	at scala.tools.nsc.typechecker.Typers$$Typer.doTypedApply(Typers.scala:2064)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedApply$$1(Typers.scala:3056)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:3647)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3755)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedPattern(Typers.scala:3827)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedCase(Typers.scala:1613)
	at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$typedCases$$1.apply(Typers.scala:1636)
	at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$typedCases$$1.apply(Typers.scala:1634)
	at scala.collection.immutable.List$$.loop$$4(List.scala:714)
	at scala.collection.immutable.List$$.mapConserve(List.scala:731)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedCases(Typers.scala:1634)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:3563)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3755)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3808)
	at scala.tools.nsc.typechecker.Typers$$Typer.transformedOrTyped(Typers.scala:3866)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedDefDef(Typers.scala:1511)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:3491)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3755)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3797)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedStat$$1(Typers.scala:1769)
	at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$21.apply(Typers.scala:1826)
	at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$21.apply(Typers.scala:1826)
	at scala.collection.immutable.List$$.loop$$4(List.scala:714)
	at scala.collection.immutable.List$$.mapConserve(List.scala:731)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedStats(Typers.scala:1826)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedTemplate(Typers.scala:1355)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedClassDef(Typers.scala:1214)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:3482)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3755)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3797)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedStat$$1(Typers.scala:1769)
	at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$21.apply(Typers.scala:1826)
	at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$21.apply(Typers.scala:1826)
	at scala.collection.immutable.List$$.loop$$4(List.scala:714)
	at scala.collection.immutable.List$$.mapConserve(List.scala:731)
	at scala.collection.immutable.List$$.loop$$4(List.scala:718)
	at scala.collection.immutable.List$$.mapConserve(List.scala:731)
	at scala.collection.immutable.List$$.loop$$4(List.scala:718)
	at scala.collection.immutable.List$$.mapConserve(List.scala:731)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedStats(Typers.scala:1826)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:3478)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3755)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3797)
	at scala.tools.nsc.typechecker.Analyzer$$typerFactory$$$$anon$$2.apply(Analyzer.scala:80)
	at scala.tools.nsc.Global$$GlobalPhase.applyPhase(Global.scala:312)
	at scala.tools.nsc.typechecker.Analyzer$$typerFactory$$$$anon$$2$$$$anonfun$$run$$1.apply(Analyzer.scala:50)
	at scala.tools.nsc.typechecker.Analyzer$$typerFactory$$$$anon$$2$$$$anonfun$$run$$1.apply(Analyzer.scala:50)
	at scala.collection.Iterator$$class.foreach(Iterator.scala:500)
	at scala.collection.mutable.ListBuffer$$$$anon$$1.foreach(ListBuffer.scala:280)
	at scala.tools.nsc.typechecker.Analyzer$$typerFactory$$$$anon$$2.run(Analyzer.scala:50)
	at scala.tools.nsc.Global$$Run.compileSources(Global.scala:772)
	at scala.tools.nsc.Global$$Run.compile(Global.scala:846)
	at scala.tools.nsc.Main$$.process(Main.scala:73)
	at scala.tools.nsc.Main$$.main(Main.scala:87)
	at scala.tools.nsc.Main.main(Main.scala)
```

The same code gives an error message on 2.7.5:
```scala
namedparams.scala:6: error: wrong number of arguments for <none>: (AnyRef,AnyRef)SingleType
    case SingleType(_) => unify(tp1, tp2)
         ^
namedparams.scala:6: error: not found: value tp1
    case SingleType(_) => unify(tp1, tp2)
                                ^
two errors found
```
