```scala
object MyMacro {
  import scala.language.experimental.macros
  trait NestedType
  def myMacro(t: NestedType): Unit = macro myMacro_imp
  def myMacro_imp(c: scala.reflect.macros.whitebox.Context)(t: c.Expr[NestedType]): c.Expr[Unit] = c.universe.reify(())
} 
```
```scala
Main.scala:692: macro implementation has incompatible shape:
 required: (c: scala.reflect.macros.whitebox.Context)(t: c.Expr[c.prefix.value.NestedType]): c.Expr[Unit]
 or      : (c: scala.reflect.macros.whitebox.Context)(t: c.Tree): c.Tree
 found   : (c: scala.reflect.macros.whitebox.Context)(t: c.Expr[cmd19.MyMacro.NestedType]): c.Expr[Unit]
type mismatch for parameter t: c.Expr[c.prefix.value.NestedType] does not conform to c.Expr[cmd19.MyMacro.NestedType]
  def myMacro(t: NestedType): Unit = macro myMacro_imp
                                           ^
```
