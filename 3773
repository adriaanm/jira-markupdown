Here's a single file example

{code}

class A {
    def f(x : Boolean) : Thread = {
        g {
            x match {
                case false =>
                    B.h { }
            }
        }
    }

    private def g[T](block : => T) = error("")
}

object B {
    def h(block : => Unit) : Nothing = error("")
}
{code}

{code}
class A$$$$anonfun$$f$$1 extends scala.runtime.AbstractFunction0 {
  // fields:
  val x$$1: Boolean
  
  // methods
  def apply(): Nothing {
  locals: value temp1, variable boxed1, variable block0, variable par100, variable $$inlThis00, variable $$retVal00, variable $$inlThis0, variable $$retVal0
  startBlock: 1
  blocks: [1,2,3,5,7]
  
  1: 
    5	THIS
    5	LOAD_FIELD value x$$1
    5	STORE_LOCAL value temp1
    5	SCOPE_ENTER value temp1
    5	LOAD_LOCAL value temp1
    5	CONSTANT (Constant(false))
    5	CJUMP (BOOL)EQ ? 2 : 3
    
  2: 
    7	LOAD_MODULE object B
    7	NEW REFERENCE(A$$$$anonfun$$f$$1$$$$anonfun$$apply$$1)
    7	DUP
    7	THIS
    7	CALL_METHOD A$$$$anonfun$$f$$1$$$$anonfun$$apply$$1A$$$$anonfun$$f$$1$$$$anonfun$$apply$$1.<init> (static-instance)
    7	STORE_LOCAL variable block0
    7	STORE_LOCAL variable $$inlThis0
    7	LOAD_MODULE object Predef
    7	CONSTANT (Constant())
    7	STORE_LOCAL variable par100
    7	STORE_LOCAL variable $$inlThis00
    7	NEW REFERENCE(java.lang.RuntimeException)
    7	DUP
    7	LOAD_LOCAL variable par100
    7	CALL_METHOD java.lang.RuntimeExceptionjava.lang.RuntimeException.<init> (static-instance)
    7	THROW
    
  3: 
    5	NEW REFERENCE(scala.MatchError)
    5	DUP
    5	LOAD_LOCAL value temp1
    5	STORE_LOCAL variable boxed1
    5	LOAD_LOCAL variable boxed1
    5	BOX BOOL
    5	CALL_METHOD scala.MatchErrorscala.MatchError.<init> (static-instance)
    5	THROW
    
  5: 
    5	RETURN (REFERENCE(scala.Nothing))
    
  7: 
Exception in thread "main" java.lang.Error: Traversing an open block!: 7
	at scala.tools.nsc.symtab.SymbolTable.abort(SymbolTable.scala:34)
	at scala.tools.nsc.backend.icode.BasicBlocks$$BasicBlock.foreach(BasicBlocks.scala:136)
	at scala.tools.nsc.backend.icode.Printers$$TextPrinter.printBlock(Printers.scala:124)
	at scala.tools.nsc.backend.icode.Printers$$TextPrinter$$$$anonfun$$printMethod$$2.apply(Printers.scala:93)
	at scala.tools.nsc.backend.icode.Printers$$TextPrinter$$$$anonfun$$printMethod$$2.apply(Printers.scala:93)
	at scala.collection.LinearSeqOptimized$$class.foreach(LinearSeqOptimized.scala:62)
	at scala.collection.immutable.List.foreach(List.scala:46)
	at scala.tools.nsc.backend.icode.Printers$$TextPrinter.printMethod(Printers.scala:93)
	at scala.tools.nsc.backend.icode.Printers$$TextPrinter$$$$anonfun$$printClass$$2.apply(Printers.scala:71)
	at scala.tools.nsc.backend.icode.Printers$$TextPrinter$$$$anonfun$$printClass$$2.apply(Printers.scala:71)
	at scala.collection.LinearSeqOptimized$$class.foreach(LinearSeqOptimized.scala:62)
	at scala.collection.immutable.List.foreach(List.scala:46)
	at scala.tools.nsc.backend.icode.Printers$$TextPrinter.printClass(Printers.scala:71)
	at scala.tools.nsc.backend.icode.ICodes$$$$anonfun$$dump$$1.apply(ICodes.scala:72)
	at scala.tools.nsc.backend.icode.ICodes$$$$anonfun$$dump$$1.apply(ICodes.scala:72)
	at scala.collection.mutable.HashMap$$$$anon$$2$$$$anonfun$$foreach$$3.apply(HashMap.scala:90)
	at scala.collection.mutable.HashMap$$$$anon$$2$$$$anonfun$$foreach$$3.apply(HashMap.scala:90)
	at scala.collection.Iterator$$class.foreach(Iterator.scala:632)
	at scala.collection.mutable.HashTable$$$$anon$$1.foreach(HashTable.scala:162)
	at scala.collection.mutable.HashTable$$class.foreachEntry(HashTable.scala:195)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap$$$$anon$$2.foreach(HashMap.scala:90)
	at scala.tools.nsc.backend.icode.ICodes.dump(ICodes.scala:72)
	at scala.tools.nsc.backend.icode.BasicBlocks$$BasicBlock.foreach(BasicBlocks.scala:135)
	at scala.tools.nsc.backend.opt.Inliners$$Inliner$$$$anonfun$$isSafeToInline$$1$$$$anonfun$$apply$$mcV$$sp$$1.apply(Inliners.scala:448)
	at scala.tools.nsc.backend.opt.Inliners$$Inliner$$$$anonfun$$isSafeToInline$$1$$$$anonfun$$apply$$mcV$$sp$$1.apply(Inliners.scala:448)
	at scala.collection.LinearSeqOptimized$$class.foreach(LinearSeqOptimized.scala:62)
	at scala.collection.immutable.List.foreach(List.scala:46)
	at scala.collection.generic.TraversableForwarder$$class.foreach(TraversableForwarder.scala:45)
	at scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:43)
	at scala.tools.nsc.backend.opt.Inliners$$Inliner$$$$anonfun$$isSafeToInline$$1.apply$$mcV$$sp(Inliners.scala:448)
	at scala.util.control.Breaks.breakable(Breaks.scala:36)
	at scala.tools.nsc.backend.opt.Inliners$$Inliner.isSafeToInline(Inliners.scala:447)
	at scala.tools.nsc.backend.opt.Inliners$$Inliner$$$$anonfun$$analyzeMethod$$1$$$$anonfun$$apply$$4.apply(Inliners.scala:375)
	at scala.tools.nsc.backend.opt.Inliners$$Inliner$$$$anonfun$$analyzeMethod$$1$$$$anonfun$$apply$$4.apply(Inliners.scala:313)
	at scala.collection.IndexedSeqOptimized$$class.foreach(IndexedSeqOptimized.scala:35)
	at scala.collection.mutable.ArrayOps.foreach(ArrayOps.scala:35)
	at scala.tools.nsc.backend.icode.BasicBlocks$$BasicBlock.foreach(BasicBlocks.scala:138)
	at scala.tools.nsc.backend.opt.Inliners$$Inliner$$$$anonfun$$analyzeMethod$$1.apply(Inliners.scala:313)
	at scala.tools.nsc.backend.opt.Inliners$$Inliner$$$$anonfun$$analyzeMethod$$1.apply(Inliners.scala:311)
	at scala.collection.LinearSeqOptimized$$class.foreach(LinearSeqOptimized.scala:62)
	at scala.collection.immutable.List.foreach(List.scala:46)
	at scala.tools.nsc.backend.opt.Inliners$$Inliner.analyzeMethod(Inliners.scala:311)
	at scala.tools.nsc.backend.opt.Inliners$$Inliner$$$$anonfun$$analyzeClass$$2.apply(Inliners.scala:288)
	at scala.tools.nsc.backend.opt.Inliners$$Inliner$$$$anonfun$$analyzeClass$$2.apply(Inliners.scala:288)
	at scala.collection.LinearSeqOptimized$$class.foreach(LinearSeqOptimized.scala:62)
	at scala.collection.immutable.List.foreach(List.scala:46)
	at scala.tools.nsc.backend.opt.Inliners$$Inliner.analyzeClass(Inliners.scala:288)
	at scala.tools.nsc.backend.opt.Inliners$$InliningPhase.apply(Inliners.scala:51)
	at scala.tools.nsc.backend.icode.ICodes$$ICodePhase$$$$anonfun$$apply$$1.apply(ICodes.scala:94)
	at scala.tools.nsc.backend.icode.ICodes$$ICodePhase$$$$anonfun$$apply$$1.apply(ICodes.scala:94)
	at scala.collection.LinearSeqOptimized$$class.foreach(LinearSeqOptimized.scala:62)
	at scala.collection.immutable.List.foreach(List.scala:46)
	at scala.collection.generic.TraversableForwarder$$class.foreach(TraversableForwarder.scala:45)
	at scala.collection.mutable.LinkedHashSet.foreach(LinkedHashSet.scala:74)
	at scala.tools.nsc.backend.icode.ICodes$$ICodePhase.apply(ICodes.scala:94)
	at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$applyPhase$$1.apply(Global.scala:272)
	at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$applyPhase$$1.apply(Global.scala:272)
	at scala.tools.nsc.reporters.Reporter.withSource(Reporter.scala:49)
	at scala.tools.nsc.Global$$GlobalPhase.applyPhase(Global.scala:272)
	at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$run$$1.apply(Global.scala:248)
	at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$run$$1.apply(Global.scala:248)
	at scala.collection.Iterator$$class.foreach(Iterator.scala:632)
	at scala.collection.mutable.ListBuffer$$$$anon$$1.foreach(ListBuffer.scala:305)
	at scala.tools.nsc.Global$$GlobalPhase.run(Global.scala:248)
	at scala.tools.nsc.Global$$Run.compileSources(Global.scala:729)
	at scala.tools.nsc.Global$$Run.compile(Global.scala:815)
	at scala.tools.nsc.Main$$.process(Main.scala:109)
	at scala.tools.nsc.Main$$.main(Main.scala:123)
	at scala.tools.nsc.Main.main(Main.scala)
{code}
