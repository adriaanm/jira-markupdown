Noting for the moment that the last release where it worked is 2.7.2, so it's not a recent regression:
{code}
[paulp@leaf aladdin1218 (master)]$$ scala272 a.scala 
Exception in thread "Thread-1" java.lang.ArithmeticException
	at Main$$$$anon$$2$$Test$$Abstract.apply((virtual file):13)
	at Main$$$$anon$$2$$Test$$MyThread.run((virtual file):30)
[paulp@leaf aladdin1218 (master)]$$ scala273 a.scala 
Exception in thread "Thread-1" java.lang.NoClassDefFoundError: Main$$$$anon$$2$$Test$$Abstract$$$$anon$$1
	at Main$$$$anon$$2$$Test$$MyHolder.<init>((virtual file):23)
	at Main$$$$anon$$2$$Test$$MyThread.run((virtual file):30)
{code}
On the aladdin page lex says "A better solution would be to compile and run from in-memory byte arrays, thus avoiding this cleanup entirely" but strangely enough (if I'm remembering the timing right) this regression took place at around the same time he implemented just that.
