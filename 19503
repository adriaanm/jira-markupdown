When converting back a ParVector or ParRange to a Vector using ++ is inconsistent checking this issue on scala 2.10.4 works fine , but in scala 2.11.4 the is inconsistent probleam.

the code:
val d = (0 to 1)
val p = d.par
val res = Vector.empty ++ p

REPL output

scala> val d = (0 to 1)
d: scala.collection.immutable.Range.Inclusive = Range(0, 1)
scala> val p = d.par
p: scala.collection.parallel.immutable.ParRange = ParRange(0, 1)
scala> val res = Vector.empty ++ p
res: scala.collection.immutable.Vector[Int] = Vector(0, 1)
scala> val res = Vector.empty ++ p
res: scala.collection.immutable.Vector[Int] = Vector(0, 1)
scala> val res = Vector.empty ++ p
res: scala.collection.immutable.Vector[Int] = Vector(1)
scala> val res = Vector.empty ++ p
res: scala.collection.immutable.Vector[Int] = Vector(1)
scala> val res = Vector.empty ++ p
res: scala.collection.immutable.Vector[Int] = Vector(0, 1)
scala> val res = Vector.empty ++ p
res: scala.collection.immutable.Vector[Int] = Vector(0, 1)
scala> val res = Vector.empty ++ p
res: scala.collection.immutable.Vector[Int] = Vector(1)
scala> val res = Vector.empty ++ p
res: scala.collection.immutable.Vector[Int] = Vector(0, 1)
scala> val res = Vector.empty ++ p
res: scala.collection.immutable.Vector[Int] = Vector(0, 1)

i have also attached 2 outputs of a scala REPL for vesion 2.11.4 & 2.10.4
