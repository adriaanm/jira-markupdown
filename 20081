This is fairly minimized:

{code}
package a

case class B(c: collection.mutable.Map[Int, Int]) {
  def d(): Unit = c(undefinedSymbol) += 1
}
{code}

and crashes with the error:

{code}symbol value <error>#15064 does not exist in a.B.d, which contains locals{code}

(that last line is not truncated but has a space at the end of it in my terminal)

It's (obviously) illegal, but it generates a compiler crash, so I thought it might be interesting.
