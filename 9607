Are you sure?

I see at least the the minimized snippet crashing from 2.10.0-M1 until the present day.

{noformat}
  /code/scala cat sandbox/t7459.scala
package test

class LM {
  class Node[B1]

  // crash
  val f: (LM => Any) = {
    case t => new t.Node[Any]()
  }

  // okay
  val g: (LM => Any) = {
    t => new t.Node[Any]()
  }
}
  /code/scala RUNNER=scalac scala-hash master sandbox/t7459.scala 2>&1 | grep "symbol value t"
error: symbol value t does not exist in test.LM.<init>
symbol value t does not exist in test.LM.<init>") @ scala.reflect.internal.SymbolTable.abort(SymbolTable.scala:51)
symbol value t does not exist in test.LM.<init>

  /code/scala RUNNER=scalac scala-hash v2.10.1 sandbox/t7459.scala 2>&1 | grep "symbol value t"
error: symbol value t does not exist in test.LM.<init>
symbol value t does not exist in test.LM.<init>

  /code/scala RUNNER=scalac scala-hash v2.10.0 sandbox/t7459.scala 2>&1 | grep "symbol value t"
error: symbol value t does not exist in test.LM.<init>
symbol value t does not exist in test.LM.<init>
symbol value t does not exist in test.LM.<init>

  /code/scala RUNNER=scalac scala-hash v2.10.0-M1 sandbox/t7459.scala 2>&1 | grep "symbol value t"
error: symbol value t does not exist in test.LM$$anonfun$1.apply
error: scala.reflect.internal.FatalError: symbol value t does not exist in test.LM$$anonfun$1.apply
error: fatal error: symbol value t does not exist in test.LM$$anonfun$1.apply
{noformat}
