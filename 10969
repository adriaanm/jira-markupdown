If you have an implementation for `a` in the superclass and it is overriden in the subclass, the superclass impl will only be called if the overriding impl calls `super.a`.
```scala
class C  { val x: T = y  }
```

is a sugar for:
```scala
class C { 
 def this() { _x = y }
 <field> _x: T = null;
  def x: T = _x;
}
```

We are discussing the possibility of a lint tool for Scala. That could do a whole-program analysis and detect some of these problems. But the compiler can't do this reliably, as it needs to be able to compiler the sub- and super-classes independentally.
