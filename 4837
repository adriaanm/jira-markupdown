I'm closing this ticket as Not-a-bug because its underlying assumption, namely that `TypeKind.lub` should be used in the jvm6 backend, simply doesn't hold and never will. 

Instead `TypeKind.lub` is fine for the uses it is called for ({{GenICode}}, `ICodeCheckers`, and type-flow analysis). In fact, for those uses, `TypeKind.lub` *should stay as-is*.

As an aside, the following excerpt from `GenASM` shows how lubs are computed the JVM way:
```
  @inline final private def jvmWiseLUB(a: Symbol, b: Symbol): Symbol = {

    assert(a.isClass)
    assert(b.isClass)

    val res = Pair(a.isInterface, b.isInterface) match {
      case (true, true) =>
        global.lub(List(a.tpe, b.tpe)).typeSymbol // TODO assert == firstCommonSuffix of resp. parents
      case (true, false) =>
        if(b isSubClass a) a else ObjectClass
      case (false, true) =>
        if(a isSubClass b) b else ObjectClass
      case _ =>
        firstCommonSuffix(superClasses(a), superClasses(b))
    }
    assert(res != NoSymbol)
    res
  }
```

