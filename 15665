Given:
{code}
object SomeScalaObject extends SomeUsefulInterface {
  def doStuff = ...
}
{code}

This is easy in Java:
{code}
SomeScalaObject.doStuff();
{code}

However, this common Scala idiom makes an already bad Java situation worse:
{code}
void doStuffWithAUsefulThing(SomeUsefulInterface stuffDoer) {
  ...
}

doStuffWithAUsefulThing(SomeScalaObject$$.MODULE$$);
{code}

----

This is what I usually do to work around it:

Scala:
{code}
object SomeScalaObject {
  def it = this
}
{code}

Java:
{code}
  doStuffWithAUsefulThing(SomeScalaObject.it());
{code}

Can we get something similar generated for us poor borderlands refugees?  "it" is probably not an optimal name, but maybe "instance"?

Thanks!
