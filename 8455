Here's a little comment I've had in the compiler source a long time.  The OVERRIDE flag (which is what isOverride checks) only reliably corresponds to the word "override" appearing in source.
{code}
    // !!! When if ever will this answer differ from .isOverride?
    // How/where is the OVERRIDE flag managed, as compared to how checks
    // based on type membership will evaluate?
    def isOverridingSymbol = owner.isClass && (
      owner.ancestors exists (cls => matchingSymbol(cls, owner.thisType) != NoSymbol)
    )
{code}
