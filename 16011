This looks similar to scala/bug#3651, but not identical.  Bug also exists in 2.8.1.  It seems like I need all four classes to induce it (presumably because a cycle forms among three of them.)
```scala
object Test {
  def main(args: Array[String]): Unit = {
    new BooleanPropImpl() value
  }
}

trait Prop[@specialized(Boolean) +T] {
  def value: T
}
class PropImpl[+T] extends Prop[T] {
  def value: T = scala.sys.error("")
}

trait BooleanProp extends Prop[Boolean] {
  def value: Boolean
}
class BooleanPropImpl() extends PropImpl[Boolean] with BooleanProp { }
```
```scala
java.lang.StackOverflowError
	at Prop$$mcZ$$sp$$class.value(a.scala:8)
	at BooleanPropImpl.value(a.scala:17)
	at BooleanPropImpl.value(a.scala:17)
	at Prop$$class.value$$mcZ$$sp(a.scala:8)
	at PropImpl.value$$mcZ$$sp(a.scala:10)
	at Prop$$mcZ$$sp$$class.value(a.scala:8)
	at BooleanPropImpl.value(a.scala:17)
	at BooleanPropImpl.value(a.scala:17)
```
