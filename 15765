When the body of a method uses "return" and the finally block throws an exception, the finally block is re-run.

The problem is present in 2.8.0.final and in 2.8.1.RC4.

{code}
Welcome to Scala version 2.8.1.RC4 (Java HotSpot(TM) 64-Bit Server VM, Java 1.6.0_21).
Type in expressions to have them evaluated.
Type :help for more information.

scala> def foo: String = { try { return "body" } finally { println("cleanup") ; throw new Exception } }
foo: String

scala> foo                                                                                             
cleanup
cleanup
java.lang.Exception
	at .foo(<console>:5)
	at .<init>(<console>:7)
	at .<clinit>(<console>)
	at RequestResult$$.<init>(<console>:9)
	at RequestResult$$.<clinit>(<console>)
	at RequestResult$$scala_repl_result(<console>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at scala.tools.nsc.Interpreter$$Request$$$$anonfun$$loadAndRun$$1$$$$anonfun$$apply$$17.apply(Interpreter.scala:988)
	at scala.tools.nsc.Interpreter$$Request$$$$anonfun$$loadAndRun$$1$$$$anonfun$$apply$$17.apply(Interpreter.scala:988)
	at scala.util.control.Exception$$Catch.apply(Exception.scala:79)
	at scal...
{code}
