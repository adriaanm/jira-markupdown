Hi Paul

ok, I might have confused you with a not very well crafted sample
here is a better one:
{code}
class c{def f[B](b: B):Int = 1; def f(b: AnyRef):String = "" }
{code}
this shouldn't compile, since these samples
{code}
 class c{def f[B](b: B):Int = 1; def f(b: AnyRef):Int = 1 }
{code}
{code}
class c{def f(b: AnyRef):Int = 1; def f(b: AnyRef):String = "" }
{code}
do not

otherwise it seems overloading by return type is allowed and only if one of the methods is generic and the other is not
would be happy if you could point me to a relevant section in the spec which allows this
