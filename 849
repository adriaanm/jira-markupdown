As a design goal, I wanted the Scalac Ant task to do as little “magic” as possible. One major source of magic (and in my experience of problems when distributing a build script like SABBUS) is which library some code is compiled against. That is why the Scalac Ant task requires that information to be provided explicitly.

One tool that may mitigate the usability problem you mention would be a Scala auto-find task that creates a classpath reference (to be used to instantiate the Scalac Ant task, or as compilation classpath) to the “default” Scala library on the computer. To do that, it would use environment variables, default installation places etc. to browse through the users' disk and find the “best” Scala installation. One could then write scripts like that:
```scala
<scalafind compPathId="scp" libPathId="lcp"/>
<taskdef resource="scala/tools/ant/sabbus/antlib.xml" classpathref="scp"/>
<scalac srcdir="…" … classpathref="lcp"/>
```

By all means, if anyone want to contribute a task like that, do it! But for changing the Scalac Ant task, I am definitely not in favour.
