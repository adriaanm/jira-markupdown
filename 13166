This code
```scala
trait Test
{
  def foo(a : Array[Int]) = {
    a.foreach { i => println(i) }
  }
}
```

generates the following warning from findbugs 1.3.2:
```scala
class Test$$$$anonfun$$foo$$1 defines non-transient non-serializable instance
```

with this explanation:
```scala
Non-transient non-serializable instance field in serializable class

This Serializable class defines a non-primitive instance field which is
neither transient, Serializable, or java.lang.Object, and does not appear
to implement the Externalizable interface or the readObject() and
writeObject() methods.  Objects of this class will not be deserialized
correctly if a non-Serializable object is stored in this field.
```

Should this anonymous class only be serializable if the $$outer class
is serializable?
