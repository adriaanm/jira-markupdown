I see two problems here. Let's look at them with this minimization:
```scala
trait ApiUniverse {
  protected trait TreePrinter
  protected def newCodePrinter: TreePrinter
}

trait InternalSymbolTable extends ApiUniverse {
  class TreePrinter extends super.TreePrinter
  def newCodePrinter: TreePrinter = null
}

abstract class Global extends InternalSymbolTable {
  class TreePrinter extends super.TreePrinter
}

trait Broke extends Global {
  override def newCodePrinter: TreePrinter = super.newCodePrinter
}

trait Okay extends Global {
  override def newCodePrinter /*: super[InternalSymbolTable].TreePrinter !!! */
    = super.newCodePrinter
}
```

Firstly, CodePrinter is not designed for reuse in a virtual-class-like setup. It's a class, rather than a trait, and as such can never conform to `Global.this.TreePrinter`, which is a subclass of `SymbolTable.this.TreePrinter`.

Secondly, return type inference based on inheritance lets you express a type that isn't expressible directly.
```
qscalac -Xprint:typer -uniqid sandbox/t8777.scala 2>&1 | egrep 'Printer|trait|class' | grep -v init
 found   : Broke#7652.this.TreePrinter#14744
 required: Broke#7652.this.TreePrinter#15802
  override def newCodePrinter: TreePrinter = super.newCodePrinter
  abstract trait ApiUniverse#7646 extends scala#20.AnyRef#2681 {
    abstract protected trait TreePrinter#7997 extends scala#20.AnyRef#2681;
    protected def newCodePrinter#7998: ApiUniverse#7646.this.TreePrinter#7997
  abstract trait InternalSymbolTable#7712 extends AnyRef#2681 with ApiUniverse#7646 {
    class TreePrinter#14744 extends AnyRef#2681 with InternalSymbolTable#7712.this.TreePrinter#7997 {
    def newCodePrinter#14745: InternalSymbolTable#7712.this.TreePrinter#14744 = null
  abstract class Global#7682 extends AnyRef#2681 with InternalSymbolTable#7712 {
    class TreePrinter#15802 extends Global#7682.super.TreePrinter#14744 {
  abstract trait Broke#7652 extends Global#7682 {
    override def newCodePrinter#15809: Broke#7652.this.TreePrinter#15802 = Broke#7652.super.<newCodePrinter: error>
  abstract trait Okay#7757 extends Global#7682 {
    override def newCodePrinter#25163: Okay#7757.this.TreePrinter#14744 = Okay#7757.super.newCodePrinter#14745
```

Note the reference to `Okay#7757.this.TreePrinter#14744` in the last line above.
