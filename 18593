Error message on the wrong shape of macro definition like:
{code}
import scala.reflect.macros.Context
import scala.language.experimental.macros
object muuu {
  def apply() = macro impl
  def impl(c: Context): c.Tree = ???
}
{code}
That currently looks like:
{noformat}
test.scala:4: error: macro implementation has wrong shape:
 required: (c: scala.reflect.macros.Context)(): c.Expr[Any]
 found   : (c: scala.reflect.macros.Context): c.Tree
number of parameter sections differ
  def apply() = macro impl
      ^
one error found
{noformat}
Is a bit confusing because c.Tree is indeed a legal return type, you don't have to wrap everything into c.Expr any more. (The real problem here is mismatch between shapes of the arguments lists.)
