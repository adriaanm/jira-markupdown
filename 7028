Basically I don't think we can eliminate any local stores to reference types because of gc and/or weak/phantom observability. For instance
```scala
def foo = {
  var x = new HumungoObject
  // use x
  x = new SmallObject
  blah()
}
```

The reassignment to x frees up the reference to the HumungoObject, making it elligible for gc and freeing up memory for blah() to work.

Maybe there are some heuristics we could use like eliminating a local store that's the last instruction of a method before a return or some such. But whatever we come up with is bound to catch relatively few cases and probably won't be worth the effort.
