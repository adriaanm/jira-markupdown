```scala

scala>   def printList(in: List[String]): Unit = in match {
     |     case Nil => Unit
     | 
     |     case (s: String) :: Nil =>
     |       println(s)
     | 
     |     case head :: (s: String) :: Nil =>
     |       printList(head :: Nil)
     |       for(i <- head){
     |         print(i)
     |       }
     |       println
     |       println(s)
     |   }
<console>:9: warning: match may not be exhaustive.
It would fail on the following input: List(_, _, _)
         def printList(in: List[String]): Unit = in match {
                                                 ^
```
```scala

scala> def f(x: (List[Int], List[Int])) = x match { case (x :: Nil, y :: Nil) => 1 ; case (Nil, Nil) => 2 }
<console>:9: warning: match may not be exhaustive.
It would fail on the following inputs: (List(_), List(_, _)), (List(_, _), List(_)), (List(_, _), List(_, _))
       def f(x: (List[Int], List[Int])) = x match { case (x :: Nil, y :: Nil) => 1 ; case (Nil, Nil) => 2 }
                                          ^
```
