When unzip() and unzip3() are applied to an Array, they return something of type IndexedSeq instead of Array. Various other functions (e.g. sortBy(), transpose()) do the right thing on arrays.
```scala
scala> val x = Array(Array(3,6),Array(4,7),Array(5,8))
x: Array[Array[Int]] = Array(Array(3, 6), Array(4, 7), Array(5, 8))

scala> x.transpose
res0: Array[Array[Int]] = Array(Array(3, 4, 5), Array(6, 7, 8))

scala> val x = Array((5,Array(1.2,2.5)), (6,Array(3.4,6.7)))
x: Array[(Int, Array[Double])] = Array((5,Array(1.2, 2.5)), (6,Array(3.4, 6.7)))

scala> x.unzip
res1: (scala.collection.mutable.IndexedSeq[Int], scala.collection.mutable.IndexedSeq[Array[Double]]) = (ArrayBuffer(5, 6),ArrayBuffer(Array(1.2, 2.5), Array(3.4, 6.7)))

scala> val x = Array(("foo",5,Array(1.2,2.5)), ("bar",6,Array(3.4,6.7)))
x: Array[(String, Int, Array[Double])] = Array((foo,5,Array(1.2, 2.5)), (bar,6,Array(3.4, 6.7)))

scala> x.unzip3
res2: (scala.collection.mutable.IndexedSeq[String], scala.collection.mutable.IndexedSeq[Int], scala.collection.mutable.IndexedSeq[Array[Double]]) = (ArrayBuffer(foo, bar),ArrayBuffer(5, 6),ArrayBuffer(Array(1.2, 2.5), Array(3.4, 6.7)))
```

This hasn't changed in the latest Scala 2.11 code.
