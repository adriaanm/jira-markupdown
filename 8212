Apparently, the first compilation creates a classfile for `p.x.x` which has a static field `foo`:
```scala
Compiled from "file_1.scala"
public class p.x$x extends java.lang.Object
  SourceFile: "file_1.scala"
  Scala: length = 0x
   
...

const #20 = Asciz	SourceFile;
const #21 = Asciz	Scala;

{
public static int foo;

...

}
```

During the second compilation, during icode, members of `p.x.x` are missing `foo`:
```scala
Scope{
  def <init>(): p.y$x;
  final def $asInstanceOf[T0 >: ? <: ?](): T0;
  final def $isInstanceOf[T0 >: ? <: ?](): Boolean;
  final def synchronized(x$1: Object): Object;
  final def ##(): Int;
  final def !=(x$1: Object): Boolean;
  final def ==(x$1: Object): Boolean;
  final def ne(x$1: Object): Boolean;
  final def eq(x$1: Object): Boolean;
  protected[package lang] def finalize(): Unit;
  final def wait(): Unit;
  final def wait(x$1: Long,x$2: Int): Unit;
  final def wait(x$1: Long): Unit;
  final def notifyAll(): Unit;
  final def notify(): Unit;
  def toString(): String;
  protected[package lang] def clone(): Object;
  def equals(x$1: Object): Boolean;
  def hashCode(): Int;
  final def getClass(): Class;
  def <init>(): Object
}
```
