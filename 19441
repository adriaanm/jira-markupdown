The ScalaDoc tool is breaking on a mixed Java/Scala project because it seems unable to properly parse Java code with an inherited inner enum.  I have recreated the problem with a very small test project.

Consider the two classes:
```scala
public abstract class AbstractPolygon {

    public static enum Color {
        RED,
        GREEN,
        BLUE;
    }

    private final Color color;
    private final int sides;

    public AbstractPolygon (final Color color, final int sides) {
        this.color = color;
        this.sides = sides;
    }
}

public class Triangle extends AbstractPolygon {

    private final double angle1;
    private final double angle2;

    public Triangle (final Color color, final double angle1, final double angle2) {
        super(color, 3);
        this.angle1 = angle1;
        this.angle2 = angle2;
    }
}
```

The above java code is valid, yet the ScalaDoc tool will complain processing `Triangle.java` saying:
{quote}error: not found: type Color{quote}

I have attached a sample project that recreates the issue.  Simply do the following to reproduce:  `mvn clean install site`

Note that a workaround is to explicitly import the enum.  So, for `Triangle.java`, ScalaDoc will work if the following is added:
```scala
import com.acme.AbstractPolygon.Color;
```
(Unfortunately, then this creates a style issue in the Java code since that import is not necessary.)
