After moving Scala to Github, all required libraries are no longer included in the repository. Included is a suggested solution for Windows (and Unix) users by letting Ant handle downloads.

Caveats:
 - Requires Ant 1.8.
 - Requires {{lib/ant/ant-contrib.jar}} (230kb) to be included in the repository.
 - Untested for Linux, Mac, and older Windows versions.
 - {code}<taskdef resource="net/sf/antcontrib/antlib.xml" classpath="${lib.dir}/ant/ant-contrib.jar"/>{code} should be relocated. Is defined twice.

To try out the updated build script, add the following modifications to your Scala 2.10 {{build.xml}}:
{code:xml|title=build.xml|borderStyle=solid}
...
  <!-- Set library bootstrap options -->
  <property name="bootstrap-libs.repo" value="http://typesafe.artifactoryonline.com/typesafe/scala-sha-bootstrap/org/scala-lang/bootstrap"/>
  <property name="bootstrap-libs.ext" value="desired.sha1"/>
...
  <target name="starr.bootstrap-lib">
    <!-- Load required checksum -->
    <property name="lib.checkfile-relative" location="${lib.checkfile}" relative="yes" basedir="${basedir}"/>
    <loadfile property="checksum.content" srcfile="${lib.checkfile}"/>
    <propertyregex property="checksum.required" input="${checksum.content}" regexp="[0-9a-z]+"
                   select="\0" casesensitive="false"/>
    <!-- Download the library -->
    <propertyregex property="lib.name" input="${lib.checkfile-relative}" regexp=".${bootstrap-libs.ext}"
                   replace="" casesensitive="false"/>
    <propertyregex property="lib.name-unix" input="${lib.name}" regexp="\\"
                   replace="/" casesensitive="false" global="true"/>
    <property name="lib.url" value="${bootstrap-libs.repo}/${checksum.required}/${lib.name-unix}"/>
    <get dest="${basedir}/${lib.relative-dir}">
      <url url="${lib.url}"/>
    </get>
    <!-- Validate checksum -->
    <property name="lib.file" location="${basedir}/${lib.name}"/>
    <checksum file="${lib.file}" algorithm="sha" property="checksum.generated"/>
    <condition property="checksum.check">
      <equals arg1="${checksum.required}" arg2="${checksum.generated}"/>
    </condition>
    <fail unless="${checksum.check}">Checksum mismatch for ${lib.checkfile}. Got ${checksum.generated} when required ${checksum.required}.</fail>
  </target>

  <target name="starr.bootstrap-libdir">
    <property name="libdir.relative" location="${libdir}" relative="yes" basedir="${basedir}"/>
    <!-- Iterate over all libraries in current dir -->
    <for param="elem">
      <path><fileset dir="${libdir}" includes="*.sha1"/></path>
      <sequential>
        <antcall target="starr.bootstrap-lib" inheritRefs="true">
          <param name="lib.checkfile" value="@{elem}"/>
          <param name="lib.relative-dir" value="${libdir.relative}"/>
        </antcall>
      </sequential>
    </for>
  </target>

  <target name="init.starr" if="starr.absent">
    <echo level="warn" message="Downloading bootstrap libs."/>
    <!-- Iterate over all library dirs -->
    <for param="elem">
      <path><dirset dir="${lib.dir}"/></path>
      <sequential>
        <antcall target="starr.bootstrap-libdir" inheritRefs="true">
          <param name="libdir" value="@{elem}"/>
        </antcall>
      </sequential>
    </for>
  </target>
{code}
