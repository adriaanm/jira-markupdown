Implicit case classes are broken, because the type of the class and the type of the object are being mixed up:
```scala

scala> implicit case class IntOps( i: Int ) {
     |    def twice = i * 2
     | }
defined class IntOps

scala> 11 : IntOps
<console>:10: error: ambiguous reference to overloaded definition,
both method IntOps of type (i: Int)IntOps
and  object IntOps of type IntOps.type
match argument types (Int) and expected result type IntOps
              11 : IntOps
              ^
```
