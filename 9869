The docs for DelayedInit says:
```
Classes and objects (but note, not traits) inheriting the DelayedInit marker trait will have their initialization code rewritten as follows: code becomes delayedInit(code).
Initialization code comprises all statements and all value definitions that are executed during initialization.
```

This gives the impression that `code` is *all statements* and so that `delayedInit` would be executed exactly once for each instance. If it's not the case, how many times it gets executed?
