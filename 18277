```scala
class Bar

abstract class Cake extends Slice {
  val bar: Bar
}

trait Slice { self: Cake =>
  import bar._
  lazy val Foo(x, y) = foo
  private case class Foo(x: Int, y: Int)
  private lazy val foo: Foo = ???
}
```
```scala
20:50 ~/Projects/210x/sandbox (2.10.x)$ s
Test.scala:9: error: not found: value x$1
  lazy val Foo(x, y) = foo
               ^
Test.scala:9: error: not found: value x$1
  lazy val Foo(x, y) = foo
                  ^
two errors found
```
