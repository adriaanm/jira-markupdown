This is not specific to macro annotations. For example, this will also spuriously fail to compile:
```scala
import scala.reflect.macros.Context
import scala.language.experimental.macros

class qqq(count: Int) {
  def macroTransform(annottees: Any*):Any = macro qqq.qqqImpl
}

object qqq {
  def qqqImpl(c: Context)(annottees: c.Expr[Any]*):c.Expr[Any] = ???
}
```

The key here is that the object that defines a macro impl has a companion with a constructor that takes a primitive. If you rename either the object or its companion, everything will start working again.
