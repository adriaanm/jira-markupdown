OK, so taking a moment to diff the trees after the typer gives me:

{code}
11,13c11,13
<                         Select( // sym=method getClass, sym.owner=class Object, sym.tpe=()Class[_], tpe=()Class[_ <: A2[Int,Nothing]], tpe.sym=<none>
<                           Apply( // sym=method m, tpe=A2[Int,Nothing], tpe.sym=class A2, tpe.sym.owner=package <empty>, tpe.decls=List(value t: T, , value w: T, , constructor A2: (t: T, w: T)A2[T,W], )
<                             TypeApply( // sym=method m, tpe=(t: Int, w: Int)A2[Int,Nothing], tpe.sym=<none>
---
>                         Select( // sym=method getClass, sym.owner=class Object, sym.tpe=()Class[_], tpe=()Class[_ <: A2[Int,Int]], tpe.sym=<none>
>                           Apply( // sym=method m, tpe=A2[Int,Int], tpe.sym=class A2, tpe.sym.owner=package <empty>, tpe.decls=List(value t: T, , value w: T, , constructor A2: (t: T, w: T)A2[T,W], )
>                             TypeApply( // sym=method m, tpe=(t: Int, w: Int)A2[Int,Int], tpe.sym=<none>
26c26
<                               TypeTree() // sym=trait Nothing, tpe=Nothing, tpe.sym=trait Nothing, tpe.sym.owner=package scala
---
>                               TypeTree() // sym=class Int, tpe=Int, tpe.sym=class Int, tpe.sym.owner=package scala
{code}

Looking at the code just before specialize is the same. It seems clear that that "Nothing" is the problem, although I'm not sure why this is happening. Time for more tests.
