Another example cut down from a hamcrest based one
```scala
package object traitor {
  trait Matcher[X <: AnyRef]{}
  
  object Problem2{
    def allOf[X](x: Matcher[_ >: X], y: Matcher[_ >: X]) = new Matcher[X](){}
    def allOf[X](x: Matcher[_ >: X]*) = new Matcher[X](){}
  }
}

object ProblemMaker {
  import traitor._
  
  def equalTo[X](x: X) = new Matcher[X](){}
  val a = equalTo("g")
  val b = Problem2.allOf(a)
  val c = Problem2.allOf(a,a)
}
```
