OK I think its worth doing and I will have a crack at it.

After looking into the Java code, it seems reasonable to add the trim() and make the Scala double/int handling consistent.
It does not seem to add any major performance concerns. 
Anyone relying on the java behaviour (not documented in scala) can always call the java parseInt.

Notes from java code:
- First thing the java.lang.Double.parseDouble does is trim() on the string, then (and which throws NPE on null), and then goes into the parsing logic.
 http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8u40-b25/java/lang/Double.java#Double.parseDouble%28java.lang.String%29 

- First thing the java.lang.Integer.parseInt does is look check for null (and instead throws NumberFormatException: null) and then goes into the parsing logic.
 http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8u40-b25/java/lang/Integer.java#Integer.parseInt%28java.lang.String%29 
