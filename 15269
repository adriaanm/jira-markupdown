`def isValid(sym: Symbol)` in Implicits should return false for `orderEntries` in the following example, but it says all is well instead:
```scala
class Entry(time: Long) {
 def getTime: Long = time
}

object Test {
def extractTime(e: Entry) = e.getTime

implicit val orderEntries = new Ordering[Entry] {
 def compare(first: Entry, second: Entry) = extractTime(first) compare extractTime(second)
}
}
```

the following conditions are true erroneously:
```scala
sym.isInitialized
hasExplicitResultType(sym)
comesBefore(sym, context.owner)
```
