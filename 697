I have looked at the icfx project on sourceforge and it looks very similar to the project I have found on http://code.google.com/p/netgents/ It is also a JSR-223 implementation for Scala, but writtern in Scala. If I have found the icfx page before then I would make the improvements for this version. However, before this, I sent some patches to the netgents project author to make more JSR-223 compliant. Maybe some of this code could be used to improve also the icfx project. I currently have no time to integrate it, but maybe someone could make it. 

My approach for discovering types is simple:
value.getClass.getName
There are at least two catches:
1) Specifying types in the form value:type as it was before is still useful, as sometimes script need some interfaces rather then implementations i.e. in Java   List list = new ArrayList();\
2) If we bind value 1 to some variable name it gets boxed to new Integer(1), current Scala interpreter shows deprecation warning when it encounters such value. new Integer(1) + 2 in Scala doesn't work. This is why basic types mapping is needed i.e. java.lang.Integer => Int and int => Int. When value is bound to intepreter using type Int and real value Integer(1) interpreter doesn't complain and value is passed correctly.

I have also added some code to make the script use scriptResult variable rather then result(0) because it looks perlish/magical

The project I mention also has some junit tests that I wrote which should work with any jsr223 implementation for Scala. It also could be useful to integrate it with the icfx project. 

If there are some downsides related to the way I did the type bindings, then I would happily like to hear about them. 
