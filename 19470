Compiling our project fails with NPE:
{noformat}
java.lang.NullPointerException
        at scala.tools.nsc.transform.Mixin$MixinTransformer.scala$tools$nsc$transform$Mixin$MixinTransformer$$postTransform(Mixin.scala:1154)
        at scala.tools.nsc.transform.Mixin$MixinTransformer$$anonfun$transform$1.apply(Mixin.scala:1261)
        at scala.tools.nsc.transform.Mixin$MixinTransformer$$anonfun$transform$1.apply(Mixin.scala:1261)
        at scala.reflect.internal.SymbolTable.enteringPhase(SymbolTable.scala:235)
        at scala.reflect.internal.SymbolTable.exitingPhase(SymbolTable.scala:256)
        at scala.tools.nsc.transform.Mixin$MixinTransformer.transform(Mixin.scala:1261)
        at scala.tools.nsc.transform.Mixin$MixinTransformer.transform(Mixin.scala:468)
        at scala.reflect.internal.Trees$class.itransform(Trees.scala:1340)
        at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:16)
        at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:16)
        at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2555)
        at scala.tools.nsc.transform.Mixin$MixinTransformer.transform(Mixin.scala:1258)
        at scala.tools.nsc.transform.Mixin$MixinTransformer.transform(Mixin.scala:468)
        at scala.reflect.internal.Trees$$anonfun$itransform$1.apply(Trees.scala:1350)
        at scala.reflect.internal.Trees$$anonfun$itransform$1.apply(Trees.scala:1349)
        at scala.reflect.api.Trees$Transformer.atOwner(Trees.scala:2600)
        at scala.reflect.internal.Trees$class.itransform(Trees.scala:1348)
        at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:16)
        at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:16)
        at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2555)
        at scala.tools.nsc.transform.Mixin$MixinTransformer.transform(Mixin.scala:1258)
        at scala.tools.nsc.transform.Mixin$MixinTransformer.transform(Mixin.scala:468)
        at scala.reflect.api.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:2589)
        at scala.reflect.api.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:2587)
        at scala.collection.immutable.List.loop$1(List.scala:172)
        at scala.collection.immutable.List.mapConserve(List.scala:188)
        at scala.reflect.api.Trees$Transformer.transformStats(Trees.scala:2587)
        at scala.reflect.internal.Trees$class.itransform(Trees.scala:1359)
        at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:16)
        at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:16)
        at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2555)
        at scala.tools.nsc.transform.Mixin$MixinTransformer.transform(Mixin.scala:1258)
        at scala.tools.nsc.transform.Mixin$MixinTransformer.transform(Mixin.scala:468)
        at scala.reflect.internal.Trees$$anonfun$itransform$2.apply(Trees.scala:1356)
        at scala.reflect.internal.Trees$$anonfun$itransform$2.apply(Trees.scala:1354)
        at scala.reflect.api.Trees$Transformer.atOwner(Trees.scala:2600)
        at scala.reflect.internal.Trees$class.itransform(Trees.scala:1353)
        at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:16)
        at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:16)
        at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2555)
        at scala.tools.nsc.transform.Mixin$MixinTransformer.transform(Mixin.scala:1258)
        at scala.tools.nsc.transform.Mixin$MixinTransformer.transform(Mixin.scala:468)
        at scala.reflect.api.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:2589)
        at scala.reflect.api.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:2587)
        at scala.collection.immutable.List.loop$1(List.scala:172)
        at scala.collection.immutable.List.mapConserve(List.scala:188)
        at scala.reflect.api.Trees$Transformer.transformStats(Trees.scala:2587)
        at scala.reflect.internal.Trees$class.itransform(Trees.scala:1397)
        at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:16)
        at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:16)
        at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2555)
        at scala.tools.nsc.transform.Mixin$MixinTransformer.transform(Mixin.scala:1258)
        at scala.tools.nsc.transform.Mixin$MixinTransformer.transform(Mixin.scala:468)
        at scala.reflect.api.Trees$Transformer.transformTemplate(Trees.scala:2563)
        at scala.reflect.internal.Trees$$anonfun$itransform$4.apply(Trees.scala:1401)
        at scala.reflect.internal.Trees$$anonfun$itransform$4.apply(Trees.scala:1400)
{noformat}

Code causing this:
{code}
val survey = SurveyDefinitionTest.create(modules = Seq(ModuleDefinitionTest.create(
  `type` = ModuleType.closed,
  moduleItems = WrapAsScala.asScalaBuffer(items).map(itemCode => ModuleItemDefinitionTest.create(itemCode, identifying = true)))
))
// type must be explicit or compilation fails with NPE
val modules: Map[String, Module] = Statement.createModules(survey.modules))
val strValues = modules.flatMap(_._2.asInstanceOf[ClosedModule].getValues.flatMap(_.value))
strValues.mkString("[", ", ", "]")
{code}

When there is no type annotation on {{val modules}}, then compilation fails with NPE. When type is present, compilation works fine. All called methods have explicit types:
{code}
object SurveyDefinitionTest {
  def create(...): SurveyDefinition 
}

object Statement {
  def createModules(metadata: Seq[ModuleDefinition]): Map[String, Module]
}
{code}

I tried to distill test case from our complicated project, but there were no further compiler failures. Is there any way to pin this failure (e.g. some output from scalac that will help)?

But even in this distilled example (see attachment) compiler results were somewhat strange:
* no type annotations on {{val survey}} and {{val modules}} fails with compiler error *recursive value survey needs type*
* type annotation on {{val modules}} or {{val survey}} *compiles successfully*
