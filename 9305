Minimized:
{code}
class S {
  def s[T](x: Traversable[_ <: T]): Seq[T] = ???
  def s[T](x: Iterable[_ <: T]): Seq[T] = ???
  s[Int](Vector(1)) // ok
  s(Vector(1)) // fail
}
{code}
{code}
<console>:11: error: ambiguous reference to overloaded definition,
both method s in class S of type [T](x: Iterable[_ <: T])Seq[T]
and  method s in class S of type [T](x: Traversable[_ <: T])Seq[T]
match argument types (scala.collection.immutable.Vector[Int])
         s(Vector(1)) // fail
         ^
{code}
