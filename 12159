So I've spent a bit of time attempting to write automated tests for this. Using [~retronym]'s change as a starting point (the "make it work" flag is really useful for testing, but I'm guessing no one wants to keep it like that) it's easy enough to create tests that will fail on Windows.... but pass on unix.

Does anyone have any advice on how to check if a file is open in general? I know it's one of those annoying java problems, but expected to find something clever in the tests around io.Source (which I can't). Right now I'm assuming that's because they ran into exactly this problem and decided it had to be tested manually.

I'll keep working on this over the next day or so, but so you can see roughly what I'm trying to add to `ZipArchiveTest`
```scala

  @Test
  def closeFile: Unit = {
    System.setProperty("scala.classpath.closezip", "true")

    val f = createTempZipFile
    val fza = new FileZipArchive(createTempZipFile)

    fza.iterator

    System.clearProperty("scala.classpath.closezip")

    assertTrue(f.canWrite) // ie File is closed (on Windows)

    f.delete
  }

  @Test
  def leaveFileOpen: Unit = {
    val f = createTempZipFile
    val fza = new FileZipArchive(f)

    fza.iterator

    assertFalse(f.canWrite) // ie File is still open (on Windows anyway)
  }

  def createTempZipFile = {
    val f = JFile.createTempFile("test", ".zip")
    val zf = new ZipOutputStream(new FileOutputStream(f))
    zf.putNextEntry(new ZipEntry("data"))
    zf.close()
    f
  }
```
