{{Reifier.reify(Tree)}} does not implement the case {{TypeTree}}.

{code}
object Reflection1 extends Application {
  case class Element(name: String)
  println(reflect.Code.lift({val e = Element("someName"); e}).tree)
}
{code}

creates the compiler-tree

{code}
Apply(
  Select(
    New(TypeTree(Reflection1.Element)),
    <init>
  ),
  Literal("someName")
)
{code}

proposed fix:

{code}
Index: src/compiler/scala/tools/nsc/transform/Reifiers.scala
===================================================================
--- src/compiler/scala/tools/nsc/transform/Reifiers.scala       (revision 14384)
+++ src/compiler/scala/tools/nsc/transform/Reifiers.scala       (working copy)
@@ -251,7 +251,11 @@
       case Block(stats, expr) =>
         reflect.Block(stats.map(reify), reify(expr))
       case New(clazz) =>
-        val reifiedClass = reify(clazz)
+        val reifiedClass =
+          if (clazz.isType)
+            reflect.Ident(reify(clazz.symbol))
+          else
+            reify(clazz)
{code}
