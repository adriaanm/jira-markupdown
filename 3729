A way to fix it is adding two additional overloaded methods round() to the math object:

{code}
/** This method prevents the implicit type promotion of Long to Double, which would lead to a loss of precision. */
  @deprecated("Rounding Long won't do anything. There is a high chance that calling this method is a bug in your code.")
  def round(x: Long): Long = x
/** This method prevents the implicit type promotion of Int to Float, which would lead to a loss of precision. */
  @deprecated("Rounding Int won't do anything. There is a high chance that calling this method is a bug in your code.")
  def round(x: Int): Int = x
{code}

Another possibility, which might be more correct (but I haven't thought deeply about this):

Move math.round(x: Double) to the Double class as an instance method and math.round(x: Float) to the Float class as an instance method.
