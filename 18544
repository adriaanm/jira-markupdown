Under -Xlint, the check for potential missing interpolators will see the important message twice; during typer, but after the first warning, the position of the literal tree changes to the position of the block, so that during retyping in erasure, the warning is emitted again but not suppressed.
```scala
object Test {
  def g = {
    val foo = "bar"
    "A doubly important ${foo * 2} message!"
  }
}
```
