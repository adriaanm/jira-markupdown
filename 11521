Here's a concrete example of what I mean when I say usage is different. Consider factory method {{ofDim}} on _companion object_ {{Array}}.

Let's say you have already instantiated an array called {{arr}}. You'll never try to do this: {{arr.ofDim}}. One would only ever try to use it this way {{Array.ofDim}} – for constructing an new array. 

For that reason, I argue against listing {{ofDim}} on *class* Array's documentation page, even you generate this member in a list labeled "members from companion". It's confusing to people who know the difference between companion objects and classes – you don't want to go to class X and find methods listed there that you can't call on class X.

An additional problem I have with this – I suspect that if you combine companion object members with companion class/trait members, on the class/trait page, you'd be generating an awful lot of noise. Especially if some companion object contains many members.
