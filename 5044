I just sent a similar question to the scala-user list.  Test.scala fails to compile, test2.scala does compile (2.9.0.1, java 1.6.0_26):

{code:title=test.scala}
object `package` {
  trait Score { def toString : String }
  trait Test[+T <: Score] { def apply(s : String) : T }

  case class FT(f : Float) extends Score
  implicit object FT extends Test[FT] { def apply(s : String) : FT = new FT(s.toFloat) }

  case class IT(i : Int) extends Score
  implicit object IT extends Test[IT] { def apply(s : String) : IT = new IT(s.toInt) }
}

class TT[+T <: Score](implicit val tb : Test[T]) {
  def read(s : String) : T = tb(s)
}

object Tester {
  val tt = new TT[FT]
  val r = tt.read("1.0")
  r.toString
}
{code}

{code:title=test2.scala}
object Tester {
  trait Score { def toString : String }
  trait Test[+T <: Score] { def apply(s : String) : T }

  case class FT(f : Float) extends Score
  implicit object FT extends Test[FT] { def apply(s : String) : FT = new FT(s.toFloat) }

  case class IT(i : Int) extends Score
  implicit object IT extends Test[IT] { def apply(s : String) : IT = new IT(s.toInt) }
  class TT[+T <: Score](implicit val tb : Test[T]) {
    def read(s : String) : T = tb(s)
  }

  val tt = new TT[FT]
  val r = tt.read("1.0")
  r.toString
}

{code}
