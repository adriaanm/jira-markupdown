The source for MyBerriSethi is what is provided in WordExp's scaladoc. I'll paste here, anyway:

{code}
  import scala.util.regexp._
  import scala.util.automata._
  object MyLang extends WordExp {
    type _regexpT = RegExp
    type _labelT = MyChar

    case class MyChar(c:Char) extends Label
  }
  import MyLang._
  // (a* | b)*
  val rex = Star(Alt(Star(Letter(MyChar('a'))),Letter(MyChar('b'))))
  object MyBerriSethi extends WordBerrySethi {
    override val lang = MyLang
  }
{code}

I pasted the val rex up there just because it's in the scaladoc, but it's not used in the examples.

It's a shame I missed the r1 definition, though it can be reconstructed from the result of val r2 = Sequ(r1). Anyway,

{code}

val r1 = Sequ(Alt(Eps, Letter(MyChar('a'))), Alt(Eps,Letter(MyChar('b'))), Alt(Eps,Letter(MyChar('c'))))

{code}

I don't have a nightly build installed.
