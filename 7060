So, here are my thoughts regarding the latest submission (not mentioned in this ticket). My concerns are:

1. Correctness
2. Speed
3. Backward compatibility at source code level (even if we keep binary here, it will be lost elsewhere)
4. Style

I have strong stylistic reservations about the code -- I think it will be difficult to maintain and to change, but we *shouldn't* be changing it much anyway. The methods it provides, particularly with your additions such as an iterator class, should be enough for its users in the Scala library.

It is difficult to assert correctness. The scalacheck test suit covers RB-specific issues, not general methods. Now, most of the new stuff is related to the new Iterator class, so a good scalacheck of that should cover it too. The initiative of providing additional scalacheck tests was really good. So, as far as I'm concerned, this is about as good as it can get.

I'm happy that this changes are being benchmarked, and the numbers are really impressive.

As for source code compatibility, it's been thrown out completely.

So what I suggest is that no change be made to RedBlack in the library. Add a new private implementation, change TreeSet and TreeMap (some compatibility changes there, unfortunately), and deprecate the RedBlack tree in the library. If think that will provide the cleanest break from what exists, and, keeping the new implementation private (as is already being done in the pull request) will allay most of my stylistic concerns: a private class needs much less maintenance than a public one, and can be changed a lot more in said maintenances.

I'd like to hear from Aleksandar Prokopec on this, since he's dealt with all _my_ patches to RedBlack.
