Here's a case where the non-standard materialization currently fails (and normal implicit search should succeed):
```scala
import scala.language.experimental.macros
import scala.reflect.macros.blackbox.Context

// works:
def blah[A: c.WeakTypeTag](c: Context)(f: c.Expr[Function0[A]]): c.Expr[Function0[A]] = {
  import c.universe._;
  c.Expr[Function0[A]](q"$f")
}

// fails because c.Expr sees the WeakTypeTag[A] and doesn't bother to materialize the correct WeakTypeTag[Function0[A]]:
def blah[A: c.WeakTypeTag](c: Context)(f: c.Expr[Function0[A]]): c.Expr[Function0[A]] = {
  import c.universe._;
  c.Expr(q"$f")
}
```
