Ok. This is very specifically a problem with covariant types. See the following example:

{code}
scala> def implicitly[T](implicit t : T) = t 
implicitly: [T](implicit T)T

scala> class Foo[T](val t : T);
defined class Foo

scala> implicit def foo[T](implicit t : T) = new Foo[T](t)
foo: [T](implicit T)Foo[T]

scala> implicit val hello = "Hello"
hello: java.lang.String = Hello

scala> implicitly[String]
res0: String = Hello

scala> implicitly[Foo[String]] 
res1: Foo[String] = Foo@11b92ef

scala> class Bar[+T](val t : T);                          
defined class Bar

scala> implicit def bar[T](implicit t : T) = new Bar[T](t)    
bar: [T](implicit T)Bar[T]

scala> implicitly[Bar[String]]
<console>:10: error: no implicit argument matching parameter type Bar[String] was found.
       implicitly[Bar[String]]
       ^

{code}
