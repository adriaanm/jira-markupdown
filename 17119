```scala

scala> class A
defined class A

scala> case object B extends A
defined module B

scala> (B: A with Product) match { case B => 0 }
<console>:10: warning: comparing non-null values of types B.type and A with Product using `==' will always yield false
              (B: A with Product) match { case B => 0 }
                                               ^
res2: Int = 0

scala> (B: A with Product) == (B: A)
res3: Boolean = true

scala> (B: A with Product) == (B: B.type)
res4: Boolean = true
```

