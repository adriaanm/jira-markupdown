The following prints
```scala
greetings from Milliways
<ga>6.0 * 7.0</ga>
<ga bar="6.0*7.0"></ga>
```

Note that the sequence magic (printing white-space separated list) does not work for attribute values, but works for content.
```scala
object foo extends Application {
  import xml.{Atom, NodeSeq}

  case class MyFloat(f:Float) extends Atom[Float](f)

  val bar = <ga bar={MyFloat(42.0f)}/>

  // the Seq(...) is important
  (bar \ "@bar")  match {
    case Seq(MyFloat(42.0f)) => Console.println("greetings from Milliways")
  }

  case class MyString(s:String) extends Atom[String](s)

  // it is essential not to use Text("*"), because Text is a very special atom
  val list_content = <ga>{List(MyFloat(6.0f),MyString("*"),MyFloat(7.0f))}</ga>

  Console.println(list_content) // prints elements of the list, whitespace-separated

  val attr_list_content = <ga bar={List(MyFloat(6.0f),MyString("*"),MyFloat(7.0f))}/>

  Console.println(attr_list_content) // prints elements of the list, whitespace-separated
}
```
