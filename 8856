Quoting from the JVM Spec, 4.9.2 Structural Constraints , http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-4.html

{quote}
- There must never be an uninitialized class instance on the operand stack or in a local variable at the target of a backwards branch unless the special type of the uninitialized class instance at the branch instruction is merged with itself at the target of the branch (ยง4.10.2.4).

- There must never be an uninitialized class instance in a local variable in code protected by an exception handler (ยง4.10.2.4).

- There must never be an uninitialized class instance on the operand stack or in a local variable when a jsr or jsr_w instruction is executed.
{quote}

The first constraint applies in our case, and in fact appears the bytecode should be accepted. There's been recent work on HotSpot to make VerifyErrors more informative, perhaps an unintended result of that work was checking a more stringent condition than required by the spec.

{noformat}
> java -version
java version "1.7.0_03"
Java(TM) SE Runtime Environment (build 1.7.0_03-b04)
Java HotSpot(TM) 64-Bit Server VM (build 22.1-b02, mixed mode)
{noformat}
