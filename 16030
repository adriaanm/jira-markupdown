Only aiming to document the situation.  This is with r24553, so after martin's change to mark mixed in methods as bridges.  The situation seems much better, but since we still have signatures which are contradictory in java's eyes, they may cause trouble if they leak out.

Compile the following scala, then try to compile the java.
```scala
// S.scala
trait HasNewBuilder[A, Repr] {
  def f: Builder[A, Repr] = null
}

trait Builder[A, Repr]
trait TraversableLike[A, Repr] extends HasNewBuilder[A, Repr]
trait GenericTraversableTemplate[A, CC[X]] extends HasNewBuilder[A, CC[A]]

class Bip[A] extends GenericTraversableTemplate[A, Bip] with HasNewBuilder[A, Bip[A]] { }
```
```scala
// J.java
public class J {
  // Direct creation succeeds.
  Bip<String> b1 = new Bip<String>();

  // Empty anonymous subclass fails:
  //
  // J.java:3: HasNewBuilder cannot be inherited with different arguments: <java.lang.String,Bip> and <java.lang.String,Bip<java.lang.String>>
  //   Bip<String> b2 = new Bip<String>() { };
  //                                      ^
  // 1 error  
  Bip<String> b2 = new Bip<String>() { };
}
```
