(found by James Robinson)

Both ASM and Eclipse complain about the generics signature of SymbolTable.trackSetInfo.  If you give Eclipse these two lines of code:
{code}
scala.tools.nsc.Interpreter interp = null;
interp.compiler().trackSetInfo(null, null);
{code}

Eclipse gives this message:
<T:Lscala/tools/nsc/symtab/Names;Lscala/tools/nsc/symtab/Symbols;Lscala/tools/nsc/symtab/Types;Lscala/tools/nsc/symtab/Scopes;Lscala/tools/nsc/symtab/Definitions;Lscala/tools/nsc/symtab/Constants;Lscala/tools/nsc/symtab/BaseTypeSeqs;Lscala/tools/nsc/symtab/InfoTransformers;Lscala/tools/nsc/symtab/StdNames;Lscala/tools/nsc/symtab/AnnotationInfos;Lscala/tools/nsc/symtab/AnnotationCheckers;Lscala/tools/nsc/ast/Trees;Lscala/ScalaObject.Symbol;>(TT;Lscala/tools/nsc/symtab/Names;Lscala/tools/nsc/symtab/Symbols;Lscala/tools/nsc/symtab/Types;Lscala/tools/nsc/symtab/Scopes;Lscala/tools/nsc/symtab/Definitions;Lscala/tools/nsc/symtab/Constants;Lscala/tools/nsc/symtab/BaseTypeSeqs;Lscala/tools/nsc/symtab/InfoTransformers;Lscala/tools/nsc/symtab/StdNames;Lscala/tools/nsc/symtab/AnnotationInfos;Lscala/tools/nsc/symtab/AnnotationCheckers;Lscala/tools/nsc/ast/Trees;Lscala/ScalaObject.Type;)TT;


ASM says something similar.  Looking into the generics string, it looks like T is being given a strange upper bound.  Its upper bound should be Symbols.Symbol.  It looks like the "Symbols" part of this is messed up.

In addition to  fixing this particular bug, it would be helpful if someone can run ASM class file decodes across the rest of scala-compiler.jar and scala-library.jar.

