Replying to [comment:2 milessabin]:
> in effect you're asking for support for joint compilation with scalac, javac and an annotation processor with mutual dependencies, and that's most likely going to be a fiddly process.

Agreed.

> Can you boil this down to a simple sample project using minimal dependencies and get it working nicely with the command line tools?

I've got a simple project running scalac/javac, but, no, it's not working. scalac doesn't consider/pre-run annotation processors that javac will later run. Should I move this bug to some other component, open another one, or bring this up on the list?

This actually reminds me of the joint compiler framework discussion I came across on some jvm languages list, where I thought you and Charles Nutter were on the right track, and then the clojure guy started talking about using class files instead of an API. I think a common compiler API that would allow multi-language, iterative compilation (e.g. to allow cross-language/compile-time meta-programming like annotation processors and Kevin's compiler plugin to generate new types as compilation is happening) would be pretty dang slick.

