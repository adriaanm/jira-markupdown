{code}
trait Foo extends scala.tools.nsc.Global {
  override def newCodePrinter(out: java.io.PrintWriter, tree: Tree, printRootPkg: Boolean): TreePrinter =
    super.newCodePrinter(out, tree, printRootPkg)
}
// ./a.scala:3: error: type mismatch;
//  found   : Foo.this.TreePrinter(in trait Printers)(in trait Printers)(in trait Printers)(in trait Printers)
//  required: Foo.this.TreePrinter(in trait Printers)(in trait Printers)(in trait Printers)(in trait Printers)
//     super.newCodePrinter(out, tree, printRootPkg)
//                         ^
// one error found
{code}
It compiles if I don't declare the return type. If this is "expected behavior" somehow, then the bug is the design.
