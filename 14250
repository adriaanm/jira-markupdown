E.g.:
```scala
class A {
  @scala.reflect.BeanProperty var myField:Int = 10
  
  def foo = (new B).getMyField
}

class B {
  @scala.reflect.BeanProperty var myField:Int = 10

  def foo = (new A).getMyField
}
```

gives:
```scala
   [scalac] A.scala:4: error: value getMyField is not a member of B
   [scalac]   def foo = (new B).getMyField
   [scalac]                     ^
```

I used a mutual recursive example since this always fails. Depending on the compilation order, it may fail or not in other cases.

This looks similar to http://lampsvn.epfl.ch/trac/scala/ticket/637#comment:4 by rytz but the comment there says that it is not released so it can't be the same problem.

I am using scala-2.7.4.final
