Using the file from the invaliddependency repo on scala 2.11.x master with debug flags:
```scala
[log typer] infer method inst scala.this.Predef.Map.apply[A, B], tparams = List(type A, type B), args = List(scala.this.Tuple2[lang.this.String,model.this.MediaType.WithOpenCharset], scala.this.Tuple2[lang.this.String,model.this.MediaType.WithFixedCharset]), pt = ?, lobounds = List(scala.this.Nothing, scala.this.Nothing), parambounds = List(, )
|    |    |    solving for (A: ?A, B: ?B)
[log typer] ?A setInst lang.this.String
[log typer(->parser ->parser)] [class] >> akka.http.scaladsl.model.MediaRange
[log typer(->parser ->parser ->parser)] [class] >> akka.http.scaladsl.model.MediaRanges
[log typer(->parser ->parser ->parser)] [class] << akka.http.scaladsl.model.MediaRanges
[log typer(->parser ->parser)] ClassfileLoader setting MediaRanges.associatedFile = /Users/adriaan/.ivy2/cache/com.typesafe.akka/akka-http-core-experimental_2.11/jars/akka-http-core-experimental_2.11-2.0.1.jar(akka/http/scaladsl/model/MediaRanges.class)
[log typer(->parser ->parser)] [class] << akka.http.scaladsl.model.MediaRange
[log typer(->parser)] ClassfileLoader setting MediaRange.associatedFile = /Users/adriaan/.ivy2/cache/com.typesafe.akka/akka-http-core-experimental_2.11/jars/akka-http-core-experimental_2.11-2.0.1.jar(akka/http/scaladsl/model/MediaRange.class)
[log typer] missingHook(trait MediaType, Binary): <none>
warning: !!! creating stub symbol to defer error: missing or invalid dependency detected while loading class file 'MediaType.class'.
Could not access type Binary in trait akka.http.javadsl.model.MediaType,
because it (or its dependencies) are missing. Check your build definition for
missing or conflicting dependencies. (Re-run with `-Ylog-classpath` to see the problematic classpath.)
A full rebuild may help if 'MediaType.class' was compiled against an incompatible version of akka.http.javadsl.model.MediaType.
[log typer(->parser ->parser)] [class] >> akka.http.javadsl.model.MediaRange
[log typer(->parser ->parser)] new existential: util.this.Map[lang.this.String,lang.this.String]
[log typer(->parser)] ClassfileLoader setting MediaRange.associatedFile = /Users/adriaan/.ivy2/cache/com.typesafe.akka/akka-http-core-experimental_2.11/jars/akka-http-core-experimental_2.11-2.0.1.jar(akka/http/javadsl/model/MediaRange.class)
[log typer] specializesSymHi: akka.http.scaladsl.model.<refinement>.type . method toRange : (<param> qValue: scala.this.Float)model.this.MediaRange
[log typer] specializesSymLo: akka.http.scaladsl.model.<refinement>.type . method toRange : ()model.this.MediaRange
[log typer] specializesSymHi: akka.http.scaladsl.model.<refinement>.type . method withQValue : (<param> qValue: scala.this.Float)model.this.MediaRange
[log typer] specializesSymLo: akka.http.scaladsl.model.<refinement>.type . method withQValue : (<param> qValue: scala.this.Double)model.this.MediaRange
[log typer] missingHook(trait MediaType, WithFixedCharset): <none>
warning: !!! creating stub symbol to defer error: missing or invalid dependency detected while loading class file 'MediaType.class'.
Could not access type WithFixedCharset in trait akka.http.javadsl.model.MediaType,
because it (or its dependencies) are missing. Check your build definition for
missing or conflicting dependencies. (Re-run with `-Ylog-classpath` to see the problematic classpath.)
A full rebuild may help if 'MediaType.class' was compiled against an incompatible version of akka.http.javadsl.model.MediaType.
[log typer] specializesSymHi: akka.http.scaladsl.model.<refinement>.type . method withParams : (<param> params: Map[String,String])<refinement>.this.WithFixedCharset with model.this.MediaType{}
[log typer] specializesSymLo: akka.http.scaladsl.model.<refinement>.type . method withParams : (<param> params: Map[String,String])model.this.MediaType
error: missing or invalid dependency detected while loading class file 'MediaType.class'.
Could not access type WithFixedCharset in trait akka.http.javadsl.model.MediaType,
because it (or its dependencies) are missing. Check your build definition for
missing or conflicting dependencies. (Re-run with `-Ylog-classpath` to see the problematic classpath.)
A full rebuild may help if 'MediaType.class' was compiled against an incompatible version of akka.http.javadsl.model.MediaType.
java.lang.Throwable
	at scala.reflect.internal.Symbols$StubSymbol$class.fail(Symbols.scala:3469)
	at scala.reflect.internal.Symbols$StubSymbol$class.info(Symbols.scala:3480)
	at scala.reflect.internal.Symbols$StubClassSymbol.info(Symbols.scala:3484)
	at scala.reflect.internal.Symbols$StubClassSymbol.info(Symbols.scala:3484)
	at scala.reflect.internal.Symbols$Symbol.baseTypeSeqLength$1(Symbols.scala:1861)
	at scala.reflect.internal.Symbols$Symbol.isLess(Symbols.scala:1864)
	at scala.reflect.internal.Types$Type.baseTypeIndex(Types.scala:898)
	at scala.reflect.internal.Types$CompoundType.baseType(Types.scala:1401)
	at scala.reflect.internal.Types$ClassTypeRef$class.baseType(Types.scala:1968)
	at scala.reflect.internal.Types$ClassNoArgsTypeRef.baseType(Types.scala:2331)
	at scala.reflect.internal.tpe.TypeComparers$class.firstTry$1(TypeComparers.scala:405)
	at scala.reflect.internal.tpe.TypeComparers$class.isSubType2(TypeComparers.scala:552)
	at scala.reflect.internal.tpe.TypeComparers$class.isSubType1(TypeComparers.scala:320)
	at scala.reflect.internal.tpe.TypeComparers$class.isSubType(TypeComparers.scala:278)
	at scala.reflect.internal.SymbolTable.isSubType(SymbolTable.scala:16)
	at scala.reflect.internal.tpe.TypeComparers$$anonfun$thirdTry$1$1.apply(TypeComparers.scala:480)
	at scala.reflect.internal.tpe.TypeComparers$$anonfun$thirdTry$1$1.apply(TypeComparers.scala:480)
	at scala.collection.LinearSeqOptimized$class.forall(LinearSeqOptimized.scala:83)
	at scala.collection.immutable.List.forall(List.scala:84)
	at scala.reflect.internal.tpe.TypeComparers$class.thirdTry$1(TypeComparers.scala:480)
	at scala.reflect.internal.tpe.TypeComparers$class.secondTry$1(TypeComparers.scala:450)
	at scala.reflect.internal.tpe.TypeComparers$class.firstTry$1(TypeComparers.scala:426)
	at scala.reflect.internal.tpe.TypeComparers$class.isSubType2(TypeComparers.scala:552)
	at scala.reflect.internal.tpe.TypeComparers$class.isSubType1(TypeComparers.scala:320)
	at scala.reflect.internal.tpe.TypeComparers$class.isSubType(TypeComparers.scala:278)
	at scala.reflect.internal.SymbolTable.isSubType(SymbolTable.scala:16)
	at scala.reflect.internal.tpe.TypeComparers$class.thirdTry$1(TypeComparers.scala:492)
	at scala.reflect.internal.tpe.TypeComparers$class.secondTry$1(TypeComparers.scala:450)
	at scala.reflect.internal.tpe.TypeComparers$class.firstTry$1(TypeComparers.scala:426)
	at scala.reflect.internal.tpe.TypeComparers$class.isSubType2(TypeComparers.scala:552)
	at scala.reflect.internal.tpe.TypeComparers$class.isSubType1(TypeComparers.scala:320)
	at scala.reflect.internal.tpe.TypeComparers$class.isSubType(TypeComparers.scala:278)
	at scala.reflect.internal.SymbolTable.isSubType(SymbolTable.scala:16)
	at scala.reflect.internal.Types$class.specializesSym(Types.scala:4172)
	at scala.reflect.internal.SymbolTable.specializesSym(SymbolTable.scala:16)
	at scala.reflect.internal.tpe.GlbLubs$$anonfun$refines$1$1.apply(GlbLubs.scala:376)
	at scala.reflect.internal.tpe.GlbLubs$$anonfun$refines$1$1.apply(GlbLubs.scala:373)
	at scala.collection.LinearSeqOptimized$class.forall(LinearSeqOptimized.scala:83)
	at scala.collection.immutable.List.forall(List.scala:84)
	at scala.reflect.internal.tpe.GlbLubs$class.refines$1(GlbLubs.scala:373)
	at scala.reflect.internal.tpe.GlbLubs$$anonfun$excludeFromLub$1$1.apply(GlbLubs.scala:345)
	at scala.reflect.internal.tpe.GlbLubs$$anonfun$excludeFromLub$1$1.apply(GlbLubs.scala:345)
	at scala.collection.LinearSeqOptimized$class.exists(LinearSeqOptimized.scala:93)
	at scala.collection.immutable.List.exists(List.scala:84)
	at scala.reflect.internal.tpe.GlbLubs$class.excludeFromLub$1(GlbLubs.scala:345)
	at scala.reflect.internal.tpe.GlbLubs$$anonfun$25.apply(GlbLubs.scala:380)
	at scala.reflect.internal.tpe.GlbLubs$$anonfun$25.apply(GlbLubs.scala:380)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:744)
	at scala.collection.immutable.List.foreach(List.scala:381)
	at scala.reflect.internal.Scopes$Scope.foreach(Scopes.scala:373)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:743)
	at scala.reflect.internal.tpe.GlbLubs$class.lub1$1(GlbLubs.scala:380)
	at scala.reflect.internal.tpe.GlbLubs$class.lub0$1(GlbLubs.scala:322)
	at scala.reflect.internal.tpe.GlbLubs$class.lub(GlbLubs.scala:419)
	at scala.reflect.internal.SymbolTable.lub(SymbolTable.scala:16)
	at scala.reflect.internal.tpe.TypeConstraints$class.solveOne$1(TypeConstraints.scala:249)
	at scala.reflect.internal.tpe.TypeConstraints$$anonfun$solve$1.apply(TypeConstraints.scala:260)
	at scala.reflect.internal.tpe.TypeConstraints$$anonfun$solve$1.apply(TypeConstraints.scala:260)
	at scala.reflect.internal.util.Collections$class.foreach3(Collections.scala:231)
	at scala.reflect.internal.SymbolTable.foreach3(SymbolTable.scala:16)
	at scala.reflect.internal.tpe.TypeConstraints$class.solve(TypeConstraints.scala:260)
	at scala.reflect.internal.SymbolTable.solve(SymbolTable.scala:16)
	at scala.tools.nsc.typechecker.Infer$class.solvedTypes(Infer.scala:145)
	at scala.tools.nsc.Global$$anon$1.solvedTypes(Global.scala:462)
	at scala.tools.nsc.typechecker.Infer$Inferencer.methTypeArgs(Infer.scala:550)
```
