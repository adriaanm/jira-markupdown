Just for sake of comparison, here's the version with an bona-fide companion:

{code}
package s1 {
  trait AbDingos {
    trait Dingo
    object Dingo {
      implicit def string2dingo(s: String): Dingo = newDingo
    }
    def newDingo: Dingo
  }
  object Dingos extends AbDingos {
    class Dingo extends super.Dingo
    def newDingo: Dingo = new Dingo
  }
  class A {
    def f1(x: AbDingos)     = { import x._ ; import Dingo._ ; "a": Dingo } // ok
    def f3(x: AbDingos)     = { import x._ ; "a": Dingo }                  // ok
  }
}
{code}
