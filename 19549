When I try to compile following code, with a for-comprehension of mostly Try (tries). UploadResult is a case class
```scala
for {
     _ <- markerUtil.uploadingStarted(source, destPath, files.map(_.path)) // Try[Unit]
     inputStream <- createInputStream(files) // Try[InputStream]
     _ <- store.upload(destPath, inputStream) // Try[Unit]
     _ <- markerUtil.uploadingDone(source) // Try[Unit]
     _ <- deleteFiles(files) // Try[Unit]
     _ <- markerUtil.uploadedDone(source) // Try[Unit]
   } yield ()
```

I get following output. Strangely the error happens in a completely different part of the code (in another package).
```scala
[INFO] /vagrant/core-compute-jobs-factstore/src/main/scala:-1: info: compiling
[INFO] Compiling 14 source files to /vagrant/core-compute-jobs-factstore/target/classes at 1422892024304
[WARNING] warning: Class org.joda.convert.FromString not found - continuing with a stub.
[WARNING] warning: Class org.joda.convert.ToString not found - continuing with a stub.
[WARNING] warning: Class org.joda.convert.FromString not found - continuing with a stub.
[WARNING] warning: Class org.joda.convert.ToString not found - continuing with a stub.
[WARNING] warning: Class org.joda.convert.FromString not found - continuing with a stub.
[WARNING] warning: Class org.joda.convert.FromString not found - continuing with a stub.
[WARNING] warning: Class org.joda.convert.ToString not found - continuing with a stub.
[ERROR] error:
[INFO]      while compiling: /vagrant/core-compute-jobs-factstore/src/main/scala/com/example/core/compute/jobs/factstore/util/FileSystemFactory.scala
[INFO]         during phase: jvm
[INFO]      library version: version 2.10.4
[INFO]     compiler version: version 2.10.4
[INFO]   reconstructed args: -classpath /vagrant/core-compute-jobs-factstore/target/classes:/home/vagrant/.m2/repository/org/apache/hadoop/hadoop-client/2.0.0-mr1-cdh4.4.0/hadoop-client-2.0.0-mr1-cdh4.4.0.jar:/home/vagrant/.m2/repository/org/apache/hadoop/hadoop-common/2.0.0-cdh4.4.0/hadoop-common-2.0.0-cdh4.4.0.jar:/home/vagrant/.m2/repository/org/apache/hadoop/hadoop-annotations/2.0.0-cdh4.4.0/hadoop-annotations-2.0.0-cdh4.4.0.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/../lib/tools.jar:/home/vagrant/.m2/repository/org/apache/commons/commons-math/2.1/commons-math-2.1.jar:/home/vagrant/.m2/repository/xmlenc/xmlenc/0.52/xmlenc-0.52.jar:/home/vagrant/.m2/repository/commons-io/commons-io/2.1/commons-io-2.1.jar:/home/vagrant/.m2/repository/commons-el/commons-el/1.0/commons-el-1.0.jar:/home/vagrant/.m2/repository/commons-lang/commons-lang/2.5/commons-lang-2.5.jar:/home/vagrant/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/home/vagrant/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/home/vagrant/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/home/vagrant/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/home/vagrant/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/home/vagrant/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.8/jackson-core-asl-1.8.8.jar:/home/vagrant/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.8/jackson-mapper-asl-1.8.8.jar:/home/vagrant/.m2/repository/org/mockito/mockito-all/1.8.5/mockito-all-1.8.5.jar:/home/vagrant/.m2/repository/org/apache/avro/avro/1.7.4/avro-1.7.4.jar:/home/vagrant/.m2/repository/com/thoughtworks/paranamer/paranamer/2.3/paranamer-2.3.jar:/home/vagrant/.m2/repository/org/apache/commons/commons-compress/1.4.1/commons-compress-1.4.1.jar:/home/vagrant/.m2/repository/org/tukaani/xz/1.0/xz-1.0.jar:/home/vagrant/.m2/repository/com/google/protobuf/protobuf-java/2.4.0a/protobuf-java-2.4.0a.jar:/home/vagrant/.m2/repository/org/apache/hadoop/hadoop-auth/2.0.0-cdh4.4.0/hadoop-auth-2.0.0-cdh4.4.0.jar:/home/vagrant/.m2/repository/com/jcraft/jsch/0.1.42/jsch-0.1.42.jar:/home/vagrant/.m2/repository/org/apache/zookeeper/zookeeper/3.4.5-cdh4.4.0/zookeeper-3.4.5-cdh4.4.0.jar:/home/vagrant/.m2/repository/jline/jline/0.9.94/jline-0.9.94.jar:/home/vagrant/.m2/repository/org/apache/hadoop/hadoop-hdfs/2.0.0-cdh4.4.0/hadoop-hdfs-2.0.0-cdh4.4.0.jar:/home/vagrant/.m2/repository/com/sun/jersey/jersey-core/1.8/jersey-core-1.8.jar:/home/vagrant/.m2/repository/com/sun/jersey/jersey-server/1.8/jersey-server-1.8.jar:/home/vagrant/.m2/repository/asm/asm/3.1/asm-3.1.jar:/home/vagrant/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar:/home/vagrant/.m2/repository/org/apache/hadoop/hadoop-core/2.0.0-mr1-cdh4.4.0/hadoop-core-2.0.0-mr1-cdh4.4.0.jar:/home/vagrant/.m2/repository/hsqldb/hsqldb/1.8.0.10/hsqldb-1.8.0.10.jar:/home/vagrant/.m2/repository/com/amazonaws/aws-java-sdk/1.6.4/aws-java-sdk-1.6.4.jar:/home/vagrant/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/home/vagrant/.m2/repository/commons-codec/commons-codec/1.3/commons-codec-1.3.jar:/home/vagrant/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.1.1/jackson-core-2.1.1.jar:/home/vagrant/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.1.1/jackson-databind-2.1.1.jar:/home/vagrant/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.1.1/jackson-annotations-2.1.1.jar:/home/vagrant/.m2/repository/org/scala-lang/scala-library/2.10.4/scala-library-2.10.4.jar:/home/vagrant/.m2/repository/org/apache/spark/spark-core_2.10/1.1.1/spark-core_2.10-1.1.1.jar:/home/vagrant/.m2/repository/net/java/dev/jets3t/jets3t/0.7.1/jets3t-0.7.1.jar:/home/vagrant/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/home/vagrant/.m2/repository/org/apache/curator/curator-recipes/2.4.0/curator-recipes-2.4.0.jar:/home/vagrant/.m2/repository/org/apache/curator/curator-framework/2.4.0/curator-framework-2.4.0.jar:/home/vagrant/.m2/repository/org/apache/curator/curator-client/2.4.0/curator-client-2.4.0.jar:/home/vagrant/.m2/repository/org/eclipse/jetty/jetty-plus/8.1.14.v20131031/jetty-plus-8.1.14.v20131031.jar:/home/vagrant/.m2/repository/org/eclipse/jetty/orbit/javax.transaction/1.1.1.v201105210645/javax.transaction-1.1.1.v201105210645.jar:/home/vagrant/.m2/repository/org/eclipse/jetty/jetty-webapp/8.1.14.v20131031/jetty-webapp-8.1.14.v20131031.jar:/home/vagrant/.m2/repository/org/eclipse/jetty/jetty-xml/8.1.14.v20131031/jetty-xml-8.1.14.v20131031.jar:/home/vagrant/.m2/repository/org/eclipse/jetty/jetty-servlet/8.1.14.v20131031/jetty-servlet-8.1.14.v20131031.jar:/home/vagrant/.m2/repository/org/eclipse/jetty/jetty-jndi/8.1.14.v20131031/jetty-jndi-8.1.14.v20131031.jar:/home/vagrant/.m2/repository/org/eclipse/jetty/orbit/javax.mail.glassfish/1.4.1.v201005082020/javax.mail.glassfish-1.4.1.v201005082020.jar:/home/vagrant/.m2/repository/org/eclipse/jetty/orbit/javax.activation/1.1.0.v201105071233/javax.activation-1.1.0.v201105071233.jar:/home/vagrant/.m2/repository/org/eclipse/jetty/jetty-security/8.1.14.v20131031/jetty-security-8.1.14.v20131031.jar:/home/vagrant/.m2/repository/org/eclipse/jetty/jetty-util/8.1.14.v20131031/jetty-util-8.1.14.v20131031.jar:/home/vagrant/.m2/repository/org/eclipse/jetty/jetty-server/8.1.14.v20131031/jetty-server-8.1.14.v20131031.jar:/home/vagrant/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar:/home/vagrant/.m2/repository/org/eclipse/jetty/jetty-continuation/8.1.14.v20131031/jetty-continuation-8.1.14.v20131031.jar:/home/vagrant/.m2/repository/org/eclipse/jetty/jetty-http/8.1.14.v20131031/jetty-http-8.1.14.v20131031.jar:/home/vagrant/.m2/repository/org/eclipse/jetty/jetty-io/8.1.14.v20131031/jetty-io-8.1.14.v20131031.jar:/home/vagrant/.m2/repository/com/google/guava/guava/14.0.1/guava-14.0.1.jar:/home/vagrant/.m2/repository/org/apache/commons/commons-lang3/3.3.2/commons-lang3-3.3.2.jar:/home/vagrant/.m2/repository/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar:/home/vagrant/.m2/repository/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar:/home/vagrant/.m2/repository/org/slf4j/jul-to-slf4j/1.7.5/jul-to-slf4j-1.7.5.jar:/home/vagrant/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.5/jcl-over-slf4j-1.7.5.jar:/home/vagrant/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vagrant/.m2/repository/org/slf4j/slf4j-log4j12/1.7.5/slf4j-log4j12-1.7.5.jar:/home/vagrant/.m2/repository/com/ning/compress-lzf/1.0.0/compress-lzf-1.0.0.jar:/home/vagrant/.m2/repository/org/xerial/snappy/snappy-java/1.0.5.3/snappy-java-1.0.5.3.jar:/home/vagrant/.m2/repository/net/jpountz/lz4/lz4/1.2.0/lz4-1.2.0.jar:/home/vagrant/.m2/repository/com/twitter/chill_2.10/0.3.6/chill_2.10-0.3.6.jar:/home/vagrant/.m2/repository/com/twitter/chill-java/0.3.6/chill-java-0.3.6.jar:/home/vagrant/.m2/repository/commons-net/commons-net/2.2/commons-net-2.2.jar:/home/vagrant/.m2/repository/org/spark-project/akka/akka-remote_2.10/2.2.3-shaded-protobuf/akka-remote_2.10-2.2.3-shaded-protobuf.jar:/home/vagrant/.m2/repository/org/spark-project/akka/akka-actor_2.10/2.2.3-shaded-protobuf/akka-actor_2.10-2.2.3-shaded-protobuf.jar:/home/vagrant/.m2/repository/io/netty/netty/3.6.6.Final/netty-3.6.6.Final.jar:/home/vagrant/.m2/repository/org/spark-project/protobuf/protobuf-java/2.4.1-shaded/protobuf-java-2.4.1-shaded.jar:/home/vagrant/.m2/repository/org/uncommons/maths/uncommons-maths/1.2.2a/uncommons-maths-1.2.2a.jar:/home/vagrant/.m2/repository/org/spark-project/akka/akka-slf4j_2.10/2.2.3-shaded-protobuf/akka-slf4j_2.10-2.2.3-shaded-protobuf.jar:/home/vagrant/.m2/repository/org/json4s/json4s-jackson_2.10/3.2.10/json4s-jackson_2.10-3.2.10.jar:/home/vagrant/.m2/repository/org/json4s/json4s-core_2.10/3.2.10/json4s-core_2.10-3.2.10.jar:/home/vagrant/.m2/repository/org/json4s/json4s-ast_2.10/3.2.10/json4s-ast_2.10-3.2.10.jar:/home/vagrant/.m2/repository/org/scala-lang/scalap/2.10.0/scalap-2.10.0.jar:/home/vagrant/.m2/repository/colt/colt/1.2.0/colt-1.2.0.jar:/home/vagrant/.m2/repository/concurrent/concurrent/1.3.4/concurrent-1.3.4.jar:/home/vagrant/.m2/repository/org/apache/mesos/mesos/0.18.1/mesos-0.18.1-shaded-protobuf.jar:/home/vagrant/.m2/repository/io/netty/netty-all/4.0.23.Final/netty-all-4.0.23.Final.jar:/home/vagrant/.m2/repository/com/clearspring/analytics/stream/2.7.0/stream-2.7.0.jar:/home/vagrant/.m2/repository/com/codahale/metrics/metrics-core/3.0.0/metrics-core-3.0.0.jar:/home/vagrant/.m2/repository/com/codahale/metrics/metrics-jvm/3.0.0/metrics-jvm-3.0.0.jar:/home/vagrant/.m2/repository/com/codahale/metrics/metrics-json/3.0.0/metrics-json-3.0.0.jar:/home/vagrant/.m2/repository/com/codahale/metrics/metrics-graphite/3.0.0/metrics-graphite-3.0.0.jar:/home/vagrant/.m2/repository/org/tachyonproject/tachyon-client/0.5.0/tachyon-client-0.5.0.jar:/home/vagrant/.m2/repository/org/tachyonproject/tachyon/0.5.0/tachyon-0.5.0.jar:/home/vagrant/.m2/repository/org/spark-project/pyrolite/2.0.1/pyrolite-2.0.1.jar:/home/vagrant/.m2/repository/net/sf/py4j/py4j/0.8.2.1/py4j-0.8.2.1.jar:/home/vagrant/.m2/repository/joda-time/joda-time/2.2/joda-time-2.2.jar:/home/vagrant/.m2/repository/org/apache/httpcomponents/httpclient/4.2.6/httpclient-4.2.6.jar:/home/vagrant/.m2/repository/org/apache/httpcomponents/httpcore/4.2.5/httpcore-4.2.5.jar:/home/vagrant/.m2/repository/com/esotericsoftware/kryo/kryo/2.22/kryo-2.22.jar:/home/vagrant/.m2/repository/com/typesafe/config/1.2.1/config-1.2.1.jar:/home/vagrant/.m2/repository/com/example/core-common-datatypes-domain/1.6.0-SNAPSHOT/core-common-datatypes-domain-1.6.0-SNAPSHOT.jar:/home/vagrant/.m2/repository/org/apache/thrift/libthrift/0.9.1/libthrift-0.9.1.jar:/home/vagrant/.m2/repository/com/twitter/scrooge-core_2.10/3.12.3/scrooge-core_2.10-3.12.3.jar:/home/vagrant/.m2/repository/com/example/core-compute-util-spark-metrics/1.0.0-SNAPSHOT/core-compute-util-spark-metrics-1.0.0-SNAPSHOT.jar:/home/vagrant/.m2/repository/com/codahale/metrics/metrics-ganglia/3.0.1/metrics-ganglia-3.0.1.jar:/home/vagrant/.m2/repository/info/ganglia/gmetric4j/gmetric4j/1.0.3/gmetric4j-1.0.3.jar:/home/vagrant/.m2/repository/org/acplt/oncrpc/1.0.7/oncrpc-1.0.7.jar:/home/vagrant/.m2/repository/org/scala-lang/scala-reflect/2.10.3/scala-reflect-2.10.3.jar:/home/vagrant/.m2/repository/junit/junit/4.11/junit-4.11.jar:/home/vagrant/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/vagrant/.m2/repository/org/scala-lang/scala-compiler/2.10.3/scala-compiler-2.10.3.jar -d /vagrant/core-compute-jobs-factstore/target/classes
[INFO]
[INFO]   last tree to typer: Literal(Constant(com.example.core.compute.jobs.factstore.source.SourceDirectory))
[INFO]               symbol: null
[INFO]    symbol definition: null
[INFO]                  tpe: Class(classOf[com.example.core.compute.jobs.factstore.source.SourceDirectory])
[INFO]        symbol owners:
[INFO]       context owners: class FileSystemFactory -> package util
[INFO]
[INFO] == Enclosing template or block ==
[INFO]
[INFO] Template( // val <local FileSystemFactory>: <notype> in class FileSystemFactory, tree.tpe=com.example.core.compute.jobs.factstore.util.FileSystemFactory
[INFO]   "java.lang.Object", "scala.Serializable" // parents
[INFO]   ValDef(
[INFO]     private
[INFO]     "_"
[INFO]     <tpt>
[INFO]     <empty>
[INFO]   )
[INFO]   // 3 statements
[INFO]   ValDef( // private[this] val uri: String in class FileSystemFactory
[INFO]     private <local> <paramaccessor> <triedcooking>
[INFO]     "uri"
[INFO]     <tpt> // tree.tpe=String
[INFO]     <empty>
[INFO]   )
[INFO]   DefDef( // def get(): org.apache.hadoop.fs.FileSystem in class FileSystemFactory
[INFO]     <method> <triedcooking>
[INFO]     "get"
[INFO]     []
[INFO]     List(Nil)
[INFO]     <tpt> // tree.tpe=org.apache.hadoop.fs.FileSystem
[INFO]     Apply( // def get(x$1: java.net.URI,x$2: org.apache.hadoop.conf.Configuration): org.apache.hadoop.fs.FileSystem in object FileSystem, tree.tpe=org.apache.hadoop.fs.FileSystem
[INFO]       "org"."apache"."hadoop"."fs"."FileSystem"."get" // def get(x$1: java.net.URI,x$2: org.apache.hadoop.conf.Configuration): org.apache.hadoop.fs.FileSystem in object FileSystem, tree.tpe=(x$1: java.net.URI, x$2: org.apache.hadoop.conf.Configuration)org.apache.hadoop.fs.FileSystem
[INFO]       // 2 arguments
[INFO]       Apply( // def <init>(x$1: String): java.net.URI in class URI, tree.tpe=java.net.URI
[INFO]         new java.net.URI."<init>" // def <init>(x$1: String): java.net.URI in class URI, tree.tpe=(x$1: String)java.net.URI
[INFO]         FileSystemFactory.this."uri" // private[this] val uri: String in class FileSystemFactory, tree.tpe=String
[INFO]       )
[INFO]       Apply( // def <init>(): org.apache.hadoop.conf.Configuration in class Configuration, tree.tpe=org.apache.hadoop.conf.Configuration
[INFO]         new org.apache.hadoop.conf.Configuration."<init>" // def <init>(): org.apache.hadoop.conf.Configuration in class Configuration, tree.tpe=()org.apache.hadoop.conf.Configuration
[INFO]         Nil
[INFO]       )
[INFO]     )
[INFO]   )
[INFO]   DefDef( // def <init>(uri: String): com.example.core.compute.jobs.factstore.util.FileSystemFactory in class FileSystemFactory
[INFO]     <method> <triedcooking>
[INFO]     "<init>"
[INFO]     []
[INFO]     // 1 parameter list
[INFO]     ValDef( // uri: String
[INFO]       <param> <paramaccessor> <triedcooking>
[INFO]       "uri"
[INFO]       <tpt> // tree.tpe=String
[INFO]       <empty>
[INFO]     )
[INFO]     <tpt> // tree.tpe=com.example.core.compute.jobs.factstore.util.FileSystemFactory
[INFO]     Block( // tree.tpe=Unit
[INFO]       // 2 statements
[INFO]       Assign( // tree.tpe=Unit
[INFO]         FileSystemFactory.this."uri" // private[this] val uri: String in class FileSystemFactory, tree.tpe=String
[INFO]         "uri" // uri: String, tree.tpe=String
[INFO]       )
[INFO]       Apply( // def <init>(): Object in class Object, tree.tpe=Object
[INFO]         FileSystemFactory.super."<init>" // def <init>(): Object in class Object, tree.tpe=()Object
[INFO]         Nil
[INFO]       )
[INFO]       ()
[INFO]     )
[INFO]   )
[INFO] )
[INFO]
[INFO] == Expanded type of tree ==
[INFO]
[INFO] ConstantType(
[INFO]   value = Constant(com.example.core.compute.jobs.factstore.source.SourceDirectory)
[INFO]
[INFO] )
[INFO]
[INFO] uncaught exception during compilation: java.io.IOException
[ERROR] error: Operation not permitted
[WARNING] 7 warnings found
[ERROR] two errors found
```

However when I assign the for-comprehension to a val, it compiles without issue:
```scala
val result = for {
     _ <- markerUtil.uploadingStarted(source, destPath, files.map(_.path))
     inputStream <- createInputStream(files)
     _ <- store.upload(destPath, inputStream)
     _ <- markerUtil.uploadingDone(source)
     _ <- deleteFiles(files)
     _ <- markerUtil.uploadedDone(source)
   } yield UploadResult(inputSize, destPath)
   result
```

I also tried it by converting the for-yield to a flatMap, I get exactly the same errors, and it also gets resolved when I assign it to a val.
