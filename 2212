I think this is an inherent limitation of Scala's type inference algorithm. I don't know the details, but the rule of thumb is that you should avoid constraints that have type variables (type parameters that must be inferred) on both sides (such as `Fx <: F[I]`).

It works if you define `stringer` as:
{code}
implicit def stringer[I](a: F[I]) = a.get.toString
{code}
