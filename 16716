```
scala> object Wuffles
defined module Wuffles

scala> (Some(Wuffles): Option[Wuffles.type]) match { case Some(Wuffles) => println("Woof"); case _ => println("Meow") }
<console>:10: error: pattern type is incompatible with expected type;
 found   : object Wuffles
 required: Wuffles.type
              (Some(Wuffles): Option[Wuffles.type]) match { case Some(Wuffles) => println("Woof"); case _ => println("Meow") }
                                                                      ^
```
The complaint is seems to be that Wuffles is not of Wuffles.type, but then
```
scala> Wuffles
res10: Wuffles.type = Wuffles$@11dc088
```

It seems to have a workaround:
```
scala> (Some(Wuffles): Option[Wuffles.type]) match { case Some(wuffles: Wuffles.type) => println("Woof"); case _ => println("Meow") }
Woof
```
