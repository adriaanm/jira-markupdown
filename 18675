{code}
import language._

object Test {
  (null: Any) match {
    case a: A[k] => new B[k]()
  }
}

class A[K[L[_]]]
class B[K[L[_]]]
{code}

This used to work in 2.10.x by virtue of a bug in refchecks (SI-7756)

Test case minimized from sbt, in util/collection/src/main/scala/sbt/INode.scala

Type variables already pick up the bounds:

{code}
import language._

object Test {
  (null: Any) match {
    case a: A[k] => new B[k]()
  }
}

class A[K <: String]
class B[K <: String]
{code}
