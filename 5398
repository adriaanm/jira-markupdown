Actually they are the same bug I think.  By the way "object T2" in your comment doesn't have any bearing on the bug, it crashes fine without it.

Putting r24206 to work, here it is after lazyvals:
```scala
// I'm using: () => { trait T { def t = () } }
  object t4202 final
      constructor t4202 
      value <local t4202> 
          anonymous class $$anonfun final <synthetic>
              constructor $$anonfun 
              method apply final
              method apply final <bridge>
              value <local $$anonfun> 
```

And then here after lambdalift.  Notice the trait implementation class is being renamed to "T$$class$$1" which is pretty clearly wrong.  I'm able to push the error downfield by excluding .isImplClass but the problem is deeper.
```scala
  object t4202 final
      anonymous class $$anonfun$$1 final <synthetic>
          constructor $$anonfun$$1 
          method apply final
          method apply final <bridge>
*         trait T$$1 abstract
*             method t 
*             value <local T> 
*             value t4202$$$$anonfun$$T$$$$$$outer <synthetic> <stable>
*         trait T$$class$$1 abstract
*             method $$init$$ 
*             method t 
*             value <local T$$class> 
          value <local $$anonfun> 
```
