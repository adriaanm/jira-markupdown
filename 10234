I agree - this is if the contract is relaxed.

The basic problem here is that the semantics of the {{getOrElseUpdate}} method do not allow any lock-free (and a lock-based as well, unless the internal locks are somehow exposed) {{Map}} implementation. This bug report is not a problem of the {{TrieMap}} implementation, but the problem in the {{collection.Map}} interface and the {{collection.concurrent.Map}} interface.

Once this is fixed in the {{Map}} documentation with the following line:

{code}
Note: invoking this method may potentially evaluate the expression `op` multiple times without storing it in the map.
{code}

a fix similar to what you suggest can be added to the {{collection.concurrent.Map}} trait.
