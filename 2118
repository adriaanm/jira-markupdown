I think the patch is basically OK, but there's too much needless copying.
```scala
/** Construct a fresh symbol tree for an implicit parameter */  
 	657	    def fixSymbols(tree : Tree) : Tree = new Transformer { 
 	658	        currentOwner = context.owner 
 	659	        override val treeCopy = new StrictTreeCopier 
                        ^^^ I think a lazy tree copier is sufficient here
 	660	        override def transform(tr : Tree) = super.transform(tr match { 
 	661	                case Function(vparams, body) => { 
 	662	                        // New tree 
 	663	                        val sym = tr.symbol.cloneSymbol(currentOwner) 
 	664	                        val res = tr.duplicate setSymbol sym 
 	665	                        // New parameter symbols 
 	666	                        var oldsyms = vparams.map(_.symbol) 
 	667	                        var newsyms = oldsyms.map(_.cloneSymbol(sym)) 
 	668	                        // Fix all symbols 
 	669	                        new TreeSymSubstituter(oldsyms, newsyms).traverse(res) 
 	670	                        res 
 	671	                } 
 	672	                case other => other.duplicate
                                ^^^ I don't see why you duplicate here. 
 	673	        }) 
 	674	    }.transform(tree) 
```
Paul, do you want to try with the modified patch? Thanks! -- Martin
