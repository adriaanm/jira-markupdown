The type error arises in `x3 = x1` in the synthetic code:

{code}
{
  <synthetic> var rc6: Boolean = false;
  <synthetic> var x3: String = null.asInstanceOf[String];
  {
    case <synthetic> val x1: CharSequence = verb;
    case8(){
      if ("time".==(x1))
        {
          rc6 = true;
          x3 = x1;
          if (scala.Predef._intArrayOps(a).isEmpty)
            matchEnd7(())
          else
            case9()
        }
      else
        case9()
    };
    case9(){
      if (rc6)
        matchEnd7(())
      else
        case10()
    };
    case10(){
      <synthetic> val o12: Option[List[String]] = reYYYY.unapplySeq(x1);
      if (o12.isEmpty.unary_!.&&(o12.get.!=(null).&&(o12.get.lengthCompare(1).==(0))))
        matchEnd7(())
      else
        case11()
    };
    case11(){
      matchEnd7(throw new MatchError(x1))
    };
    matchEnd7(x){
      x
    }
  }
}
{code}
