I've been playing with an idea to have something like: {{`...'}} to mean {{q"""..."""}}:

{code}
(stats: Tree, i: Int) => `println(s"executing $${stat.toString}"); $stat'
{code}

Where
{code} 
$$foo
{code}
means unquote two levels deep, not escape dollar within string interpolation. Number of dollars is the same as how many levels deep you are, not {{â‰ˆlevelsdeep^2}} as it is now.  

It also works nicely if you want to write quasiquotes that produce other quasiquotes without any need for escaping whatsoever:
{code}
val valfx = `val fx = f(`x')'
{code}

Of course this is just surface syntax idea, the underlying desugaring stays the same. 
