{code}
scala> val tree = tb.parse("class Meter(val value: Double) extends AnyVal")
tree: tb.u.Tree =
class Meter extends AnyVal {
  <paramaccessor> val value: Double = _;
  def <init>(value: Double) = {
    super.<init>();
    ()
  }
}

scala> val program =  tb.compile(tree)
scala.tools.reflect.ToolBoxError: reflective compilation has failed:

value class may not be a local class
{code}
