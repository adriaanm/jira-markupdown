An anonymous method in a constructor is generated as a static method but the code expects to be called as a virtual method, resulting in the error:

java.lang.VerifyError: (class: com/sosnoski/codejam/shifting/Application$Map, method: setPaths$1 signature: (ILscala/collection/immutable/List;)V) Register 0 contains wrong type

Here's a partial disassembly:

private static final void setPaths$1(int, scala.collection.immutable.List)

0    aload_1    
1    astore_3    
2    aload_3    
3    instanceof    scala.collection.immutable.$colon$colon
6    ifeq    118
9    aload_3    
10    checkcast    scala.collection.immutable.$colon$colon
13    astore    %4
15    aload    %4
17    invokevirtual    scala.collection.immutable.$colon$colon.hd$1 ()Ljava/lang/Object;():Object
20    checkcast    String
23    astore    %5
25    aload    %5
27    astore    %6
29    getstatic    Application$.MODULE$ Lcom/sosnoski/codejam/lost/Application$;
32    aload    %6
34    invokevirtual    Application$.splitValues (Ljava/lang/String;)Lscala/collection/immutable/List;(String):scala.collection.immutable.List
37    astore    %7
39    aload_0    
40    getfield    lefts [I

It's trying to load the field "lefts" from the class reference at position 0, but with a static call it's not there. It's also looking for the int value at position 1 and the list at position 2.ï»¿

Here's the corresponding source code:

{code}

package com.sosnoski.codejam.shifting

import scala.annotation.tailrec

class Map(lefts: Array[Int]) {
  def this() = {
    this(null)
    @tailrec
    def setPaths(index: Int) {
      lefts(index) = 0
      setPaths(index + 1)
    }
  }
}

object Test {
  new Map()
}
{code}

Complete project attached.
