For higher-kinded types:

{code}
$ cat x.scala 
import language.higherKinds

trait Dist[Z] { self =>
  def sample[CC[A] <: Iterable[A]](n: Int): CC[Z] =
    ???
}

$ scalac x.scala -Ycheck:typer
[Now checking: typer]
[check: typer] The symbol, tpe or info of tree `(def sample[CC[A >: Nothing <: Any] >: [A]Nothing <: [A]Iterable[A]](n: Int): CC[Z] = scala.this.Predef.???) : [CC[A] <: Iterable[A]](n: Int)CC[Z]` refers to a out-of-scope symbol, type A. tree.symbol.ownerChain: method sample, trait Dist, package <empty>, package <root>
warning: TreeCheckers detected non-compliant trees in x.scala
one warning found
{code}

And one more example in the comments.
