A Java class with an overloaded constructor, like ArrayList, seems to interact strangely with type inference

{code}
scala> val orig = new java.util.ArrayList[String]                   
orig: java.util.ArrayList[String] = []

scala> val copy = new java.util.ArrayList(orig)                     
<console>:5: error: type mismatch;
 found   : java.util.ArrayList[String]
 required: Int
       val copy = new java.util.ArrayList(orig)
{code}

Adding the type parameter solves the problem
{code}
scala> val copy = new java.util.ArrayList[String](orig)
copy: java.util.ArrayList[String] = []
{code}
