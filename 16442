When using a "hidden" attribute, by passing in None:Option[Seq[Node]] or null:String as the value:
{code}
scala> <elem attr={None} />
res0: scala.xml.Elem = <elem ></elem>
{code}

It breaks XML equality by throwing an NPE in one direction:
{code}
scala> res0 == <elem />
java.lang.NullPointerException
	at scala.xml.NodeSeq.iterator(NodeSeq.scala:51)
	at scala.collection.IterableLike$class.foreach(IterableLike.scala:73)
	at scala.xml.NodeSeq.foreach(NodeSeq.scala:43)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:194)
	at scala.xml.NodeSeq.map(NodeSeq.scala:43)
	at scala.xml.NodeSeq.text(NodeSeq.scala:152)
	at scala.xml.MetaData$$anonfun$asAttrMap$1.apply(MetaData.scala:168)
	at scala.xml.MetaData$$anonfun$asAttrMap$1.apply(MetaData.scala:168)
	at scala.collection.Iterator$$anon$19.next(Iterator.scala:335)
	at scala.collection.Iterator$class.foreach(Iterator.scala:660)
	at scala.collection.Iterator$$anon$19.foreach(Iterator.scala:333)
	at scala.collection.TraversableOnce$class.toMap(TraversableOnce.scala:256)
	at scala.collection.Iterator$$anon$19.toMap(Iterator.scala:333)
	at scala.xml.MetaData.asAttrMap(MetaData.scala:168)
	at scala.xml.MetaData.strict_$eq$eq(MetaData.scala:137)
	at scala.xml.Equality$class.doComparison(Equality.scala:103)
	at scala.xml.Equality$class.equals(Equality.scala:92)
	at scala.xml.MetaData.equals(MetaData.scala:74)
	at scala.xml.Node.strict_$eq$eq(Node.scala:139)
	at scala.xml.Equality$class.doComparison(Equality.scala:103)
	at scala.xml.Equality$class.equals(Equality.scala:92)
	at scala.xml.NodeSeq.equals(NodeSeq.scala:43)
	at .<init>(<console>:9)
	at .<clinit>(<console>)
	at .<init>(<console>:11)
	at .<clinit>(<console>)
	at $print(<console>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:704)
	at scala.tools.nsc.interpreter.IMain$Request$$anonfun$14.apply(IMain.scala:920)
	at scala.tools.nsc.interpreter.Line$$anonfun$1.apply$mcV$sp(Line.scala:43)
	at scala.tools.nsc.io.package$$anon$2.run(package.scala:25)
	at java.lang.Thread.run(Thread.java:662)
{code}

And by returning false in the other direction:
{code}
scala> <elem /> == res0
res2: Boolean = false
{code}

Thus rendering the == function useless or inaccurate for those objects.
