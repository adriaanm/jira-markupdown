I don't think it should be changed.  Perhaps more carefully documented but laziness truly can be a virtue.  In this case its clear that a eagerly generated sequence is what is wanted but in many others you might not need them all generated.

It is easy to go from lazy to strict / eager, but afaik it can't be done the other way around.  A solution, perhaps, is to introduce a "seq" or "sequential" function into predef, something that calls the common cases for toList etc and forces a given sequence to evaluate fully.  

The name would have to be chosen carefully but it would leave a clear indication of what should happen with the code.  In all other cases expect laziness should be the rule.  Calling seq on an eager function / type should be equivalent to a noop
