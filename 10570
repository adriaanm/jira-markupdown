Adriaan seems to agree in this pull request: https://github.com/scala/scala-dist/pull/127. I'm trying out the patch below, it does what I want, need to check for regressions. Before:
```scala
$ scala
Welcome to Scala version 2.10.3 (Java HotSpot(TM) 64-Bit Server VM, Java 1.7.0_51).
scala> object Foo {type A}
<console>:7: error: only classes can have declared but undefined members
       object Foo {type A}
                        ^
```

After:
```scala
$ ./qbin/scala
Welcome to Scala version 2.11.0-20140131-194308-ea897b018a (Java HotSpot(TM) 64-Bit Server VM, Java 1.7.0_51).
scala> object Foo {type A}
defined object Foo
```

Fix:
```scala
--- a/src/compiler/scala/tools/nsc/typechecker/Namers.scala
+++ b/src/compiler/scala/tools/nsc/typechecker/Namers.scala
@@ -1617,6 +1617,7 @@ trait Namers extends MethodSynthesis {
         def symbolAllowsDeferred = (
              sym.isValueParameter
           || sym.isTypeParameterOrSkolem
+          || sym.isAbstractType
           || context.tree.isInstanceOf[ExistentialTypeTree]
         )
         // Does the symbol owner require no undefined members?
```

I'm also wondering about extending the check to concrete classes, while at it, since the reimplementation of these checks in refchecks is not run by the presentation compiler:
```scala
@@ -1623,7 +1624,8 @@ trait Namers extends MethodSynthesis {
         def ownerRequiresConcrete = (
              !sym.owner.isClass
           ||  sym.owner.isModuleClass
           ||  sym.owner.isAnonymousClass
+          ||  sym.owner.isConcreteClass
         )
         if (sym hasAnnotation NativeAttr)
           sym resetFlag DEFERRED
```
