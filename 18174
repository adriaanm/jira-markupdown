This is a regression; it works fine in 2.10.0 but is broken in 2.10.1.

Given this macro definition which does nothing but resetLocalAttrs and then typeCheck the result:

{noformat}
def noop[A](expr: A): A = macro noopImpl[A]  
def noopImpl[A](c: Context)(expr: c.Expr[A]): c.Expr[A] = c.Expr(c.typeCheck(c.resetLocalAttrs(expr.tree)))
{noformat}

If you try to use it you'll get an error:

{noformat}
scala> noop(List(1) match { case Nil => 0; case (x::xs) => x })
error: exception during macro expansion:
scala.reflect.macros.TypecheckException: not found: value _
	at scala.reflect.macros.runtime.Typers$$anonfun$typeCheck$2.apply(Typers.scala:31)
	at scala.reflect.macros.runtime.Typers$$anonfun$typeCheck$2.apply(Typers.scala:25)
	at scala.tools.nsc.typechecker.Contexts$Context.withMacrosEnabled(Contexts.scala:240)
	at scala.reflect.macros.runtime.Typers$$anonfun$3.apply(Typers.scala:18)
	at scala.reflect.macros.runtime.Typers$$anonfun$3.apply(Typers.scala:18)
	at scala.reflect.macros.runtime.Typers$$anonfun$wrapper$1$1.apply(Typers.scala:19)
	at scala.reflect.macros.runtime.Typers$$anonfun$wrapper$1$1.apply(Typers.scala:19)
	at scala.tools.nsc.typechecker.Contexts$Context.withImplicitsEnabled(Contexts.scala:209)
	at scala.reflect.macros.runtime.Typers$$anonfun$1.apply(Typers.scala:17)
	at scala.reflect.macros.runtime.Typers$$anonfun$1.apply(Typers.scala:17)
	at scala.reflect.macros.runtime.Typers$class.wrapper$1(Typers.scala:19)
	at scala.reflect.macros.runtime.Typers$class.typeCheck(Typers.scala:25)
	at scala.reflect.macros.runtime.Context.typeCheck(Context.scala:6)
	at scala.reflect.macros.runtime.Context.typeCheck(Context.scala:6)
	at monadsyntax.package$.noopImpl(package.scala:12)
{noformat}

It looks like possibly related to SI-5464, but seems distinct in that it is a regression.
