Having thought about this more, I think that while it would be safe (and correct) to omit a field's annotations on a getter/setter generated by `@BeanProperty` and `@BooleanBeanProperty`, it _would not_ be safe to omit them on the regular Scala generated accessor/mutator (`def x():Foo` and `def x_(foo:Foo)`). I suspect that this would impact Scala's adherence to the Uniform Access Principle, and the assumptions that come with it.

So I now understand why James and Florian's tickets (SI-2245, SI-1846) take the approaches they do. Unfortunately it seems that the UAP and Scala interoperability with Java annotation conventions are mutually conflicting requirements.

Given that, I still feel that this bug is valid in the limited scope of the `@BeanProperty` and `@BooleanBeanProperty` behavior.
