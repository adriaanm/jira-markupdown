From scalaz:

Scaladoc output 2.8.0:

{code}
implicit def EitherLeftFunctor[X]: Functor[LeftProjection[B, X][B]]
{code}

Scaladoc error 2.8.1.RC1

{code}
Error running doc: java.lang.Error: Polymorphic type '[B]Either.LeftProjection[B,X]' cannot be printed as a type
{code}

Self contained example:

{code}
trait PA[M[_, _], A] {
  type Apply[B] = M[A, B]
}

trait T[M[_]]
trait AB[A, B]

object T {
  def TAB[A] = new T[PA[AB, A]#Apply] {}
}
{code}

