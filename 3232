No, it's the discussion before that clause, which specs typing:
{code}
If the case class is monomorphic, then it
must conform to the expected type of the pattern, and the formal
parameter types of $$x$$'s primary constructor (\sref{sec:class-defs})
are taken as the expected types of the element patterns $$p_1\commadots
p_n$$.  If the case class is polymorphic, then its type parameters are
instantiated so that the instantiation of $$c$$ conforms to the expected
type of the pattern. The instantiated formal parameter types of $$c$$'s
primary constructor are then taken as the expected types of the
component patterns $$p_1\commadots p_n$$. 
{code}
