Sometimes people interested in building Scala from source for packaging purposes, or interested in compiler development in general, assume that it should be possible to recreate the current version of Scala by following a chain of an older versions, building every version N + 1 using version N, back to some zero.

It's certainly a reasonable thought to have. In theory, this would be possible with Scala, _but only in theory_, not in practice. It certainly isn't as easy as building 2.12 with 2.11, building 2.11 with 2.10, and so forth. That definitely doesn't work. The Scala 2.12 compiler is written in Scala 2.12, not Scala 2.11, and so on for previous versions. We've re-STARRed countless times, so the chain of previous versions is now very very very long... (in the hundreds, I imagine?).

Even getting back to the last version of Scala that was built with ant instead of sbt is not a practical or recommended approach, and will only get less practical and less recommended as the ant->sbt changeover recedes further into the past.

A discussion on this from fall 2016 begins here: https://github.com/scala/scala/pull/5381#issuecomment-245370997

Anyway, a word to anyone interested in packaging: starting with an older Scala won't help you. You must figure out a way to build the current Scala using STARR. (Once it's built, you can go on and rebuild it with itself, if you want. The result will be the same; that's the "stability check", which we perform in the Scala CI, as part of the "integrate-bootstrap" script.)
