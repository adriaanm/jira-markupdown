I use a recent 2.9 nightly, svn trunk revision 23417. This bug concerns the msil library.

In TypeParser.scala of the scala compiler there is a call typ.getMethods(), where typ is of type MSILType (ch.epfl.lamp.compiler.msil.Type) from the msil library. It returns MethodInfo[] containing information about the methods of a certain type in a certain assembly. If the return type or the types of the parameters of these methods cannot be found in any assembly a problem occurs.

Expected behavior: Compiler reports an error about not being able to find the definition of the type.

Actual behavior: Compiler assumes System.Object in place of the type which was not found.

Reproduce: Use mscorlib.dll 1.0 from the svn together with System.*.dlls from .NET 4 for compiling the the following code to -target:msil :
```scala
object linq {
  def main( args: Array[String] ){
    var source = new System.Collections.Generic.`LinkedList\1401`[Int]();
    val target =
      System.Linq.Enumerable.Where(
        source,
 	null
      )
  }
}
```

Actual behavior:
```scala
linq-error.scala:9: error: overloaded method value Where with alternatives:
  [TSource <: {}](x$$1: System.Object[TSource],x$$2: System.Object[TSource,Int,Boolean])System.Object[TSource] <and>
  [TSource <: {}](x$$1: System.Object[TSource],x$$2: System.Object[TSource,Boolean])System.Object[TSource]
 cannot be applied to (System.Collections.Generic.LinkedList`1[Int], Null)
      System.Linq.Enumerable.Where(
                             ^
one error found
```

Using mscorlib.dll version 4 instead:
```scala
linq-error.scala:5: error: ambiguous reference to overloaded definition,
both method Where in object Enumerable of type [TSource <: {}](x$$1: System.Collections.Generic.IEnumerable`1[TSource],x$$2: System.Func`2[TSource,Boolean])System.Collections.Generic.IEnumerable`1[TSource]
and  method Where in object Enumerable of type [TSource <: {}](x$$1: System.Collections.Generic.IEnumerable`1[TSource],x$$2: System.Func`3[TSource,Int,Boolean])System.Collections.Generic.IEnumerable`1[TSource]
match argument types (System.Collections.Generic.LinkedList`1[Int],Null)
      System.Linq.Enumerable.Where(
                             ^
one error found
```
