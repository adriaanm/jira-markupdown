Following code crashes scala script runner, but not scalac.
```scala
trait Base {
  type A

  def getA: Option[A]
  def useA(a: Option[A]) = println(a)
}

trait Foo extends Base {
  type A = String
  def getA = Some("some")
}

trait Bar extends Base {
  type A = Int
  def getA = Some(3)
}

object Base extends Foo

object Main extends App {
  val a = Base.getA
  Base.useA(a)
}
```
```scala
error: 
     while compiling: /home/arturas/test.scala
        during phase: explicitouter
     library version: version 2.10.0
    compiler version: version 2.10.0
  reconstructed args: -d /tmp/scalascript3210428704787541003.tmp -Xscript Main

  last tree to typer: TypeTree
              symbol: null
   symbol definition: null
       symbol owners: 
      context owners: value $outer -> object Base -> anonymous class $anon -> method main -> object Main -> package <empty>

== Enclosing template or block ==

Template( // val <local Base>: <notype> in object Base, tree.tpe=this.Base.type
  "java.lang.Object", "Main.$anon.Foo" // parents
  ValDef(
    private
    "_"
    <tpt>
    <empty>
  )
  DefDef( // def <init>(): this.Base.type in object Base
    <method> <triedcooking>
    "<init>"
    []
    List(Nil)
    <tpt> // tree.tpe=this.Base.type
    Block( // tree.tpe=Unit
      Apply( // def <init>(): Object in class Object, tree.tpe=Object
        Base.super."<init>" // def <init>(): Object in class Object, tree.tpe=()Object
        Nil
      )
      ()
    )
  )
)

uncaught exception during compilation: scala.reflect.internal.Types$TypeError
```
