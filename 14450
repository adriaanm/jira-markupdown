This is issue exist for a while, I just tested it on recent Scala 2.8.0.r18542:

Here's the test case:
{code}
object Application {
  
  def test: String = {
    val b = new B
    "" + b.a // `a` is not member of `B`
  }
}

class B {
}
{code}

Where b.a should be detected as a error select, since `a` is not a member of B, but this error cannot be detected before phase 'icode', and will cause compiler crash:
{code}
java.lang.Error: Unknown type: <error>, <error>[class scala.tools.nsc.symtab.Types$$ErrorType$$, class scala.tools.nsc.symtab.Types$$ErrorType$$] TypeRef? false, false
        at scala.tools.nsc.Global.abort(Global.scala:188)
        at scala.tools.nsc.backend.icode.TypeKinds$$class.toTypeKind(TypeKinds.scala:455)
        at scala.tools.nsc.backend.icode.ICodes.toTypeKind(ICodes.scala:23)
        at scala.tools.nsc.backend.icode.GenICode$$ICodePhase.scala$$tools$$nsc$$backend$$icode$$GenICode$$ICodePhase$$$$genLoad(GenICode.scala:888)
        at scala.tools.nsc.backend.icode.GenICode$$ICodePhase.genLoadArguments(GenICode.scala:1111)
        at scala.tools.nsc.backend.icode.GenICode$$ICodePhase.scala$$tools$$nsc$$backend$$icode$$GenICode$$ICodePhase$$$$genLoad(GenICode.scala:828)
        at scala.tools.nsc.backend.icode.GenICode$$ICodePhase.scala$$tools$$nsc$$backend$$icode$$GenICode$$ICodePhase$$$$genLoad(GenICode.scala:947)
        at scala.tools.nsc.backend.icode.GenICode$$ICodePhase.gen(GenICode.scala:116)
        at scala.tools.nsc.backend.icode.GenICode$$ICodePhase$$$$anonfun$$gen$$1.apply(GenICode.scala:73)
        at scala.tools.nsc.backend.icode.GenICode$$ICodePhase$$$$anonfun$$gen$$1.apply(GenICode.scala:73)
        at scala.collection.generic.LinearSequenceTemplate$$class.foreach(LinearSequenceTemplate.scala:82)
        at scala.collection.immutable.List.foreach(List.scala:27)
        at scala.tools.nsc.backend.icode.GenICode$$ICodePhase.gen(GenICode.scala:73)
        at scala.tools.nsc.backend.icode.GenICode$$ICodePhase.gen(GenICode.scala:138)
        at scala.tools.nsc.backend.icode.GenICode$$ICodePhase.gen(GenICode.scala:92)
        at scala.tools.nsc.backend.icode.GenICode$$ICodePhase$$$$anonfun$$gen$$1.apply(GenICode.scala:73)
        at scala.tools.nsc.backend.icode.GenICode$$ICodePhase$$$$anonfun$$gen$$1.apply(GenICode.scala:73)
        at scala.collection.generic.LinearSequenceTemplate$$class.foreach(LinearSequenceTemplate.scala:82)
        at scala.collection.immutable.List.foreach(List.scala:27)
        at scala.tools.nsc.backend.icode.GenICode$$ICodePhase.gen(GenICode.scala:73)
        at scala.tools.nsc.backend.icode.GenICode$$ICodePhase.gen(GenICode.scala:83)
        at scala.tools.nsc.backend.icode.GenICode$$ICodePhase.gen(GenICode.scala:69)
        at scala.tools.nsc.backend.icode.GenICode$$ICodePhase.apply(GenICode.scala:65)
        at scala.tools.nsc.Global$$GlobalPhase.applyPhase(Global.scala:331)
        at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$run$$1.apply(Global.scala:309)
        at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$run$$1.apply(Global.scala:309)
        at scala.collection.Iterator$$class.foreach(Iterator.scala:503)
        at scala.collection.mutable.ListBuffer$$$$anon$$1.foreach(ListBuffer.scala:280)
        at scala.tools.nsc.Global$$GlobalPhase.run(Global.scala:309)
        at scala.tools.nsc.backend.icode.GenICode$$ICodePhase.run(GenICode.scala:58)
        at scala.tools.nsc.Global$$Run.compileSources(Global.scala:807)
        at scala.tools.nsc.Global$$Run.compile(Global.scala:890)
        at scala.tools.nsc.StandardCompileServer.session(CompileServer.scala:117)
        at scala.tools.util.SocketServer$$$$anonfun$$run$$1.apply(SocketServer.scala:79)
        at scala.tools.util.SocketServer$$$$anonfun$$run$$1.apply(SocketServer.scala:79)
        at scala.util.DynamicVariable.withValue(DynamicVariable.scala:73)
        at scala.Console$$.withOut(Console.scala:84)
        at scala.Console$$.withOut(Console.scala:102)
        at scala.tools.util.SocketServer.run(SocketServer.scala:78)
        at scala.tools.nsc.StandardCompileServer.main(CompileServer.scala:155)
        at scala.tools.nsc.CompileServer.main(CompileServer.scala)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at scala.util.ScalaClassLoader$$$$anonfun$$run$$1.apply(ClassLoader.scala:54)
        at scala.util.ScalaClassLoader$$class.asContext(ClassLoader.scala:21)
        at scala.util.URLClassLoader.asContext(ClassLoader.scala:58)
        at scala.util.ScalaClassLoader$$class.run(ClassLoader.scala:54)
        at scala.util.URLClassLoader.run(ClassLoader.scala:58)
        at scala.tools.nsc.ObjectRunner$$.run(ObjectRunner.scala:33)
        at scala.tools.nsc.MainGenericRunner$$.main(MainGenericRunner.scala:138)
        at scala.tools.nsc.MainGenericRunner.main(MainGenericRunner.scala)
error: fatal error (server aborted): Unknown type: <error>, <error>[class scala.tools.nsc.symtab.Types$$ErrorType$$, class scala.tools.nsc.symtab.Types$$ErrorType$$] TypeRef? false, false
one error found
{code}

It's a very bad condition, since the compiler cannot detect an obvious error, which may cause a lot of time for the developer to find why?

