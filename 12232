An alternative mechanism to demonstrate the issue:

{code:scala}
class Parent(x: Any)
trait Param[A]
class Child[A: Param](exp: A) extends Parent(new Object {val p = implicitly[Param[A]]})
{code}

Fails with:
{code}
<console>:9: error: could not find implicit value for parameter e: Param[A]
       class Child[A: Param](exp: A) extends Parent(new Object {val p = implicitly[Param[A]]})
{code}


Whereas this succeeds:
{code:scala}
class Parent(x: Any)
trait Param[A]
class Child[A](exp: A)(implicit param: Param[A]) extends Parent(new Object {val p = param})
{code}
