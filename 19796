I have noticed that the "{{implicitly}}" method gives a rather strange error message if it is used without arguments and the implicit value cannot be found:
```scala
scala> class Foo
defined class Foo

scala> val f: Foo = implicitly
<console>:8: error: ambiguous implicit values:
 both value StringCanBuildFrom in object Predef of type => scala.collection.generic.CanBuildFrom[String,Char,String]
 and method $conforms in object Predef of type [A]=> <:<[A,A]
 match expected type T
       val f: Foo = implicitly
                    ^
```

If you pass it an explicit type param, it gives a much more sensible error:
```scala
scala> val f = implicitly[Foo]
<console>:8: error: could not find implicit value for parameter e: Foo
       val f = implicitly[Foo]
                         ^
```

This looks to me like a minor compiler bug. 
I like using "implicitly" without type args when the type can be inferred, e.g.

{code}myMethodWithLotsOfImplicits()(implicitly, implicitly, myExplicitOverride, implicitly, implicitly)
```scala

rather than, say:
```
myMethodWithLotsOfImplicits()(implicitly[Something], implicitly[SomethingElse], myExplicitOverride, implicitly[YetAnother], implicitly[EvenMore])
```scala

... but this does give very misleading errors if one of the implicits can't be found, as shown above.

h2. Minimised Repro case
```
scala> class Foo
defined class Foo

scala> val f: Foo = implicitly
```scala

h2. Expected result:
```
<console>:8: error: could not find implicit value for parameter e: Foo
       val f: Foo = implicitly
                         ^
```scala

h2. Observed result:
```
<console>:8: error: ambiguous implicit values:
 both value StringCanBuildFrom in object Predef of type => scala.collection.generic.CanBuildFrom[String,Char,String]
 and method $conforms in object Predef of type [A]=> <:<[A,A]
 match expected type T
       val f: Foo = implicitly
                    ^
{code}

## Related issues:

scala/bug#5801 looks similar, but that's marked as fixed in 2.10
scala/bug#8947 looks related, but marked fixed in 2.11.5
