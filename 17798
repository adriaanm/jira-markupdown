{code}
trait TestTrait {
  def twoParams(x: Int, y: Double): String
}

class MockTest extends FreeSpec with MockFactory {

  autoVerify = false

  "Typemacro Mocks should" - {
    "fail if an unexpected method call is made" in {
      withExpectations {
        val m = new mock[TestTrait]
        intercept[ExpectationException] { m.twoParams(42, 1.23) }
      }
    }
  }
}
{code}

{code}
ScalaMock:typemacros:3.0> test-only com.paulbutcher.test.typemacro.MockTest
[debug] Initially invalidated: Set(/Users/xeno_by/Projects/ScalaMock/core_tests/src/test/scala/com/paulbutcher/test/typemacro/MockTest.scala, /Users/xeno_by/Projects/ScalaMock/core_tests/src/test/scala/com/paulbutcher/test/typemacro/macroSynthetic-6c3e75606c464ac1968bc09d5a969d16.scala)
[info] Compiling 1 Scala source to /Users/xeno_by/Projects/ScalaMock/core_tests/target/scala-2.10/test-classes...
================
class TestTrait1 extends TestTrait {
  implicit <paramaccessor> private[this] val factory: org.scalamock.MockFactoryBase = _;
  def <init>()(implicit factory: org.scalamock.MockFactoryBase) = {
    super.<init>();
    ()
  };
  override def twoParams(x: Int, y: Double): String = mock_0(x, y);
  val mock_0 = new org.scalamock.MockFunction2[Int, Double, String](factory, Symbol("twoParams"))
}
================
ClassDef(Modifiers(), TypeName("TestTrait1"), List(), Template(List(Ident(TypeName("TestTrait"))), emptyValDef, List(ValDef(Modifiers(PRIVATE | IMPLICIT | LOCAL | PARAMACCESSOR), TermName("factory"), Select(Select(Ident(TermName("org")), TermName("scalamock")), TypeName("MockFactoryBase")), EmptyTree), DefDef(Modifiers(), nme.CONSTRUCTOR, List(), List(List(), List(ValDef(Modifiers(IMPLICIT | PARAM | PARAMACCESSOR), TermName("factory"), Select(Select(Ident(TermName("org")), TermName("scalamock")), TypeName("MockFactoryBase")), EmptyTree))), TypeTree(), Block(List(pendingSuperCall), Literal(Constant(())))), DefDef(Modifiers(OVERRIDE), TermName("twoParams"), List(), List(List(ValDef(Modifiers(PARAM), TermName("x"), TypeTree(), EmptyTree), ValDef(Modifiers(PARAM), TermName("y"), TypeTree(), EmptyTree))), TypeTree(), Apply(Ident(TermName("mock_0")), List(Ident(TermName("x")), Ident(TermName("y"))))), ValDef(Modifiers(), TermName("mock_0"), TypeTree(), Apply(Select(New(AppliedTypeTree(Select(Select(Ident(TermName("org")), TermName("scalamock")), TypeName("MockFunction2")), List(TypeTree(), TypeTree(), TypeTree()))), nme.CONSTRUCTOR), List(Ident(TermName("factory")), Apply(Ident(TermName("Symbol")), List(Literal(Constant("twoParams"))))))))))
================
[debug] Scala compilation took 3.990531 s
[debug] Step 2 changed sources and immdediate dependencies:
[debug]   Set(/Users/xeno_by/Projects/ScalaMock/core_tests/src/test/scala/com/paulbutcher/test/typemacro/MockTest.scala, /Users/xeno_by/Projects/ScalaMock/core_tests/src/test/scala/com/paulbutcher/test/typemacro/macroSynthetic-6c3e75606c464ac1968bc09d5a969d16.scala, /Users/xeno_by/Projects/ScalaMock/core_tests/src/test/scala/com/paulbutcher/test/typemacro/macroSynthetic-8f25ac285eaf4cf597ac49193f8ba79c.scala)
[debug] Non-trivial strongly connected components: 
[debug]   Set(/Users/xeno_by/Projects/ScalaMock/core_tests/src/test/scala/com/paulbutcher/test/typemacro/macroSynthetic-8f25ac285eaf4cf597ac49193f8ba79c.scala, /Users/xeno_by/Projects/ScalaMock/core_tests/src/test/scala/com/paulbutcher/test/typemacro/MockTest.scala)
[debug] Step 2 invalidated sources:
[debug]   Set(/Users/xeno_by/Projects/ScalaMock/core_tests/src/test/scala/com/paulbutcher/test/typemacro/macroSynthetic-8f25ac285eaf4cf597ac49193f8ba79c.scala, /Users/xeno_by/Projects/ScalaMock/core_tests/src/test/scala/com/paulbutcher/test/typemacro/MockTest.scala, /Users/xeno_by/Projects/ScalaMock/core_tests/src/test/scala/com/paulbutcher/test/typemacro/macroSynthetic-6c3e75606c464ac1968bc09d5a969d16.scala)
[info] Compiling 1 Scala source to /Users/xeno_by/Projects/ScalaMock/core_tests/target/scala-2.10/test-classes...
...
^C12:22 ~/Projects/ScalaMock (typemacros)$ 
{code}
