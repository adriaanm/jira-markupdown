Just wanted to add my thoughts on what may be going on here (partially) and why the bug exhibits only for methods with a type parameter. Hopefully, this helps you in analyzing and resolving the issue.

First note that, compiler is quite happy with (reported with SI-4591):

{code}
object Control {
  def repeat(count: Int = 1, x: Boolean = true)(thunk: => Double) : Unit = (0 until count).foreach(_ => thunk)
  def repeat(thunk: => Double) : Unit = repeat()(thunk)
 
  repeat(3.14)
  repeat(count=5)(3.14)
}
{code}

In the second call, "count=5" would have returned Unit (if count were to be in scope) and that would have not matched the "Double" type of the thunk, so the "repeat(count: Int = 1, x: Boolean = true)(thunk: => Double)" was used and it all worked fine.

With the type parameter version (code reported in the original issue report), the compiler is probably trying to match the call in error to "repeat[T](thunk: => T)" with T bound to Unit (the return type of expression "count=5"). Unlike the "=> Double" case, there is no issue in resolving the thunk to return Unit. But, of course, there is no "count" in the scope and hence the error.

This still doesn't explain why removing "x: Boolean = true" made the error go away.

Really curious how you approach this and resolve it.
