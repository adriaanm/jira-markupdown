In the following, both f1 and f2 receive incorrect unreachable warnings.  In the second variation, the warning is completely unpositioned - it literally just emits "warning: unreachable code".  Since the file I was compiling at the time had about a thousand pattern matches in it, I was reminded of the value of accurate positions.
{code}
class A {
  def f1(x: Int) = x match {
    case _ if false => x
    case 5          => x
  }
  // patmat.scala:4: warning: unreachable code
  //     case 5          => x
  //                        ^
  def f2(x: Int) = x match {
    case _ if false => x
    case 5 if true  => x
  }
  // warning: unreachable code
}
{code}
