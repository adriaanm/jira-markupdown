Depending on the names of the generated elements' attributes (and their casing) either all of the elements are retained in the output XML or just the first one:
{code}
scala> <a>{ for (a <- Set("A","B","C")) yield { <key attrid={a} attrtype="int" /> } }</a>
res0: scala.xml.Elem = <a><key attrid="A" attrtype="int"></key><key attrid="B" attrtype="int"></key><key attrid="C" attrtype="int"></key></a>

scala> <a>{ for (a <- Set("A","B","C")) yield { <key attrid={a} attrType="int" /> } }</a> 
res1: scala.xml.Elem = <a><key attrType="int" attrid="A"></key></a>

scala> <a>{ for (a <- Set("A","B","C")) yield { <key attrid={a} attr.type="int" /> } }</a>
res2: scala.xml.Elem = <a><key attr.type="int" attrid="A"></key></a>

scala> <a>{ for (a <- Set("A","B","C")) yield { <key attrId={a} attrtype="int" /> } }</a> 
res3: scala.xml.Elem = <a><key attrId="A" attrtype="int"></key><key attrId="B" attrtype="int"></key><key attrId="C" attrtype="int"></key></a>

scala> <a>{ for (a <- Set("A","B","C")) yield { <key attr.id={a} attrtype="int" /> } }</a>
res4: scala.xml.Elem = <a><key attr.id="A" attrtype="int"></key><key attr.id="B" attrtype="int"></key><key attr.id="C" attrtype="int"></key></a>

scala> <a>{ for (a <- attrs) yield { <key attrid={a} attrttype="int" /> } }</a> 
res24: scala.xml.Elem = <a><key attrttype="int" attrid="A"></key></a>
{code}

It seems to be connected with the final ordering of the attributes in the element.

Same problem, but with the map function instead of the for loop:

{code}
scala>  class Key(id:String) { def toXml() = <key attrId={id} attrType="int"/> }  
defined class Key

scala> <a>{ Set(new Key("A"), new Key("B"), new Key("C")).map(_.toXml()) }</a>      
res5: scala.xml.Elem = <a><key attrType="int" attrId="A"></key></a>

scala> <a>{ Set(new Key("A"), new Key("B"), new Key("C")).map(_.toXml()) }</a>   
res6: scala.xml.Elem = <a><key attrId="A" attrtype="int"></key><key attrId="B" attrtype="int"></key><key attrId="C" attrtype="int"></key></a>
{code}

But not when the elements are manually specified:
{code}
scala> <a><key attrId="A" attrType="int" /><key attrId="B" attrType="int"/><key attrId="C" attrType="int"/></a>
res5: scala.xml.Elem = <a><key attrType="int" attrId="A"></key><key attrType="int" attrId="B"></key><key attrType="int" attrId="C"></key></a>
{code}

Using scala-2.8.0-final

Can also be reproduced with the nightly build 2.8.1.r23161-b20101001023236

