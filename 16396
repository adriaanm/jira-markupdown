The following program compiles with no error message. At runtime, a `java.lang.AbstractMethodError` is thrown.

The point is, that method `print` defined in class `A` is overwritten in class `B` with an abstract definition. 
In class `C`, which extends `B`, this abstract method is invoked with a super call. I expected a compilation error
on this super call. 
```scala
object Test {

  class A {
    def print() { println("A"); }
  }
  
  abstract class B extends A {
    def print() : Unit
  }
  
  class C extends B {
    override def print() { println("C"); super.print(); }
  }

  def main(args: Array[String]): Unit = {
    val c = new C
    c.print
  }
}
```

