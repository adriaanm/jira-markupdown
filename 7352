We ran into the same problem in RxScala, minimized example:
```
import scala.language.implicitConversions

object Bug extends App {

  class JObserver[T]
  class JSubscriber[T] extends JObserver[T]

  class Foo

  implicit def convertSubscriber[T](s: JSubscriber[_ >: T]): Foo = ???

  implicit def convertObserver[T](s: JObserver[_ >: T]): Foo = ???

  val jSubscriber: JSubscriber[_ >: Int] = ???

  val foo: Foo = jSubscriber // compiler crashes

}
```

It prevents us from creating an "asScala" extension method which works for all types, and we have to give it separate names for those types which are subtypes of others, see https://github.com/ReactiveX/RxScala/pull/208 for the details.
