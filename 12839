Code in two files (attached) mined from David Pollak's Lift

test3/Mega.scala:
{code}
package test3
class MappedBoolean[T <: Mapper[T]](val owner : T) extends MappedField[Boolean, T] {
  override def defaultValue = false
  override def dbFieldClass = classOf[Boolean]
}
trait MappedField[T <: Any,O<:Mapper[O]] {
  def ignoreField = false
  def defaultValue: T
  def dbFieldClass: Class
}
trait Mapper[T <: Mapper[T]] { self : T =>}
{code}

test3/ProtoUser.scala
{code}
package test3
trait ProtoUser[T <: ProtoUser[T]] extends Mapper[T] { self : T =>
  object validated extends MappedBoolean[T](this) {
    override def defaultValue = false
  }
}
{code}

{code}
sean-mcdirmid:~/workspace/test15/src mcdirmid$$ ../../scala/build/quick/bin/scalac -Xresident -d ../bin/

nsc> test3/Mega.scala test3/ProtoUser.scala 

nsc> test3/Mega.scala test3/ProtoUser.scala 

nsc> test3/ProtoUser.scala 
test3/ProtoUser.scala:5: error: error overriding method defaultValue in class MappedBoolean of type ()java.lang.Object;
 method defaultValue has incompatible type => Boolean
    override def defaultValue = false
                 ^
{code}

