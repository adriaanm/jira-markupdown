Actually it's much easier to reproduce:


import scala.collection._
import scala.collection.generic._
trait MyLike[A] extends Seq[A]
                 with GenericTraversableTemplate[A, MyColl] 
                 with SeqLike[A, MyColl[A]] {
  override def companion = null //MyColl
  def iterator = null //seq.iterator
  def apply(i: Int) = error("") //seq(i)
  def length = 0 //seq.length
}
trait MyColl[A] extends MyLike[A]
object MyColl extends SeqFactory[MyColl]


That's it.
