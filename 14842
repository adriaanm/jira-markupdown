I suggest the following addition to Predef:

{code}
type =>?[A, B] = PartialFunction[A, B]
{code}

Partial functions could thus be declared like:

{code}
val f: Int =>? Int = { case i: Int => i * 2 }
{code}

I think that this elegantly captures the nature of a partial function in contrast to a regular function that uses the => operator.
