The following snippets should all run without exceptions and produce List(2).
```scala
type T = Int
val code = reify {
  List[T](2)
}
println(code.eval)
```
```scala
type U = Int
type T = U
val code = reify {
  List[T](2)
}
println(code.eval)
```
```scala
def foo[W] = {
  type U = W
  type T = U
  reify {
    List[T](2)
  }
}
val code = foo[Int]
println(code.tree.freeTypes)
val W = code.tree.freeTypes(2)
cm.mkToolBox().runExpr(code.tree, Map(W -> definitions.IntTpe))
println(code.eval)
```
