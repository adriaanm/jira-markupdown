Scala 2.9 introduced partial specialization (add {{AnyRef}} to the list of {{@specialized}} targets). However this wasn't employed in any of the handful of specialized classes in the standard library.

I think this would be a valuable addition to {{Function1}}. Without this, I recently resorted to:

{code}
abstract class Function1ADouble[A] extends Function1[A, Double] {
  def apply(a: A): Double
}

def mapSum[A](as: Iterable[A])(f: Function1ADouble[A]): Double = {
    var sum = 0d
    val iterator = as.iterator
    while (iterator.hasNext) {
      sum += f.apply(iterator.next())
    }
    sum
}
{code}
}

{{Function2}} might also be a candidate, although it will add more weight.
