Here is another related issue.  There does not seem to be any way to get this to compile without changing the name of the parameter in Foo.
```scala
trait Settings {
  type T = Int
  def f: T = 5
}

class Bar(val settings: Settings) { }

class Foo(settings: Settings) extends Bar(settings) {
  def g = settings.f
}
```
```scala
a.scala:9: error: private value settings escapes its defining scope as part of type Foo.this.settings.T
  def g = settings.f
      ^
one error found
```
