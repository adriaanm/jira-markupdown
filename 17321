The ant 'scalac' task fails on both 2.10M6 and the latest nightly (scala-2.10.0-20120806-133428-114367c0b2) with the following error, irrespective of the particular source files I am trying to compile.  Note the same build works if the 'fsc' Ant task is used instead of the 'scalac' task

scala-compile:
   [scalac] Compiling 1 source file to /pool1/home/alanbur/scala/OLS/build/classes
   [scalac] error: 
   [scalac]      while compiling: /pool1/home/alanbur/scala/OLS/src/scala/com/bleaklow/ols/Main.scala
   [scalac]         during phase: typer
   [scalac]      library version: version 2.10.0-20120806-133428-114367c0b2
   [scalac]     compiler version: version 2.10.0-20120806-133428-114367c0b2
   [scalac]   reconstructed args: -Ywarn-nullary-unit -optimise -d /pool1/home/alanbur/scala/OLS/build/classes -Xlint -Ywarn-inaccessible -Yinline -Yclosure-elim -unchecked -classpath /pool1/home/alanbur/scala/OLS/lib/Scala/scala-library.jar:/opt/scala/lib/scala-library.jar -Ydead-code -dependencyfile /pool1/home/alanbur/scala/OLS/.scala_dependencies -deprecation -sourcepath /pool1/home/alanbur/scala/OLS/src/java -Ywarn-nullary-override -Ywarn-dead-code -Yinline-handlers -Ywarn-adapted-args
   [scalac] 
   [scalac]   last tree to typer: Ident(file)
   [scalac]               symbol: value file (flags: <param> <triedcooking>)
   [scalac]    symbol definition: file: String
   [scalac]                  tpe: String
   [scalac]        symbol owners: value file -> method loadFile -> object Main -> package ols
   [scalac]       context owners: value src -> method loadFile -> object Main -> package ols
   [scalac] 
   [scalac] == Enclosing template or block ==
   [scalac] 
   [scalac] Block(
   [scalac]   // 5 statements
   [scalac]   ValDef( // val src: <?>
   [scalac]     0
   [scalac]     "src"
   [scalac]     <tpt>
   [scalac]     Apply(
   [scalac]       "Source"."fromFile"
   [scalac]       "file" // file: String, tree.tpe=String
   [scalac]     )
   [scalac]   )
   [scalac]   ValDef( // val h: <?>
   [scalac]     0
   [scalac]     "h"
   [scalac]     <tpt>
   [scalac]     TypeApply(
   [scalac]       "Map"."newBuilder"
   [scalac]       // 2 type arguments
   [scalac]       "String"
   [scalac]       "String"
   [scalac]     )
   [scalac]   )
   [scalac]   ValDef( // val s: <?>
   [scalac]     0
   [scalac]     "s"
   [scalac]     <tpt>
   [scalac]     TypeApply(
   [scalac]       "List"."newBuilder"
   [scalac]       "Sample"
   [scalac]     )
   [scalac]   )
   [scalac]   Apply(
   [scalac]     "src"."getLines"."foreach"
   [scalac]     Function(
   [scalac]       ValDef(
   [scalac]         <param>
   [scalac]         "line"
   [scalac]         <tpt>
   [scalac]         <empty>
   [scalac]       )
   [scalac]       Match(
   [scalac]         "line"
   [scalac]         // 2 cases
   [scalac]         CaseDef(
   [scalac]           Apply(
   [scalac]             "Header"
   [scalac]             // 2 arguments
   [scalac]             Bind(
   [scalac]               "key"
   [scalac]               "_"
   [scalac]             )
   [scalac]             Bind(
   [scalac]               "value"
   [scalac]               "_"
   [scalac]             )
   [scalac]           )
   [scalac]           Apply(
   [scalac]             "h"."$plus$eq"
   [scalac]             Apply(
   [scalac]               "key"."$minus$greater"
   [scalac]               "value"
   [scalac]             )
   [scalac]           )
   [scalac]         )
   [scalac]         CaseDef(
   [scalac]           Apply(
   [scalac]             "Data"
   [scalac]             // 2 arguments
   [scalac]             Bind(
   [scalac]               "value"
   [scalac]               "_"
   [scalac]             )
   [scalac]             Bind(
   [scalac]               "number"
   [scalac]               "_"
   [scalac]             )
   [scalac]           )
   [scalac]           Apply(
   [scalac]             "s"."$plus$eq"
   [scalac]             Apply(
   [scalac]               new Sample."<init>"
   [scalac]               // 2 arguments
   [scalac]               Apply(
   [scalac]                 "Integer"."parseInt"
   [scalac]                 // 2 arguments
   [scalac]                 "value"
   [scalac]                 16
   [scalac]               )
   [scalac]               Apply(
   [scalac]                 "java"."lang"."Long"."parseLong"
   [scalac]                 // 2 arguments
   [scalac]                 "number"
   [scalac]                 10
   [scalac]               )
   [scalac]             )
   [scalac]           )
   [scalac]         )
   [scalac]       )
   [scalac]     )
   [scalac]   )
   [scalac]   "src"."close"
   [scalac]   Apply(
   [scalac]     "scala"."Tuple2"
   [scalac]     // 2 arguments
   [scalac]     "h"."result"
   [scalac]     "s"."result"
   [scalac]   )
   [scalac] )
   [scalac] 
   [scalac] == Expanded type of tree ==
   [scalac] 
   [scalac] AliasTypeRef(
   [scalac]   pre = SingleType(pre = ThisType(package scala), object Predef)
   [scalac]   Alias(type String = String)
   [scalac]   normalize = TypeRef(
   [scalac]     TypeSymbol(
   [scalac]       final class String extends Serializable with Comparable[String] with CharSequence
   [scalac]       
   [scalac]     )
   [scalac]   )
   [scalac] )
   [scalac] 
   [scalac] uncaught exception during compilation: scala.reflect.internal.FatalError
   [scalac] scala.reflect.internal.FatalError: package reflect does not have a member ClassManifest
   [scalac] 	at scala.reflect.internal.Definitions$DefinitionsClass.scala$reflect$internal$Definitions$DefinitionsClass$$fatalMissingSymbol(Definitions.scala:978)
   [scalac] 	at scala.reflect.internal.Definitions$DefinitionsClass.getMember(Definitions.scala:1001)
   [scalac] 	at scala.reflect.internal.Definitions$DefinitionsClass.getMemberType(Definitions.scala:1026)
   [scalac] 	at scala.reflect.internal.Definitions$DefinitionsClass.PartialManifestClass$lzycompute(Definitions.scala:467)
   [scalac] 	at scala.reflect.internal.Definitions$DefinitionsClass.PartialManifestClass(Definitions.scala:467)
   [scalac] 	at scala.tools.nsc.typechecker.Implicits$ImplicitSearch.<init>(Implicits.scala:1221)
   [scalac] 	at scala.tools.nsc.typechecker.Implicits$class.inferImplicit(Implicits.scala:82)
   [scalac] 	at scala.tools.nsc.Global$$anon$1.inferImplicit(Global.scala:488)
   [scalac] 	at scala.tools.nsc.typechecker.Implicits$class.inferImplicit(Implicits.scala:37)
   [scalac] 	at scala.tools.nsc.Global$$anon$1.inferImplicit(Global.scala:488)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$applyImplicitArgs$2.apply(Typers.scala:133)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$applyImplicitArgs$2.apply(Typers.scala:128)
   [scalac] 	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)
   [scalac] 	at scala.collection.immutable.List.foreach(List.scala:78)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.applyImplicitArgs(Typers.scala:128)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.adaptToImplicitMethod$1(Typers.scala:859)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.adapt(Typers.scala:1101)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5264)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5322)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.computeType(Typers.scala:5417)
   [scalac] 	at scala.tools.nsc.typechecker.Namers$Namer.assignTypeToTree(Namers.scala:770)
   [scalac] 	at scala.tools.nsc.typechecker.Namers$Namer.getSig$1(Namers.scala:1267)
   [scalac] 	at scala.tools.nsc.typechecker.Namers$Namer.typeSig(Namers.scala:1295)
   [scalac] 	at scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1$$anonfun$apply$4.apply$mcV$sp(Namers.scala:666)
   [scalac] 	at scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1$$anonfun$apply$4.apply(Namers.scala:665)
   [scalac] 	at scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1$$anonfun$apply$4.apply(Namers.scala:665)
   [scalac] 	at scala.tools.nsc.typechecker.Namers$Namer.scala$tools$nsc$typechecker$Namers$Namer$$logAndValidate(Namers.scala:1333)
   [scalac] 	at scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1.apply(Namers.scala:665)
   [scalac] 	at scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1.apply(Namers.scala:664)
   [scalac] 	at scala.Function1$class.apply$mcVL$sp(Function1.scala:39)
   [scalac] 	at scala.runtime.AbstractFunction1.apply$mcVL$sp(AbstractFunction1.scala:12)
   [scalac] 	at scala.tools.nsc.typechecker.Namers$$anon$1.completeImpl(Namers.scala:1443)
   [scalac] 	at scala.tools.nsc.typechecker.Namers$LockingTypeCompleter$class.complete(Namers.scala:1451)
   [scalac] 	at scala.tools.nsc.typechecker.Namers$$anon$1.complete(Namers.scala:1441)
   [scalac] 	at scala.reflect.internal.Symbols$Symbol.info(Symbols.scala:1151)
   [scalac] 	at scala.reflect.internal.Symbols$Symbol.initialize(Symbols.scala:1283)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:4858)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5255)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:2660)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$63$$anonfun$64.apply(Typers.scala:2756)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$63$$anonfun$64.apply(Typers.scala:2756)
   [scalac] 	at scala.collection.immutable.List.loop$1(List.scala:164)
   [scalac] 	at scala.collection.immutable.List.mapConserve(List.scala:180)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:2755)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.typedBlock(Typers.scala:2235)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$typed1$6.apply(Typers.scala:4916)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:4915)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5255)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.transformedOrTyped(Typers.scala:5454)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.typedDefDef(Typers.scala:2067)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:4884)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5255)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:2660)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$63$$anonfun$64.apply(Typers.scala:2756)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$63$$anonfun$64.apply(Typers.scala:2756)
   [scalac] 	at scala.collection.immutable.List.loop$1(List.scala:164)
   [scalac] 	at scala.collection.immutable.List.mapConserve(List.scala:180)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:2755)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.typedTemplate(Typers.scala:1775)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.typedModuleDef(Typers.scala:1682)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:4874)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5255)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:2660)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$63$$anonfun$64.apply(Typers.scala:2756)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$63$$anonfun$64.apply(Typers.scala:2756)
   [scalac] 	at scala.collection.immutable.List.loop$1(List.scala:164)
   [scalac] 	at scala.collection.immutable.List.mapConserve(List.scala:180)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:2755)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:4867)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5255)
   [scalac] 	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5306)
   [scalac] 	at scala.tools.nsc.typechecker.Analyzer$typerFactory$$anon$3.apply(Analyzer.scala:98)
   [scalac] 	at scala.tools.nsc.Global$GlobalPhase.applyPhase(Global.scala:459)
   [scalac] 	at scala.tools.nsc.typechecker.Analyzer$typerFactory$$anon$3$$anonfun$run$1.apply(Analyzer.scala:90)
   [scalac] 	at scala.tools.nsc.typechecker.Analyzer$typerFactory$$anon$3$$anonfun$run$1.apply(Analyzer.scala:90)
   [scalac] 	at scala.collection.Iterator$class.foreach(Iterator.scala:726)
   [scalac] 	at scala.collection.AbstractIterator.foreach(Iterator.scala:1155)
   [scalac] 	at scala.tools.nsc.typechecker.Analyzer$typerFactory$$anon$3.run(Analyzer.scala:90)
   [scalac] 	at scala.tools.nsc.Global$Run.compileUnitsInternal(Global.scala:1576)
   [scalac] 	at scala.tools.nsc.Global$Run.compileUnits(Global.scala:1550)
   [scalac] 	at scala.tools.nsc.Global$Run.compileSources(Global.scala:1546)
   [scalac] 	at scala.tools.nsc.Global$Run.compile(Global.scala:1656)
   [scalac] 	at scala.tools.ant.Scalac.executeInternal(Scalac.scala:699)
   [scalac] 	at scala.tools.ant.Scalac.execute(Scalac.scala:647)
   [scalac] 	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
   [scalac] 	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
   [scalac] 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
   [scalac] 	at java.lang.reflect.Method.invoke(Method.java:597)
   [scalac] 	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
   [scalac] 	at org.apache.tools.ant.Task.perform(Task.java:348)
   [scalac] 	at org.apache.tools.ant.Target.execute(Target.java:392)
   [scalac] 	at org.apache.tools.ant.Target.performTasks(Target.java:413)
   [scalac] 	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)
   [scalac] 	at org.apache.tools.ant.Project.executeTarget(Project.java:1368)
   [scalac] 	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
   [scalac] 	at org.apache.tools.ant.Project.executeTargets(Project.java:1251)
   [scalac] 	at org.apache.tools.ant.Main.runBuild(Main.java:811)
   [scalac] 	at org.apache.tools.ant.Main.startAnt(Main.java:217)
   [scalac] 	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
   [scalac] 	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)

BUILD FAILED
