It's just a field placeholder for a type that doesn't exist yet.

Using `Unit` is convenient because there are already `Unit` instances for 4 typeclasses I'm using for serialization and autogeneration of documentation.

I naively tried using `Nothing` (comparing `Nothing` with `==' doesn't elicit a warning), but then I can't declare instances.

I could also use a `case object Dummy` singleton of `Dummy.type`, which also doesn't elicit a warning, even though it's just as right or wrong in a "comparisons always return true" sense as using `Unit`.  Plus then I have to implement extra TC instances.
