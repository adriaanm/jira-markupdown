Consider the following code which I've put in a file "unreachable.scala":
```scala
package p1

trait T1 {}

sealed abstract class Base

case class A() extends Base
case class B() extends Base

object O1 {
  def fn[V](x: Base with T1) = {
    x match {
      case a: A => "A"
      case b: B => "B"
    }
  }
}

object Main {
  def main(args: Array[String]) = {
    import O1.fn

    println(s"fn(fn(new A() with T1)) => ${fn(new A() with T1)}")
    println(s"fn(fn(new B() with T1)) => ${fn(new B() with T1)}")
  }
}
```

I get a "warning: unreachable code" for line 14 (the "case b: B" statement above) when I compile this.

However when I run p1.Main that line is clearly reachable, because "B" is output.
```
[jluxenberg-workstation ~]$ ~/Downloads/scala-2.11.7/bin/scalac unreachable.scala
unreachable.scala:14: warning: unreachable code
      case b: B => "B"
                   ^
one warning found
[jluxenberg-workstation ~]$ ~/Downloads/scala-2.11.7/bin/scala -classpath . p1.Main
fn(fn(new A() with T1)) => A
fn(fn(new B() with T1)) => B
```

Might be related to scala/bug#7369
