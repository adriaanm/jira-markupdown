After mentioning None, the next example lets a wildcard escape, the next is too specific, and the last is too broad. The things not covered should be some variation on: None, Some(x forSome x not in Some(5))

{code}
scala> def f[T](x: Option[T]) = x match { case Some(Some(5)) => true }
<console>:7: warning: match may not be exhaustive.
It would fail on the following inputs: None, Some((x: T forSome x not in Some[?])), Some(Some((x: Any forSome x not in 5))), Some(_)
       def f[T](x: Option[T]) = x match { case Some(Some(5)) => true }
                                ^
f: [T](x: Option[T])Boolean
{code}
