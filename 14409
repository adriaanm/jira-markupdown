In the following code the *take* operation in method *firstValue2* throws this exception:
```scala
java.lang.ClassCastException: [Ljava.lang.String; cannot be cast to
scala.collection.generic.VectorTemplate
```

Scala code:
```scala
object CastingProblem {
	def main(args: Array[String]) {
		firstValue1("1, 2, 3")
		firstValue2("1, 2, 3")
	}
 
	type Function = (String => Array[String])
 
	val commaSeparator: Function = { v => v.split(", ") }
 
	val firstValue1: Function = { v => var x = commaSeparator(v); x.take(1) }  // works fine
	val firstValue2: Function = { v => commaSeparator(v).take(1) }             // throws a ClassCastException
}
```

Methods *firstValue1* and *firstValue2* should do the same. Both methods differ only in the separation of the method calls and in using one variable. Calling firstValue1 works fine. But when I call firstValue2 I get the ClassCastException.

Tested with: scala-2.8.0.r18409-b20090804145224
