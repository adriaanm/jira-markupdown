Tentatively fixed in r18760 and r18761.

This turns out to be a surprisingly tricky issue.

j.l.String.isEmpty is a Java 1.6 method. However, when viewed from Scala, it's present even when compiled/run against 1.5 because isEmpty is pimped onto String via RichString's implementation of Seq. The generated bytecode is different depending on whether source using isEmpty is compiled against 1.5 or 1.6 and, as you've discovered, the 1.6 bytecode fails when run on a 1.5 VM.

The default builds provided by EPFL are compiled against 1.6, and there's no time to change this for 2.7.7. I'm not even sure that this would be desirable given that Sun is EOL'ing 1.5 on the 30th of October (at least for non-paying customers).

So I've attempted to fixed this by replacing the problematic uses of isEmpty with uses of length == 0. I don't consider this satisfactory, however, and you need to be aware that simply recompiling against 1.5 _isn't_ sufficient to catch all possible uses of this method (or other similar cases). Can the affected parties please test tonight's nightly tomorrow (24th Sept) and report back on whether this particular issue is fixed.

Longer term we need a tool which is able to audit generated bytecode for compliance with specified JDK baselines.

