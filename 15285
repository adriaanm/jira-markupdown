Defining a range from 1 to 10 million causes an out-of-memory in the REPL (tested with 2.8.0.r21786).

REPL Transscript:
```scala
Welcome to Scala version 2.8.0.r21786-b20100504020206 (Java HotSpot(TM) 64-Bit Server VM, Java 1.6.0_20).

scala> val r = (1 to 10000000)
java.lang.OutOfMemoryError: Java heap space
	at java.lang.Integer.toString(Integer.java:308)
	at java.lang.Integer.toString(Integer.java:118)
	at java.lang.String.valueOf(String.java:2931)
	at java.lang.Integer.toString(Integer.java:722)
```

A smaller range (1 to 1000000) does not cause the crash, but takes about 2 seconds or so to process at full CPU load.

All of this does not happen with 2.8.0.Beta1, where even creating a range from 1 to a billion is successful and does not take any noticeable time:
```scala
scala> val r = (1 to 1000000000)
```


System information:
```scala
$$ java -version
java version "1.6.0_20"
Java(TM) SE Runtime Environment (build 1.6.0_20-b02)
Java HotSpot(TM) 64-Bit Server VM (build 16.3-b01, mixed mode)

$$ uname -a
Linux host 2.6.31-21-generic SI-59-Ubuntu SMP Wed Mar 24 07:28:27 UTC 2010 x86_64 GNU/Linux
```
