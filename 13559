I am having a strange compiler issue.   I have been able to simplify the problem to the following:

I have two file.  In first file I have:
```scala
object foobarObj {
abstract class foo 
case class foo1(a: int) extends foo

abstract class bar 
case class bar1( a: foo) extends bar
   
abstract class foobar
case class foobar1(b: bar) extends foobar
   
}
```

In the 2nd file I have:
```scala
import foobarObj._;

object test {         
      def ReturnFooFunction():foo = foo1 (10)
      def returnFooBarFunction1: foobar = foobar1( bar1(foo1(10)))             //OK
      def returnFooBarFunction2: foobar = foobar1(bar1(ReturnFooFunction()))   // Compiler error

 }
```


If I do a clean and force the compiler to compile both files (using maven) It all compiles ok.  But if I only compile the 2nd file I get the following error:
```scala
test.scala:7: error: type mismatch;
[WARNING]  found   : foobarObj.foo(in object foobarObj)
[WARNING]  required: foobarObj.(some other)foo(in object foobarObj)
[WARNING]       def returnFooBarFunction2: foobar = foobar1(bar1(ReturnFooFunction()))   // Compiler error
[WARNING]                                                            ^
[WARNING] one error found
```
