{code}
  ~/newbug> cat S.scala
class S1 { def foo:S1.S2 = null }
object S1 { class S2 }
  ~/newbug> cat J.java 
class J { static { S1.S2 s = null ; } }
  ~/newbug> /usr/local/scala-2.7.2.RC1/bin/scalac S.scala
  ~/newbug> javac -classpath .:/usr/local/scala-2.7.2.RC1/lib/scala-library.jar J.java
  ~/newbug> rm *.class
  ~/newbug> /usr/local/scala-2.7.2.RC2/bin/scalac S.scala
  ~/newbug> javac -classpath .:/usr/local/scala-2.7.2.RC2/lib/scala-library.jar J.java
J.java:1: cannot find symbol
symbol  : class S2
location: class S1
class J { static { S1.S2 s = null ; } }
                     ^
1 error
{code}

Note how compilation succeeds with 2.7.2.RC1 but fails with 2.7.2.RC2.

A possibly interesting detail is that this was fragile even in RC1. If you remove "def foo:S1.S2 = null" from S.scala, then compilation fails in both RC1 and RC2! So when you test the fix you may want to test it both ways, with and without foo.

