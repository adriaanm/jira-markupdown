smaller testcase: 
```scala
trait Element[T]

trait Transform { 
  type T <: Element[T]

  def processBlock = new Array[T](1)
}
```

stack:
```scala
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch.findManifest$$1(Implicits.scala:744)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch.findSubManifest$$1(Implicits.scala:746)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch$$$$anonfun$$8.apply(Implicits.scala:763)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch$$$$anonfun$$8.apply(Implicits.scala:763)
	at scala.collection.TraversableLike$$$$anonfun$$map$$1.apply(TraversableLike.scala:235)
	at scala.collection.TraversableLike$$$$anonfun$$map$$1.apply(TraversableLike.scala:235)
	at scala.collection.LinearSeqLike$$class.foreach(LinearSeqLike.scala:97)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at scala.collection.TraversableLike$$class.map(TraversableLike.scala:235)
	at scala.collection.immutable.List.map(List.scala:45)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch.mot$$1(Implicits.scala:763)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch.manifestOfType(Implicits.scala:794)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch.implicitManifest(Implicits.scala:708)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch.bestImplicit(Implicits.scala:814)
	at scala.tools.nsc.typechecker.Implicits$$class.inferImplicit(Implicits.scala:57)
	at scala.tools.nsc.Global$$analyzer$$.inferImplicit(Global.scala:300)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch.findManifest$$1(Implicits.scala:744)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch.mot$$1(Implicits.scala:776)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch.manifestOfType(Implicits.scala:794)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch.implicitManifest(Implicits.scala:710)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch.bestImplicit(Implicits.scala:814)
	at scala.tools.nsc.typechecker.Implicits$$class.inferImplicit(Implicits.scala:57)
	at scala.tools.nsc.Global$$analyzer$$.inferImplicit(Global.scala:300)
```
