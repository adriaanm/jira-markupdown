Why is that hard to get right? Just as
```scala
def foo(a: Int)(b: Int = a) { ... }

foo(effectfulCode)()
```

rewrites to (I forget the exact mangling, but roughly)
```scala
def foo(a: Int)(b: Int) { ... }
def foo$default2(a: Int): Int = a

val x$1: Int = effectfulCode
foo(x$1)(foo$default2(x$1))
```

, I would expect
```scala
def foo(lazy a: Int)(b: Int = a) { ... }

foo(effectfulCode)()
```

to rewrite to
```scala
def foo(a: => Int)(b: Int) { ... }
def foo$default2(a: => Int): Int = a

lazy val x$1: Int = effectfulCode
foo(x$1)(foo$default2(x$1))
```

Wouldn't that have the desired semantics?
