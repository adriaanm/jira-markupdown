I have two class VA and VB. Each one contains abstract virtual parameter. 
Other classes specialize this virtual parameter.
Is it correct, that my method foo(..).. of A1 takes a parameter of type B2 in this solution?
Thanks and best regards

{code}
class A1  extends VA{

  type TB=B1


}

class A2  extends VA{

  type TB=B2
}

class B1  extends VB{

  type TA=A1

}

class B2  extends VB{

  type TA=A2
}

object TMain  extends App {

  val a : VA = new A1()
  var b : VB = new B2()

  println(a.foo(b.asInstanceOf[a.TB]))

}

class VA{

  type TB <: VB
  var t : TB = _

  def foo(b : TB) : TB = {
    t = b
    return t
  }

}

class VB {

  type TA <: VA
}
{code}
