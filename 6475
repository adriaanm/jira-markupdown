The difference seems to be from boxing. I expected that the specialized version of Function2 would be used here, but perhaps I misunderstand how that works.

{code}
public net.exaxis.tsp.FuncReferenceTest$Vertex[] twoOptCostFunction(net.exaxis.tsp.FuncReferenceTest$Vertex[], scala.Function2);
  Code:
   Stack=6, Locals=8, Args_size=3
   0:	iconst_0
   1:	istore	7
   3:	aload_1
   4:	arraylength
   5:	iconst_1
   6:	isub
   7:	istore	5
   9:	iconst_0
   10:	istore	6
   12:	iload	6
   14:	aload_1
   15:	arraylength
   16:	iconst_2
   17:	isub
   18:	if_icmpge	149
   21:	iload	6
   23:	iconst_1
   24:	iadd
   25:	istore	4
   27:	iload	4
   29:	aload_1
   30:	arraylength
   31:	iconst_1
   32:	isub
   33:	if_icmpge	136
   36:	iload	4
   38:	iconst_1
   39:	iadd
   40:	istore_3
   41:	aload_2
   42:	aload_1
   43:	iload	5
   45:	aaload
   46:	aload_1
   47:	iload	6
   49:	aaload
   50:	invokeinterface	#183,  3; //InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   55:	invokestatic	#187; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   58:	aload_2
   59:	aload_1
   60:	iload	4
   62:	aaload
   63:	aload_1
   64:	iload_3
   65:	aaload
   66:	invokeinterface	#183,  3; //InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   71:	invokestatic	#187; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   74:	iadd
   75:	aload_2
   76:	aload_1
   77:	iload	5
   79:	aaload
   80:	aload_1
   81:	iload	4
   83:	aaload
   84:	invokeinterface	#183,  3; //InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   89:	invokestatic	#187; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   92:	aload_2
   93:	aload_1
   94:	iload	6
   96:	aaload
   97:	aload_1
   98:	iload_3
   99:	aaload
   100:	invokeinterface	#183,  3; //InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   105:	invokestatic	#187; //Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   108:	iadd
   109:	if_icmple	127
   112:	iload	7
   114:	iconst_1
   115:	iadd
   116:	istore	7
   118:	aload_0
   119:	aload_1
   120:	iload	6
   122:	iload	4
   124:	invokespecial	#163; //Method reverse:([Lnet/exaxis/tsp/FuncReferenceTest$Vertex;II)V
   127:	iload	4
   129:	iconst_1
   130:	iadd
   131:	istore	4
   133:	goto	27
   136:	iload	6
   138:	istore	5
   140:	iload	6
   142:	iconst_1
   143:	iadd
   144:	istore	6
   146:	goto	12
   149:	getstatic	#71; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   152:	new	#73; //class scala/collection/mutable/StringBuilder
   155:	dup
   156:	invokespecial	#74; //Method scala/collection/mutable/StringBuilder."<init>":()V
   159:	ldc	#165; //String Found 
   161:	invokevirtual	#78; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   164:	iload	7
   166:	invokestatic	#169; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   169:	invokevirtual	#78; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   172:	ldc	#171; //String  2-Opt swaps
   174:	invokevirtual	#78; //Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
   177:	invokevirtual	#92; //Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
   180:	invokevirtual	#96; //Method scala/Predef$.println:(Ljava/lang/Object;)V
   183:	iload	7
   185:	iconst_0
   186:	if_icmpgt	0
   189:	aload_1
   190:	areturn
{code}
