This is almost as per spec.

In the same scope, a higher-precedent binding shadows a lower-precedent.

In a nested scope, an inner-scoped binding shadows same-or-lower in an outer scope.

In the first example, Dingo._ is lower precedent than p.Foo in same unit, so doesn't shadow; but Dingo._ is higher precedent than p.Foo in different unit so it does shadow.

In the second example, at the same scope, p.Foo in the same unit is higher-precedent and shadows as shown; but Dingo._ should shadow p.Foo in different unit, which it does not in the implementation.

Also, s/shadows/hides.
