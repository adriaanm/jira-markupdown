Hi Ross,

I don't now what the problem is, but I have a suspicion: the field
{code}
class A {
  @Column(...) @BeanProperty var isoCode = "dlfk"
}
{code}
generates
{code}
class A {
  @Column(...) private[this] var isoCode = "dlfk"
  @Column(...) def isoCode = this.isoCode
  @Column(...) def isoCode_=(s: String) = this.isoCode = s
  @Column(...) def getIsoCode() = isoCode
  @Column(...) def setIsoCode(s: String) = isoCode = s
}
{code}

The {{@Column}} annotation is copied to every getter / setter (this will change soon). Now: Hibernate looks for bean getters, i.e. methods starting with {{get}} or {{is}}. For each getter it analyzes the {{@Column}}. Since there are two such methods with the same {{@Column}} it yields an error.

Let's try again when the way annotations are copied (or not) around can be controlled (hopefully soon).

Cheers
