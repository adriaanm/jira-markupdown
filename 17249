The following class throws `VerifyError` when running with `-optimize`. It's in *inline exception handlers*, since it works fine if I pass `-Yskip:inlineExceptionHandlers` (or if I add something in the `finally` block, like a dummy println).

{code}
class Foo {
	lazy val x = try { 10 } finally ()

	def main(args: Array[String]) {		
	}
}
{code}

and the output:
{code}
Exception in thread "main" java.lang.ClassFormatError: Illegal exception table range in class file Foo
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClassCond(ClassLoader.java:631)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:615)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:141)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:283)
	at java.net.URLClassLoader.access$000(URLClassLoader.java:58)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:247)
	at scala.tools.nsc.util.ScalaClassLoader$$anonfun$tryClass$1.apply(ScalaClassLoader.scala:43)
	at scala.tools.nsc.util.ScalaClassLoader$$anonfun$tryClass$1.apply(ScalaClassLoader.scala:43)
	at scala.util.control.Exception$Catch$$anonfun$opt$1.apply(Exception.scala:113)
	at scala.util.control.Exception$Catch$$anonfun$opt$1.apply(Exception.scala:113)
	at scala.util.control.Exception$Catch.apply(Exception.scala:97)
	at scala.util.control.Exception$Catch.opt(Exception.scala:113)
	at scala.tools.nsc.util.ScalaClassLoader$class.tryClass(ScalaClassLoader.scala:42)
	at scala.tools.nsc.util.ScalaClassLoader$class.tryToLoadClass(ScalaClassLoader.scala:37)
	at scala.tools.nsc.util.ScalaClassLoader$URLClassLoader.tryToLoadClass(ScalaClassLoader.scala:139)
	at scala.tools.nsc.util.ScalaClassLoader$.classExists(ScalaClassLoader.scala:162)
	at scala.tools.nsc.GenericRunnerCommand.scala$tools$nsc$GenericRunnerCommand$$guessHowToRun(GenericRunnerCommand.scala:34)
	at scala.tools.nsc.GenericRunnerCommand$$anonfun$2.apply(GenericRunnerCommand.scala:51)
	at scala.tools.nsc.GenericRunnerCommand$$anonfun$2.apply(GenericRunnerCommand.scala:51)
{code}
