The following code compiles fine under scalac:

{code}
case class Test(one : Int, two : Int)
object Test{
 def apply(one : Int): Test = Test(one, 2);
}
{code}

But when I try to load it under the interpreter, I get the following error:

{code}
:7: error: wrong number of arguments for method apply: (Int)Test in object Test
        def apply(one : Int): Test = Test(one, 2);
{code}


And when I try to run it with the script runner, I get the following errors:


{code}
(fragment of caseclass.scala):2: error: Test is already defined as object Test
object Test{
        ^
(fragment of caseclass.scala):3: error: wrong number of arguments for method apply: (Int)Test in object Test
 def apply(one : Int): Test = Test(one, 2);
                               ^
{code}

I'd expect correct behavior of the interpreter and the script runner when using case classes with companion objects.
