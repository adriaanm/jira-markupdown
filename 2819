More:

{code}
scala> def test {Array(1)}   // ok
test: Unit

scala> def test {Array("")}
<console>:4: error: overloaded method value apply with alternatives (x: Unit,xs: Unit*)Array[Unit] <and> (x: Double,xs: Double*)Array[Double] <and> (x: Float,xs: Float*)Array[Float] <and> (x: Long,xs: Long*)Array[Long] <and> (x: Int,xs: Int*)Array[Int] <and> (x: Char,xs: Char*)Array[Char] <and> (x: Short,xs: Short*)Array[Short] <and> (x: Byte,xs: Byte*)Array[Byte] <and> (x: Boolean,xs: Boolean*)Array[Boolean] cannot be applied to (java.lang.String)
       def test {Array("")}

scala> def test {List(1).toArray}
<console>:4: error: polymorphic expression cannot be instantiated to expected type;
 found   : [B >: Int]Array[B]
 required: Unit
       def test {List(1).toArray}
                         ^
scala> def test {List("").toArray}
<console>:4: error: polymorphic expression cannot be instantiated to expected type;
 found   : [B >: java.lang.String]Array[B]
 required: Unit
       def test {List("").toArray}
                          ^

{code}
