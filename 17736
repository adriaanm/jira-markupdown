```scala
class Foo(val x: Int) extends AnyVal

object Test {
  def main(args: Array[String]): Unit = {
    // This works, prints "Foo@5"
    val x = new Foo(5) ; println(x.asInstanceOf[Object])
    // ClassCastException
    println((new Foo(5)).asInstanceOf[Object])
  }
}
/****

java.lang.ClassCastException: Foo cannot be cast to java.lang.Integer
  at scala.runtime.BoxesRunTime.unboxToInt(Unknown Source)
  at Test$.main(a.scala:5)
  at Test.main(a.scala)
  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  at java.lang.reflect.Method.invoke(Method.java:601)
  at scala.tools.nsc.util.ScalaClassLoader$$anonfun$run$1.apply(ScalaClassLoader.scala:68)
  at scala.tools.nsc.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)
  at scala.tools.nsc.util.ScalaClassLoader$URLClassLoader.asContext(ScalaClassLoader.scala:99)
  at scala.tools.nsc.util.ScalaClassLoader$class.run(ScalaClassLoader.scala:68)
  at scala.tools.nsc.util.ScalaClassLoader$URLClassLoader.run(ScalaClassLoader.scala:99)
  at scala.tools.nsc.CommonRunner$class.run(ObjectRunner.scala:22)
  at scala.tools.nsc.ObjectRunner$.run(ObjectRunner.scala:39)

  ****/
```
