Untyped macros from macro-paradise are not allowed to be overriden.

I used to overcome this like so:
{code}
def overloadedMacro(code: _): _ = macro overloadedMacroImpl
def overloadedMacroImpl(c: Context)(code: c.Tree): c.Tree = code

object overloadedMacro {
  def apply(arg: Any)(code: _): _ = macro overloadedMacroImpl
  def overloadedMacroImpl(c: Context)(arg: c.Expr[Any])(code: c.Tree): c.Tree = code
}
{code}

This silly hack worked fine until recent rebase of macro-paradise.

Now it produces scary AssersionError, which doesn't seem to be intended.
{code}
[info] Compiling 1 Scala source to /Users/aztek/typechecking-bug/core/target/scala-2.11/classes...
[error]
[error]      while compiling: /Users/aztek/typechecking-bug/core/src/main/scala/Test.scala
[error]         during phase: typer
[error]      library version: version 2.11.0-20130520-165253-73bd2188e3
[error]     compiler version: version 2.11.0-20130520-165253-73bd2188e3
[error]   reconstructed args: -classpath /Users/aztek/typechecking-bug/core/target/scala-2.11/classes:/Users/aztek/typechecking-bug/macros/target/scala-2.11/classes:/Users/aztek/.ivy2/cache/org.scala-lang.macro-paradise/scala-reflect/jars/scala-reflect-2.11.0-SNAPSHOT.jar -bootclasspath /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsfd.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Frameworks/JavaVM.framework/Frameworks/JavaRuntimeSupport.framework/Resources/Java/JavaRuntimeSupport.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/laf.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/sunrsasign.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar:/Users/aztek/.sbt/boot/org.scala-lang.macro-paradise.scala-2.11.0-SNAPSHOT/lib/scala-library.jar -d /Users/aztek/typechecking-bug/core/target/scala-2.11/classes
[error]
[error]   last tree to typer: Literal(Constant(foo))
[error]               symbol: null
[error]    symbol definition: null
[error]                  tpe: String("foo")
[error]        symbol owners:
[error]       context owners: value <local Test> -> object Test -> package <empty>
[error]
[error] == Enclosing template or block ==
[error]
[error] Template( // val <local Test>: <notype> in object Test
[error]   "App" // parents
[error]   ValDef(
[error]     private
[error]     "_"
[error]     <tpt>
[error]     <empty>
[error]   )
[error]   // 2 statements
[error]   DefDef( // def <init>(): Test.type in object Test
[error]     <method>
[error]     "<init>"
[error]     []
[error]     List(Nil)
[error]     <tpt> // tree.tpe=Test.type
[error]     Block(
[error]       Apply(
[error]         super."<init>"
[error]         Nil
[error]       )
[error]       ()
[error]     )
[error]   )
[error]   Apply( // object overloadedMacro in object Macros
[error]     Apply( // object overloadedMacro in object Macros
[error]       "Macros"."overloadedMacro" // object overloadedMacro in object Macros, tree.tpe=Macros.overloadedMacro.type
[error]       "foo"
[error]     )
[error]     42
[error]   )
[error] )
[error]
[error] == Expanded type of tree ==
[error]
[error] ConstantType(value = Constant(foo))
[error]
[error] uncaught exception during compilation: AssertionError("assertion failed: no symbol could be loaded from class Macros$overloadedMacro$ in object Macros with name overloadedMacro$ and classloader scala.tools.nsc.util.ScalaClassLoader$URLClassLoader@2398724d") @ scala.reflect.runtime.JavaMirrors$JavaMirror.scala$reflect$runtime$JavaMirrors$JavaMirror$$classToScala1(JavaMirrors.scala:974)
java.lang.AssertionError: assertion failed: no symbol could be loaded from class Macros$overloadedMacro$ in object Macros with name overloadedMacro$ and classloader scala.tools.nsc.util.ScalaClassLoader$URLClassLoader@2398724d
	at scala.reflect.runtime.JavaMirrors$JavaMirror.scala$reflect$runtime$JavaMirrors$JavaMirror$$classToScala1(JavaMirrors.scala:974)
	at scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$classToScala$1.apply(JavaMirrors.scala:933)
	at scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$classToScala$1.apply(JavaMirrors.scala:933)
	at scala.reflect.runtime.JavaMirrors$JavaMirror$$anonfun$toScala$1.apply(JavaMirrors.scala:102)
	at scala.reflect.runtime.TwoWayCache.toScala(TwoWayCache.scala:39)
	at scala.reflect.runtime.JavaMirrors$JavaMirror.toScala(JavaMirrors.scala:100)
	at scala.reflect.runtime.JavaMirrors$JavaMirror.classToScala(JavaMirrors.scala:933)
	at scala.reflect.runtime.JavaMirrors$JavaMirror.classSymbol(JavaMirrors.scala:200)
	at scala.reflect.runtime.JavaMirrors$JavaMirror.classSymbol(JavaMirrors.scala:63)
	at scala.reflect.macros.runtime.ScalaReflectionRuntimes$ScalaReflectionResolvers$class.resolveScalaReflectionRuntime(ScalaReflectionRuntimes.scala:23)
	at scala.reflect.macros.runtime.MacroRuntimes$MacroRuntimeResolver.resolveScalaReflectionRuntime(MacroRuntimes.scala:60)
	at scala.reflect.macros.runtime.MacroRuntimes$MacroRuntimeResolver.resolveRuntime(MacroRuntimes.scala:75)
	at scala.reflect.macros.runtime.MacroRuntimes$$anonfun$macroRuntime$3.apply(MacroRuntimes.scala:30)
	at scala.reflect.macros.runtime.MacroRuntimes$$anonfun$macroRuntime$3.apply(MacroRuntimes.scala:30)
	at scala.collection.mutable.MapLike$class.getOrElseUpdate(MapLike.scala:188)
	at scala.collection.mutable.AbstractMap.getOrElseUpdate(Map.scala:92)
	at scala.reflect.macros.runtime.MacroRuntimes$class.macroRuntime(MacroRuntimes.scala:30)
	at scala.tools.nsc.Global$$anon$1.macroRuntime(Global.scala:437)
	at scala.tools.nsc.typechecker.Macros$$anonfun$scala$tools$nsc$typechecker$Macros$$macroExpand1$1.apply(Macros.scala:908)
	at scala.tools.nsc.typechecker.Macros$$anonfun$scala$tools$nsc$typechecker$Macros$$macroExpand1$1.apply(Macros.scala:899)
	at scala.tools.nsc.Global.withInfoLevel(Global.scala:176)
	at scala.tools.nsc.typechecker.Macros$class.scala$tools$nsc$typechecker$Macros$$macroExpand1(Macros.scala:898)
	at scala.tools.nsc.typechecker.Macros$MacroExpander.expand(Macros.scala:562)
	at scala.tools.nsc.typechecker.Macros$MacroExpander.apply(Macros.scala:549)
	at scala.tools.nsc.typechecker.Macros$class.macroExpandApply(Macros.scala:652)
	at scala.tools.nsc.Global$$anon$1.macroExpandApply(Global.scala:437)
	at scala.tools.nsc.typechecker.Typers$Typer.adapt(Typers.scala:1094)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5391)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:2897)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$59.apply(Typers.scala:3001)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$59.apply(Typers.scala:3001)
	at scala.collection.immutable.List.loop$1(List.scala:172)
	at scala.collection.immutable.List.mapConserve(List.scala:188)
	at scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3001)
	at scala.tools.nsc.typechecker.Typers$Typer.typedTemplate1(Typers.scala:2005)
	at scala.tools.nsc.typechecker.Typers$Typer.typedTemplate(Typers.scala:1943)
	at scala.tools.nsc.typechecker.Typers$Typer.typedModuleDef(Typers.scala:1855)
	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5322)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5373)
	at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:2897)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$59.apply(Typers.scala:3001)
	at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$59.apply(Typers.scala:3001)
	at scala.collection.immutable.List.loop$1(List.scala:172)
	at scala.collection.immutable.List.mapConserve(List.scala:188)
	at scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3001)
	at scala.tools.nsc.typechecker.Typers$Typer.typedPackageDef$1(Typers.scala:5010)
	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5325)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5373)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5432)
	at scala.tools.nsc.typechecker.Analyzer$typerFactory$$anon$3.apply(Analyzer.scala:99)
	at scala.tools.nsc.Global$GlobalPhase.applyPhase(Global.scala:406)
	at scala.tools.nsc.typechecker.Analyzer$typerFactory$$anon$3$$anonfun$run$1.apply(Analyzer.scala:91)
	at scala.tools.nsc.typechecker.Analyzer$typerFactory$$anon$3$$anonfun$run$1.apply(Analyzer.scala:90)
	at scala.collection.Iterator$class.foreach(Iterator.scala:743)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1174)
	at scala.tools.nsc.typechecker.Analyzer$typerFactory$$anon$3.run(Analyzer.scala:90)
	at scala.tools.nsc.Global$Run.compileUnitsInternal(Global.scala:1511)
	at scala.tools.nsc.Global$Run.compileUnits(Global.scala:1486)
	at scala.tools.nsc.Global$Run.compileSources(Global.scala:1482)
	at scala.tools.nsc.Global$Run.compile(Global.scala:1589)
	at xsbt.CachedCompiler0.run(CompilerInterface.scala:90)
	at xsbt.CachedCompiler0.run(CompilerInterface.scala:72)
	at xsbt.CompilerInterface.run(CompilerInterface.scala:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at sbt.compiler.AnalyzingCompiler.call(AnalyzingCompiler.scala:73)
	at sbt.compiler.AnalyzingCompiler.compile(AnalyzingCompiler.scala:35)
	at sbt.compiler.AnalyzingCompiler.compile(AnalyzingCompiler.scala:29)
	at sbt.compiler.AggressiveCompile$$anonfun$4$$anonfun$compileScala$1$1.apply$mcV$sp(AggressiveCompile.scala:71)
	at sbt.compiler.AggressiveCompile$$anonfun$4$$anonfun$compileScala$1$1.apply(AggressiveCompile.scala:71)
	at sbt.compiler.AggressiveCompile$$anonfun$4$$anonfun$compileScala$1$1.apply(AggressiveCompile.scala:71)
	at sbt.compiler.AggressiveCompile.sbt$compiler$AggressiveCompile$$timed(AggressiveCompile.scala:101)
	at sbt.compiler.AggressiveCompile$$anonfun$4.compileScala$1(AggressiveCompile.scala:70)
	at sbt.compiler.AggressiveCompile$$anonfun$4.apply(AggressiveCompile.scala:88)
	at sbt.compiler.AggressiveCompile$$anonfun$4.apply(AggressiveCompile.scala:60)
	at sbt.inc.IncrementalCompile$$anonfun$doCompile$1.apply(Compile.scala:24)
	at sbt.inc.IncrementalCompile$$anonfun$doCompile$1.apply(Compile.scala:22)
	at sbt.inc.Incremental$.cycle(Incremental.scala:45)
	at sbt.inc.Incremental$.compile(Incremental.scala:29)
	at sbt.inc.IncrementalCompile$.apply(Compile.scala:20)
	at sbt.compiler.AggressiveCompile.compile2(AggressiveCompile.scala:96)
	at sbt.compiler.AggressiveCompile.compile1(AggressiveCompile.scala:44)
	at sbt.compiler.AggressiveCompile.apply(AggressiveCompile.scala:31)
	at sbt.Compiler$.apply(Compiler.scala:79)
	at sbt.Defaults$$anonfun$compileTask$1.apply(Defaults.scala:572)
	at sbt.Defaults$$anonfun$compileTask$1.apply(Defaults.scala:572)
	at sbt.Scoped$$anonfun$hf2$1.apply(Structure.scala:578)
	at sbt.Scoped$$anonfun$hf2$1.apply(Structure.scala:578)
	at scala.Function1$$anonfun$compose$1.apply(Function1.scala:49)
	at sbt.Scoped$Reduced$$anonfun$combine$1$$anonfun$apply$12.apply(Structure.scala:311)
	at sbt.Scoped$Reduced$$anonfun$combine$1$$anonfun$apply$12.apply(Structure.scala:311)
	at sbt.$tilde$greater$$anonfun$$u2219$1.apply(TypeFunctions.scala:41)
	at sbt.std.Transform$$anon$5.work(System.scala:71)
	at sbt.Execute$$anonfun$submit$1$$anonfun$apply$1.apply(Execute.scala:232)
	at sbt.Execute$$anonfun$submit$1$$anonfun$apply$1.apply(Execute.scala:232)
	at sbt.ErrorHandling$.wideConvert(ErrorHandling.scala:18)
	at sbt.Execute.work(Execute.scala:238)
	at sbt.Execute$$anonfun$submit$1.apply(Execute.scala:232)
	at sbt.Execute$$anonfun$submit$1.apply(Execute.scala:232)
	at sbt.ConcurrentRestrictions$$anon$4$$anonfun$1.apply(ConcurrentRestrictions.scala:160)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:30)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:439)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
	at java.lang.Thread.run(Thread.java:680)
[error] (core/compile:compile) java.lang.AssertionError: assertion failed: no symbol could be loaded from class Macros$overloadedMacro$ in object Macros with name overloadedMacro$ and classloader scala.tools.nsc.util.ScalaClassLoader$URLClassLoader@2398724d
{code}

I put minimal reproducable example here: https://github.com/aztek/untypedmacros-bug, run {{sbt run}} to see the error.
