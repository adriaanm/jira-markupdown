To me, it's strange because `copy` isn't added if the class already has a `copy` method.

I think it insists on case classes being very regular for purposes of rewriting `C()` to `new C()` and for pattern matching, which is the primary use case. Then it becomes tricky to communicate, "I want to do something funky." Without getting bogged down in annotations. 

I would have said returning an anonymous subclass clearly says that this result is somehow different from an ordinary X, namely due to the special factory.
