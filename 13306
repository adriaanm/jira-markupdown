The standard way of implementing a numeric for loop in scala is of course:
```scala
  for(i <- 0 until foo){
    // do stuff
  }
```

Problem: This creates an object, invokes methods, etc. It ends up being significantly slower then the equivalent Java for(int i = 0; i < foo; i++). 

We just ported some code from Java to Scala which was fairly heavy on this sort of numeric looping and between this, primitive unboxing overheads and a few other problems, it ran significantly slower. Methods on Range counted for about 3% of time, so although they weren't the dominating factor it was definitely noticeable.

It would be nice if the compiler could rewrite expressions statically known to be of this form into a numeric for loop. This would work particularly well in combination with scala/bug#757.
