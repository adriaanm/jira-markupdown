The following class, when decompiled with `scalap`, misses all annotations, and the type member T.

{code}
abstract class AbsFun[@specialized R] {
  @specialized val x = 10
  @specialized type T

  def compose[@specialized A](x: A, y: R): A = {
    val y: A = x
    x
  }
}
{code}
output from scalap (trunk):
{code}
$$ build/quick/bin/scalap -cp classes/ AbsFun
abstract class AbsFun[R] extends java.lang.Object with scala.ScalaObject {
  def this() = { /* compiled code */ }
  val x : scala.Int = { /* compiled code */ }
  def compose[A](x : A, y : R) : A = { /* compiled code */ }
}
{code}
