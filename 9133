We could go one step further, and special case the `copy` method in the compiler, so we go directly to the case field accessors, rather than to `copy$default$N`. With that in place, we wouldn't need to synthesize those methods at all.

It isn't the most appealing proposal in terms of compiler modularity. But it is in line with the way that pattern matching uses the accessors directly, rather than using `unapply`. (However, the performance case for that optimization is far more compelling).

This proposal would be incompatible with another feature request, which asks for `copy` to override a method in an inherited trait.
