sbt runs the initialCommands early for legacy reasons; the import leaves the reporter with an error due to a separate bug.

Normal `scala -i` loads init code only after compiler initialization is complete.

Here is a view of the error, which occurs when text-based REPL is trying to figure out what is imported by `duration._` (in order to enter it into its scope mechanism):
```
$ scala
Welcome to Scala 2.12.1 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_111).
Type in expressions for evaluation. Or try :help.

scala> :pa -raw
// Entering paste mode (ctrl-D to finish)

package a { package b { class C }}

// Exiting paste mode, now interpreting.


scala> import a._
import a._

scala> (new sys.SystemProperties) += "scala.repl.trace" -> "true"
res0: scala.sys.SystemProperties =
Map(env.emacs -> "", java.runtime.name -> Java(TM) SE Runtime Environment, sun.boot.library.path -> /home/apm/jdk8/jdk1.8.0_111/jre/lib/amd64, java.vm.version -> 25.111-b14, scala.color -> "", java.vm.vendor -> Oracle Corporation, java.vendor.url -> http://java.oracle.com/, path.separator -> :, java.vm.name -> Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg -> sun.io, user.country -> US, sun.java.launcher -> SUN_STANDARD, sun.os.patch.level -> unknown, java.vm.specification.name -> Java Virtual Machine Specification, user.dir -> /home/apm/projects/scala, java.runtime.version -> 1.8.0_111-b14, java.awt.graphicsenv -> sun.awt.X11GraphicsEnvironment, java.endorsed.dirs -> /home/apm/jdk8/jdk1.8.0_111/jre/lib/endorsed, os.arch...
scala> import b._
parse("import b._") Success(List(import b._))
  0: Import
  7: Ident

parse("

object $read {
  ;

object $iw {
// $line3.$read definedNames List(), curImps Set()
object $iw {
import a._
object $iw {
object $iw {

       import b._


}
[snip]
              val $ires8 = b
            }
          }
        }
      }
    }
  }
}
[silent] <console>:20: error: package a.b is not a value
       b
       ^
```

The fix is to ignore the error when running under sbt.
```
$ sbt
[info] Loading project definition from /home/apm/tmp/dummy/project
[info] Set current project to dummy (in build file:/home/apm/tmp/dummy/)
> ++ /home/apm/projects/scala/build/pack
[info] Setting Scala home to /home/apm/projects/scala/build/pack with actual version 2.12.2-20170110-140852-827d69d
[info] 	and using 2.12.2-20170110-140852-827d69d for resolving dependencies.
[info] Reapplying settings...
[info] Set current project to dummy (in build file:/home/apm/tmp/dummy/)
> console
[info] Starting scala interpreter...
[info] 
Welcome to Scala 2.12.2-20170110-140852-827d69d (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_111).
Type in expressions for evaluation. Or try :help.

scala> 42
res0: Int = 42

scala> 
[success] Total time: 8 s, completed Jan 19, 2017 1:55:42 PM
> set initialCommands in console := "import scala.concurrent._, duration._"
[info] Defining *:console::initialCommands
[info] The new value will be used by compile:console, compile:consoleQuick and 1 others.
[info] 	Run `last` for details.
[info] Reapplying settings...
[info] Set current project to dummy (in build file:/home/apm/tmp/dummy/)
> console
[info] Starting scala interpreter...
[info] 
Welcome to Scala 2.12.2-20170110-140852-827d69d (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_111).
Type in expressions for evaluation. Or try :help.

scala> import scala.concurrent._
import duration._


scala> 42
res0: Int = 42

scala> Duration
res1: scala.concurrent.duration.Duration.type = scala.concurrent.duration.Duration$@2338e345

scala> 
```
