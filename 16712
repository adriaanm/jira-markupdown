Scala's compiler prints several types ambiguously.

For example:
- functions that takes n arguments of type A, B, C, .. and functions that take a single n-tuple (A, B, C, ...) argument.
- higher-order functions (A => B) => C and curried functions A => B => C.

This can produce some confusing type errors such as

`scala> k(z)`
`<console>:10: error: type mismatch;`
`&nbsp;found : Int => Int => Int`
`&nbsp;required: Int => Int => Int`

Or

`scala> h(g)`
`<console>:10: error: type mismatch;`
`&nbsp;found : (Int, Int) => Int`
`&nbsp;required: (Int, Int) => Int`

Here's a gist of how to set up these particular type errors: https://gist.github.com/1655807
