Take the following class:

{code}
class Klass {

	var num1 = retrieve(1)

	var num2 = retrieve(1L)

	def retrieve(id: java.lang.Long) = {
		id
	}

	def retrieve(id: java.lang.Integer) = {
		id
	}
}
{code}

Latest Scala will complain with a compile-error:
{code}
src/main/scala/Klass.scala:8: error: ambiguous reference to overloaded definition,
both method retrieve in class Klass of type (id: java.lang.Integer)java.lang.Integer
and  method retrieve in class Klass of type (id: java.lang.Long)java.lang.Long
match argument types (Int)
        var num1 = retrieve(1)
                   ^
one error found
{code}

I should be obvious that retrieve(1) should call retrieve(id: java.lang.Integer) and therefore boxed to the Integer object, not Long
