My usual "peek at how specialization does it" whenever miniboxing does something stupid revealed another problem:
```scala
sun@sun-laptop:/mnt/data-local/Work/Workspace/dev/miniboxing-plugin/sandbox(wip)$ cat mb_override_2-spec.scala 
trait Base1[@specialized(Long) T, S] {
  def overrideMe(t: T, s: S): T = t
}

trait Base2[@specialized(Long) T, @specialized(Long) S] {
  def overrideMe(t: T, s: S): T = t
}

class LongIsBase1andBase2 extends Base1[Long, Long] with Base2[Long, Long] {
  override def overrideMe(t: Long, s: Long): Long = s
}

object Test extends App {
  val long = new LongIsBase1andBase2
  val base1: Base1[Long, Long] = long
  val base2: Base2[Long, Long] = long
  println(long.overrideMe(1,2))
  println(base1.overrideMe(1,2))
  println(base2.overrideMe(1,2)) 
}
sun@sun-laptop:/mnt/data-local/Work/Workspace/dev/miniboxing-plugin/sandbox(wip)$ ../../scala-trunk/build/quick/bin/scalac mb_override_2-spec.scala 
sun@sun-laptop:/mnt/data-local/Work/Workspace/dev/miniboxing-plugin/sandbox(wip)$ ../../scala-trunk/build/quick/bin/scala Test
2
1 // should have been 2, right?
2
```

