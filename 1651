If by "not in my hands" you mean "not compiled by me", then invoking it from a local deprecated def will suppress the warning:

{code}
scala> @deprecated("","") def f = 8
f: Int

scala> f
<console>:9: warning: method f is deprecated: 
              f
              ^
scala> object A {
     | def a = {
     | @deprecated("","") def _f = f
     | _f
     | }}
defined object A

scala> A.a
res1: Int = 8
{code}

I've forgotten now whether that was a feature or a bug.  I think a feature, because local defs are not API and therefore cannot be deprecated, so invoking them cannot warn.  However, marking them deprecated says the call stack is polluted with deprecations thereafter, but you know what you're doing.  It's the `asInstanceOf` for deprecations.

This came up again, in the context of wanting -Xfatal-warnings for only some warnings, or conversely, -Xfatal-warnings but with certain unavoidable warnings suppressed.

http://stackoverflow.com/a/17506410/1296806

