I'm just opening this because I had thought all the "1 != 1" error messages were squashed, but looky here.
{noformat}
scala> def f[A, CC[X] <: Traversable[X], Coll <: CC[A]](xs: Coll) = xs
f: [A, CC[X] <: Traversable[X], Coll <: CC[A]](xs: Coll)Coll

scala> f[Int, List, List[Int]](List(1))
res0: List[Int] = List(1)

scala> f(List(1))
<console>:9: error: inferred kinds of the type arguments (Nothing,List[Int],List[Int]) do not conform to the expected kinds of the type parameters (type A,type CC,type Coll).
List[Int]'s type parameters do not match type CC's expected parameters: class List has one type parameter, but type CC has one
              f(List(1))
              ^
{noformat}
That error message is so far off in the woods, it has to be useful somehow.

I don't expect those types to be inferred anytime soon, I'm only here for the error (and the internal breakdowns which must be taking place on the way to it.) However in case anyone stumbles across this for less navel-gazey reasons, you can get there by breaking up the parameter list a little.
{noformat}
scala> def f[A, CC[X] <: Traversable[X], Coll](xs: Coll)(implicit ev: Coll <:< CC[A]) = xs
f: [A, CC[X] <: Traversable[X], Coll](xs: Coll)(implicit ev: <:<[Coll,CC[A]])Coll

scala> f(List(1))
res1: List[Int] = List(1)
{noformat}
