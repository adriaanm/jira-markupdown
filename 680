Actually, this is according to the spec (Section 5.3.2 Case Classes):

  ...
  If a type parameter section is missing in the class, it is also missing in the apply
  and unapply methods. The definition of apply is omitted if class c is abstract. The
  name of the unapply method is changed to unapplySeq if the first parameter section
  ps1 of c ends in a repeated parameter of (ï¿½4.6.2). If a companion object c exists al-
  ready, no new object is created, but the apply and unapply methods are added to
  the existing object instead.

Note that you can work around this issue by declaring the case class **abstract**.
