From that thread:

{noformat}
On Fri, Sep 20, 2013 at 7:13 AM, Paul Phillips <paulp@improving.org> wrote:
 -        issueNormalTypeError(tree, withAddendum(tree.pos)(typeErrorMsg(foundType, req)))
 +        issueNormalTypeError(treeInfo.dissectApplied(tree).callee, withAddendum(tree.pos)(typeErrorMsg(foundType, req)))

That fixes SI-3971 and improves the positioning of numerous errors. It also breaks the compiler.

We're in a method called "AdaptTypeError", which is calling a method called "issueNormalTypeError", but everything's fine! Don't fiddle with anything for god's sake! It's all part of a day's work on the road to the bytecode store.

Wow. The position of the type error is used to decide whether to try a view.

https://github.com/scala/scala/blob/v2.11.0-M5/src/compiler/scala/tools/nsc/typechecker/Typers.scala#L4160

Here's the history:

https://github.com/scala/scala/commit/b1a3187949f
https://github.com/scala/scala/commit/2515edd33b3

A few more cases in `treesInResult` keeps you a cog or two away from being squashed.

-jason

diff --git a/src/compiler/scala/tools/nsc/typechecker/ContextErrors.scala b/src/compiler/scala/tools/nsc/typechecker/ContextErrors.scala
index 1f4d5cb..bdcb7ba 100644
--- a/src/compiler/scala/tools/nsc/typechecker/ContextErrors.scala
+++ b/src/compiler/scala/tools/nsc/typechecker/ContextErrors.scala
@@ -181,7 +181,8 @@ trait ContextErrors {
         }
         assert(!foundType.isErroneous && !req.isErroneous, (foundType, req))
 
-        issueNormalTypeError(tree, withAddendum(tree.pos)(typeErrorMsg(foundType, req)))
+        val errTree = treeInfo.dissectApplied(tree).callee
+        issueNormalTypeError(errTree, withAddendum(errTree.pos)(typeErrorMsg(foundType, req)))
         infer.explainTypes(foundType, req)
       }
 
diff --git a/src/compiler/scala/tools/nsc/typechecker/Typers.scala b/src/compiler/scala/tools/nsc/typechecker/Typers.scala
index 5c8f1bd..1552394 100644
--- a/src/compiler/scala/tools/nsc/typechecker/Typers.scala
+++ b/src/compiler/scala/tools/nsc/typechecker/Typers.scala
@@ -4177,6 +4177,9 @@ trait Typers extends Adaptations with Tags with TypersTracking with PatternTyper
             case If(_, t, e)                        => treesInResult(t) ++ treesInResult(e)
             case Try(b, catches, _)                 => treesInResult(b) ++ catches
             case Typed(r, Function(Nil, EmptyTree)) => treesInResult(r)
+            case Select(qual, name)                 => treesInResult(qual)
+            case Apply(fun, args)                   => treesInResult(fun) ++ args.flatMap(treesInResult)
+            case TypeApply(fun, args)               => treesInResult(fun) ++ args.flatMap(treesInResult)
             case _                                  => Nil
           })
           def errorInResult(tree: Tree) = treesInResult(tree) exists (_.pos == typeError.errPos)
{noformat}
