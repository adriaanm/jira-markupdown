We just had a related discussion on scala-users r1

I just encountered a similar problem when attempting to annotate a field with the @Autowired annotation from Spring. Spring looks for this annotation on fields and methods. Normally, one would choose to annotated the field, or a setter.

There was a suggestion on that thread to use the forthcoming support for nested annotations in 2.8.0 to use such a meta-annotation along these lines:
```scala
class Foo {
    // Specific case.
    @FieldAnnotation(value=@Autowired)
    def myField

    // or more generally.
    @TargetedAnnotation(targets={@Field, @BeanPropertyAccessor}, value=@Autowired)
    def myField
}
```

The typical use case would be to target the annotation to exactly one of the field, scala mutator, scala accessor, bean property mutator, bean property accessor.

Ideally, the meta-annotation should be extensible, so that new compiler plugins that generate potential annotation targets could be used in addition to this meta-annotation. If this were achieved, @BeanProperty would not be treated specially by the compiler.

1 http://www.nabble.com/-scala--Annotating-a-field-without-annotating-the-associated-methods---Spring--%40Autowired-annotation-td23596908.html
