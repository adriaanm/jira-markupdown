```scala
scala> case class A[T](x: Int) { def copy(a: Int)(b: Int = 0) = 0 }

Exception in thread "main" java.util.NoSuchElementException: tail of empty list
	at scala.collection.immutable.Nil$$.tail(List.scala:448)
	at scala.collection.immutable.Nil$$.tail(List.scala:443)
	at scala.tools.nsc.symtab.Types$$SubstSymMap.subst$$1(Types.scala:2924)
	at scala.tools.nsc.symtab.Types$$SubstSymMap.apply(Types.scala:2927)
	at scala.tools.nsc.typechecker.Namers$$Namer$$$$anonfun$$finishWith$$1$$1$$$$anonfun$$apply$$1$$$$anonfun$$apply$$2.apply(Namers.scala:320)
	at scala.tools.nsc.typechecker.Namers$$Namer$$$$anonfun$$finishWith$$1$$1$$$$anonfun$$apply$$1$$$$anonfun$$apply$$2.apply(Namers.scala:318)
	at scala.collection.LinearSequenceLike$$class.foreach(LinearSequenceLike.scala:85)
	at scala.collection.immutable.List.foreach(List.scala:27)
	at scala.tools.nsc.typechecker.Namers$$Namer$$$$anonfun$$finishWith$$1$$1$$$$anonfun$$apply$$1.apply(Namers.scala:318)
	at scala.tools.nsc.typechecker.Namers$$Namer$$$$anonfun$$finishWith$$1$$1$$$$anonfun$$apply$$1.apply(Namers.scala:317)
	at scala.collection.LinearSequenceLike$$class.foreach(LinearSequenceLike.scala:85)
	at scala.collection.immutable.List.foreach(List.scala:27)
	at scala.tools.nsc.typechecker.Namers$$Namer$$$$anonfun$$finishWith$$1$$1.apply(Namers.scala:317)
	at scala.tools.nsc.typechecker.Namers$$Namer$$$$anonfun$$finishWith$$1$$1.apply(Namers.scala:314)
	at scala.tools.nsc.typechecker.Namers$$$$anon$$1.complete(Namers.scala:1288)
```
