I'm not sure these are the correct signatures, but I suggest adding
```scala
def fromIterator(k: K) : Iterator[(K, V)]
def toIterator(k: K) : Iterator[(K, V)]
```
If getting the iterator is not possible with the current implementation, I would be happy to get the methods for finding the binding with the key less, less-or-equal, greater-or-equal or greater than the given one.
Currently I'm forced to construct the range maps with 'from' and 'to' which is highly inefficient from the performance point of view.
