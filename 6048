To reinforce Paul's point about fields not serving a useful purpose for Java interop, remember that scalac already elides field definitions for abstract vals.

{code:title=Test.java}
public abstract class Test {
  public int iHaveAField;
}

Compiled from "Test.java"
public abstract class Test {
  public int iHaveAField;

  public Test();
    Code:
       0: aload_0       
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return        
}
```scala

{code:title=Test.scala}
abstract class Test {
  val dudeWheresMyField: Int
}

Compiled from "Test.scala"
public abstract class Test {
  public abstract int dudeWheresMyField();

  public Test();
    Code:
       0: aload_0       
       1: invokespecial #12                 // Method java/lang/Object."<init>":()V
       4: return        
}
```

