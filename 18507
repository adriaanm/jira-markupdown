{noformat}
scala-hash v2.11.0-M4~83 -nc
[info] downloading http://scala-webapps.epfl.ch/artifacts/369f1f27ac6a27918e767e393dc6e22f7424aa38/pack.tgz ...done.
[info] scala revision from 2013-05-24 09:53:17 -0700 downloaded to /Users/jason/usr/scala-v2.11.0-M3-42-g369f1f2
[info] v2.11.0-M4 => /Users/jason/usr/scala-v2.11.0-M3-42-g369f1f2
Welcome to Scala version 2.11.0-20130524-095317-369f1f27ac (Java HotSpot(TM) 64-Bit Server VM, Java 1.6.0_37).
Type in expressions to have them evaluated.
Type :help for more information.

scala> :power
** Power User mode enabled - BEEP WHIR GYVE **
** :phase has been set to 'typer'.          **
** scala.tools.nsc._ has been imported      **
** global._, definitions._ also imported    **
** Try  :help, :vals, power.<tab>           **

scala> class C(val a: Any) extends AnyVal
defined class C

  /code/scala scala-hash v2.11.0-M4~82 -nc
[info] v2.11.0-M4 => /Users/jason/usr/scala-v2.11.0-M3-46-g5773fbb
Welcome to Scala version 2.11.0-20130526-044518-5773fbb7f5 (Java HotSpot(TM) 64-Bit Server VM, Java 1.6.0_37).
Type in expressions to have them evaluated.
Type :help for more information.

scala> :power
** Power User mode enabled - BEEP WHIR GYVE **
** :phase has been set to 'typer'.          **
** scala.tools.nsc._ has been imported      **
** global._, definitions._ also imported    **
** Try  :help, :vals, power.<tab>           **

scala> class C(val a: Any) extends AnyVal
ReplGlobal.abort: Unknown type: <notype>, <notype> [class scala.reflect.internal.Types$NoType$, class scala.reflect.internal.Types$NoType$] TypeRef? false
error: Unknown type: <notype>, <notype> [class scala.reflect.internal.Types$NoType$, class scala.reflect.internal.Types$NoType$] TypeRef? false
error: uncaught exception during compilation: FatalError("
     while compiling: <console>
        during phase: icode
     library version: version 2.11.0-20130526-044518-5773fbb7f5
    compiler version: version 2.11.0-20130526-044518-5773fbb7f5
  reconstructed args: -nc

  last tree to typer: Ident(a)
              symbol: value a (flags: <param>)
   symbol definition: a: Object
                 tpe: Object
       symbol owners: value a -> constructor $read$C -> class iw$C -> package $line13
      context owners: object iw -> package $line13

== Enclosing template or block ==

Template( // val <local $iw>: <notype>, tree.tpe=type
  "java.lang.Object" // parents
  ValDef(
    private
    "_"
    <tpt>
    <empty>
  )
  DefDef( // def <init>(): type
    <method>
    "<init>"
    []
    List(Nil)
    <tpt> // tree.tpe=type
    Block( // tree.tpe=Unit
      Apply( // def <init>(): Object in class Object, tree.tpe=Object
        iw.super."<init>" // def <init>(): Object in class Object, tree.tpe=()Object
        Nil
      )
      ()
    )
  )
)

== Expanded type of tree ==

TypeRef(TypeSymbol(class Object extends ))

Unknown type: <notype>, <notype> [class scala.reflect.internal.Types$NoType$, class scala.reflect.internal.Types$NoType$] TypeRef? false") @ scala.reflect.internal.SymbolTable.abort(SymbolTable.scala:53)
scala.reflect.internal.FatalError:
     while compiling: <console>
        during phase: icode
     library version: version 2.11.0-20130526-044518-5773fbb7f5
    compiler version: version 2.11.0-20130526-044518-5773fbb7f5
  reconstructed args: -nc

  last tree to typer: Ident(a)
              symbol: value a (flags: <param>)
   symbol definition: a: Object
                 tpe: Object
       symbol owners: value a -> constructor $read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw$C -> class iw$C -> package $line13
      context owners: object iw -> package $line13

== Enclosing template or block ==

Template( // val <local $iw>: <notype>, tree.tpe=type
  "java.lang.Object" // parents
  ValDef(
    private
    "_"
    <tpt>
    <empty>
  )
  DefDef( // def <init>(): type
    <method>
    "<init>"
    []
    List(Nil)
    <tpt> // tree.tpe=type
    Block( // tree.tpe=Unit
      Apply( // def <init>(): Object in class Object, tree.tpe=Object
        iw.super."<init>" // def <init>(): Object in class Object, tree.tpe=()Object
        Nil
      )
      ()
    )
  )
)

== Expanded type of tree ==

TypeRef(TypeSymbol(class Object extends ))

Unknown type: <notype>, <notype> [class scala.reflect.internal.Types$NoType$, class scala.reflect.internal.Types$NoType$] TypeRef? false
	at scala.reflect.internal.SymbolTable.abort(SymbolTable.scala:53)
	at scala.tools.nsc.Global.abort(Global.scala:253)
	at scala.tools.nsc.interpreter.IMain$$anon$1.scala$tools$nsc$interpreter$ReplGlobal$$super$abort(IMain.scala:247)
	at scala.tools.nsc.interpreter.ReplGlobal$class.abort(ReplGlobal.scala:20)
	at scala.tools.nsc.interpreter.IMain$$anon$1.abort(IMain.scala:247)
	at scala.tools.nsc.backend.icode.TypeKinds$class.toTypeKind(TypeKinds.scala:401)
	at scala.tools.nsc.backend.icode.ICodes.toTypeKind(ICodes.scala:18)
	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.genLoadQualifier(GenICode.scala:1079)
	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.genLoadQualUnlessElidable$1(GenICode.scala:851)
	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.genLoadSelect$1(GenICode.scala:854)
	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.scala$tools$nsc$backend$icode$GenICode$ICodePhase$$genLoad(GenICode.scala:867)
	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.genLoadQualifier(GenICode.scala:1079)
	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.genLoadApply6$1(GenICode.scala:772)
	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.scala$tools$nsc$backend$icode$GenICode$ICodePhase$$genLoad(GenICode.scala:807)
	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.gen(GenICode.scala:118)
	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.gen(GenICode.scala:66)
	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.gen(GenICode.scala:143)
	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.gen(GenICode.scala:93)
	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.gen(GenICode.scala:66)
	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.gen(GenICode.scala:84)
	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.gen(GenICode.scala:62)

{noformat}
