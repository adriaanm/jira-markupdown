Narrowed it down to:

{code}
trait PartialType[T[_, _], A] {
  type Apply[B] = T[A, B]
}

sealed trait State[S, +A] 
trait Pure[P[_]]
trait StatePure[X] extends Pure[PartialType[State, X]#Apply]
{code}

While type checking the type application `Pure[PartialType[State, X]#Apply]`, the type `PartialType[State, X]#Apply` gets normalised to `[B] State[X,B]`, which is a PolyType that represents an anonymous type function when typing in HKmode. I think this has started happening because types are normalised more aggressively now (thus, this ticket seems related to SI-2208). The assert can safely be turned into a guard (which is what I'll check in asap).

NOTE: it would be interesting to know why types are getting normalised more aggressively all of a sudden -- that change might impact a lot of stuff!
