It is used like this:
```scala
managers(name).packAsset(asset)
```
where
```scala
packAsset[T](asset: T): Option[Asset]
```
has implementation dependent on name (like file extension). Those methods look like
```scala
  def packAsset[T](asset: T): Option[Asset] = asset match {
    case (gdxAsset: GdxBitmapFont) => Some(BitmapFontAsset(gdxAsset))
    case _ => None
  }
```
I use this to pack unrelated classes from Java library (not having common parent other than Object) into AnyVal subclasses of Asset trait, and include type information that was previously enclosed only in fileName: String.

In that case adding "Any" to asset value is valid thing to do?
