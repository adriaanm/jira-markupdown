Another reproduction, as reported in scala/bug#8508
```scala
object Test {
  (null: Any) match {
    case Extractor(otherExRep) => 
      println(otherExRep)
  }
 
  trait T {
    type U 
  }
 
  object Extractor {
    def unapply(t: T): Option[t.U] = ???
  }
}
/*
{
  <synthetic> val o8: Option[<unapply-selector>.U] = Test.this.Extractor.unapply(x2);
  if (o8.isEmpty.unary_!)
    {
      val otherExRep: t.U = o8.get; // type error
      matchEnd5(scala.this.Predef.println(otherExRep))
    }
  else
    case7()
}
*/
```

I tried to fix this by sprinking in some missing substitution, but there are deeper problems that get in the way (or, at least, a chain of shallow problems)

My attempt and analysis: https://github.com/retronym/scala/compare/ticket;6130?expand=1

See also scala/bug#7459
