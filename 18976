If a ProcessBuilder process is internally executed on a background thread (the choice of which depends on how the process is built), exceptions thrown by a call to the underlying java.lang.ProcessBuilder.start() method are uncaught, leading to:

* The exception hitting the thread's uncaught exception handler, and
* Deadlocks and/or unreported errors.

A reproduction case for 2.10.3:

{code}
import scala.sys.process._
import java.io.ByteArrayInputStream
import scala.util.Try

Try(("does-not-exist" #< new ByteArrayInputStream("foo".getBytes("utf-8"))).lines)
{code}

The above reproduction case will deadlock waiting for initial execution of the process:

{noformat}
scala> Try(("does-not-exist" #< new ByteArrayInputStream("foo".getBytes("utf-8"))).lines)
Exception in thread "Thread-3" java.io.IOException: Cannot run program "does-not-exist": error=2, No such file or directory
        at java.lang.ProcessBuilder.start(ProcessBuilder.java:1041)
        at scala.sys.process.ProcessBuilderImpl$Simple.run(ProcessBuilderImpl.scala:68)
        at scala.sys.process.ProcessImpl$PipedProcesses.runAndExitValue(ProcessImpl.scala:131)
        at scala.sys.process.ProcessImpl$CompoundProcess$$anonfun$1.apply$mcV$sp(ProcessImpl.scala:93)
        at scala.sys.process.ProcessImpl$Spawn$$anon$1.run(ProcessImpl.scala:22)
Caused by: java.io.IOException: error=2, No such file or directory
        at java.lang.UNIXProcess.forkAndExec(Native Method)
        at java.lang.UNIXProcess.<init>(UNIXProcess.java:135)
        at java.lang.ProcessImpl.start(ProcessImpl.java:130)
        at java.lang.ProcessBuilder.start(ProcessBuilder.java:1022)
        ... 4 more
Exception in thread "Thread-6" java.lang.RuntimeException: No exit code: process destroyed.
        at scala.sys.process.ProcessImpl$CompoundProcess.exitValue(ProcessImpl.scala:87)
        at scala.sys.process.ProcessBuilderImpl$AbstractBuilder$$anonfun$lines$1.apply$mcV$sp(ProcessBuilderImpl.scala:142)
        at scala.sys.process.ProcessImpl$Spawn$$anon$1.run(ProcessImpl.scala:22)
// deadlocked here
{noformat}

The bug appears to be due to {{IOException}} being thrown by {{java.lang.ProcessBuilder}}, but not being caught by its caller in [{{scala.sys.process.ProcessBuilderImpl.Simple.run()}}|https://github.com/scala/scala/blob/b816a83c8c3ac3fac740e3f475e8e773d59b9d46/src/library/scala/sys/process/ProcessBuilderImpl.scala#L69].



