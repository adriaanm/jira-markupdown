The following example also shown that Float.NaN cannot be contained in for example, an ArrayBuffer for some hash code usage:
```scala
Welcome to Scala version 2.8.0.r19480-b20091110111040 (Java HotSpot(TM) 64-Bit Server VM, Java 1.6.0_15).
Type in expressions to have them evaluated.
Type :help for more information.

scala> val a = Array(1f)
a: Array[Float] = Array(1.0)

scala> val b = Array(Float.NaN)
b: Array[Float] = Array(NaN)

scala> val c = scala.collection.mutable.ArrayBuffer(1f)
c: scala.collection.mutable.ArrayBuffer[Float] = ArrayBuffer(1.0)

scala> val d = scala.collection.mutable.ArrayBuffer(Float.NaN)                         
d: scala.collection.mutable.ArrayBuffer[Float] = ArrayBuffer(NaN)

scala> val m = scala.collection.mutable.HashMap(a -> "a", b -> "b", c -> "c", d -> "d")
m: scala.collection.mutable.HashMap[ScalaObject,java.lang.String] = Map([F@62b92956 -> a, ArrayBuffer(1.0) -> c, [F@6a48ffbc -> b, ArrayBuffer(NaN) -> d)

scala> m(a)
res0: java.lang.String = a

scala> m(b)
res1: java.lang.String = b

scala> m(c)
res2: java.lang.String = d

scala> m(d)
java.util.NoSuchElementException: key not found: ArrayBuffer(NaN)
	at scala.collection.MapLike$$class.default(MapLike.scala:191)
	at scala.collection.mutable.HashMap.default(HashMap.scala:21)
	at scala.collection.MapLike$$class.apply(MapLike.scala:106)
	at scala.collection.mutable.HashMap.apply(HashMap.scala:21)
	at .<init>(<console>:10)
	at .<clinit>(<console>)
	at RequestResult$$.<init>(<console>:4)
	at RequestResult$$.<clinit>(<console>)
	at RequestResult$$result(<console>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at scala.tools.nsc.Interpreter$$Request$$$$anonfun$$loadAndRun$$1$$$$anonfun$$apply$$13.apply(Interpreter.scala:788)
	at scala.tools.nsc.Interpreter$$Request$$$$anonfun$$loadAndRun$$1$$$$anonfun$$apply$$13.apply(Interpreter.scala:788)
	at scala.util.control.Exception$$Catch.apply(Exception.scala:79)
	at scala.tools.nsc.Interpreter$$Request$$$$anonfun$$loadAndRun$$1.apply(Interpreter.scala:787)
	at scala.tools.nsc.Interpreter$$Request$$$$anonfun$$loadAndRun$$1.apply(Interpreter.scala:787)
	at scala.util.control.Exception$$Catch.apply(Exception.scala:79)
	at scala.tools.nsc.Interpreter$$Request.loadAndRun(Interpreter.scala:786)
	at scala.tools.nsc.Interpreter.interpret(Interpreter.scala:435)
	at scala.tools.nsc.Interpreter.interpret(Interpreter.scala:425)
	at scala.tools.nsc.InterpreterLoop.interpretStartingWith(InterpreterLoop.scala:331)
	at scala.tools.nsc.InterpreterLoop.command(InterpreterLoop.scala:308)
	at scala.tools.nsc.InterpreterLoop.processLine$$1(InterpreterLoop.scala:205)
	at scala.tools.nsc.InterpreterLoop.repl(InterpreterLoop.scala:223)
	at scala.tools.nsc.InterpreterLoop.main(InterpreterLoop.scala:379)
	at scala.tools.nsc.MainGenericRunner$$.createLoop$$1(MainGenericRunner.scala:119)
	at scala.tools.nsc.MainGenericRunner$$.main(MainGenericRunner.scala:144)
	at scala.tools.nsc.MainGenericRunner.main(MainGenericRunner.scala)
```
