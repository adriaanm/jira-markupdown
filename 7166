The same problem and solution applies to default parameters.
```scala
object DefaultAmbiguity {
  trait Base
  
  trait FooOps extends {
    def foo[T](t : T) = t
  }
  
  trait BarOps extends {
    def foo(s : String, i : Int = 0) = (s, i)
  }
  
  implicit def baseFoo(b : Base) = new FooOps {}
  implicit def baseBar(b : Base) = new BarOps {}
  
  val b = new Base {}
  
  val f1 = b.foo(23)          // OK
  val f2 = b.foo("foo", 23)   // Ambiguous implicits
  
  def foo[T](t : T) = t
  def foo(s : String, i : Int = 0) = (s, i)
  
  val f4 = foo(23)            // OK
  val f5 = foo("foo", 23)     // OK
}
```
