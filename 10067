Here's a workaround that uses a type ascription, rather than a cast:
```scala
cat  sandbox/test.scala
object Test {
  class Observable[+T](val asJava: JObservable[_ <: T]) extends AnyVal {
    private def foo[X](a: JObservable[X]): JObservable[X] = ???
    def window(count: Int): Observable[Observable[T]] = {
      convert(asJava.window()): Observable[Observable[T]]
    }
  }

  class JObservable[T] {
    def window(): JObservable[JObservable[T]] = ???
  }

  def convert[T](jObs: JObservable[JObservable[T]]): Observable[Observable[T]] = ???
}
topic/2894-rebase ~/code/scala scalac-hash v2.10.2 sandbox/test.scala
[info] v2.10.2 => /Users/jason/usr/scala-v2.10.2-0-g60d462e
topic/2894-rebase ~/code/scala
```
