The parametrization of B is irrelevant to the problem,
the problem be reproduced with:
```scala
lass A

class B

class B0 extends B

class F[X]

class G[X]

implicit def g[X] = new G[X]()

implicit def a = new F[A]()

implicit def b[X <: B](implicit mx: G[X]) = new F[X]()

def f(implicit aa: F[A]) = println(aa)

f
```

still gives 
```scala
16: error: ambiguous implicit values:
 both method b in object $$iw of type [X <: B](implicit mx: G[X])F[X]
 and method a in object $$iw of type => F[A]
 match expected type F[A]
       f
       ^
```
