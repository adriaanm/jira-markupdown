While the original code works, a longer chain doesn't - unless I'm doing something prohibited:

{code:scala}
	trait Root[@specialized(Int) T] {
		def hello(v :T) = "root"
	}

	trait Child[@specialized(Int) T] extends Root[T] {
		override def hello(v :T) = super.hello(v)
	}

	class C[@specialized(Int) T] extends Child[T]

	(new C).hello(1)
{code}

Stack overflow:
{code}
	at pl.proplus.collection.SpecializationSpec$C$mcI$sp.super$hello$mcI$sp(SpecializationSpec.scala:30)
	at pl.proplus.collection.SpecializationSpec$Child$mcI$sp$class.hello$mcI$sp(SpecializationSpec.scala:20)
	at pl.proplus.collection.SpecializationSpec$C$mcI$sp.hello$mcI$sp(SpecializationSpec.scala:30)
{code}
