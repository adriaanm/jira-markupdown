{noformat}
$ scala
Welcome to Scala version 2.10.3-20130923-e2fec6b28dfd73482945ffab85d9b582d0cb9f17 (OpenJDK 64-Bit Server VM, Java 1.7.0_51).
Type in expressions to have them evaluated.
Type :help for more information.

scala> :paste
// Entering paste mode (ctrl-D to finish)

object test1 {

  trait SignedType {
    private[this] var mySignatureRunId: Int = ???

    final def signature(ctx: Context): Int =
      ctx.trace {
        mySignatureRunId
      }
  }

  class Context {
    def trace[T](op: => T): T = ???
  }

  val ctx = new Context

}


// Exiting paste mode, now interpreting.

ReplGlobal.abort: No getter for variable mySignatureRunId in trait iw$test1$SignedType
error: No getter for variable mySignatureRunId in trait iw$test1$SignedType
unhandled exception while transforming <console>
error: uncaught exception during compilation: scala.reflect.internal.FatalError
scala.reflect.internal.FatalError: 
     while compiling: <console>
        during phase: global=mixin, atPhase=cleanup
     library version: version 2.10.3-20130923-e2fec6b28dfd73482945ffab85d9b582d0cb9f17
    compiler version: version 2.10.3-20130923-e2fec6b28dfd73482945ffab85d9b582d0cb9f17
  reconstructed args: 

  last tree to typer: Apply(method ???)
              symbol: method ??? in object Predef (flags: <method> <triedcooking>)
   symbol definition: def ???(): Nothing
                 tpe: Nothing
       symbol owners: method ??? -> object Predef -> package scala
      context owners: anonymous class anonfun$signature$1 -> package $line3

== Enclosing template or block ==

Template( // val <local $anonfun>: <notype>, tree.tpe=$line3.anonfun$signature$1
  "scala.runtime.AbstractFunction0$mcI$sp", "scala.Serializable" // parents
  ValDef(
    private
    "_"
    <tpt>
    <empty>
  )
  // 5 statements
  DefDef( // final def apply(): Int
    <method> final <triedcooking>
    "apply"
    []
    List(Nil)
    <tpt> // tree.tpe=Int
    Apply( // def apply$mcI$sp(): Int, tree.tpe=Int
      $read$$iw$$iw$test1$SignedType$$anonfun$signature$1.this."apply$mcI$sp" // def apply$mcI$sp(): Int, tree.tpe=()Int
      Nil
    )
  )
  DefDef( // def apply$mcI$sp(): Int
    <method> <specialized> <triedcooking>
    "apply$mcI$sp"
    []
    List(Nil)
    <tpt> // tree.tpe=Int
    $read$$iw$$iw$test1$SignedType$$anonfun$signature$1.this.$outer.$asInstanceOf[$line3.iw$test1$SignedType]()."$line3$$read$$iw$$iw$test1$SignedType$$mySignatureRunId" // var mySignatureRunId: Int, tree.tpe=Int
  )
  ValDef( // private[this] val $outer: $line3.iw$test1$SignedType
    private <local> <synthetic> <paramaccessor> <triedcooking>
    "$outer "
    <tpt> // tree.tpe=$line3.iw$test1$SignedType
    <empty>
  )
  DefDef( // final def apply(): Object
    <method> final <bridge>
    "apply"
    []
    List(Nil)
    <tpt> // tree.tpe=Object
    Apply( // def box(x: Int): Integer in object Int, tree.tpe=Object
      "scala"."Int"."box" // def box(x: Int): Integer in object Int, tree.tpe=(x: Int)Integer
      Apply( // final def apply(): Int, tree.tpe=Int
        $read$$iw$$iw$test1$SignedType$$anonfun$signature$1.this."apply" // final def apply(): Int, tree.tpe=()Int
        Nil
      )
    )
  )
  DefDef( // def <init>(arg$outer: $line3.iw$test1$SignedType): $line3.anonfun$signature$1
    <method> <triedcooking>
    "<init>"
    []
    // 1 parameter list
    ValDef( // $outer: $line3.iw$test1$SignedType
      <param> <triedcooking>
      "$outer"
      <tpt> // tree.tpe=$line3.iw$test1$SignedType
      <empty>
    )
    <tpt> // tree.tpe=$line3.anonfun$signature$1
    Block( // tree.tpe=Unit
      // 2 statements
      If( // tree.tpe=Unit
        Apply( // final def eq(x$1: Object): Boolean in class Object, tree.tpe=Boolean
          "$outer"."eq" // final def eq(x$1: Object): Boolean in class Object, tree.tpe=(x$1: Object)Boolean
          null
        )
        Throw( // tree.tpe=Nothing
          Apply( // def <init>(): NullPointerException in class NullPointerException, tree.tpe=NullPointerException
            new NullPointerException."<init>" // def <init>(): NullPointerException in class NullPointerException, tree.tpe=()NullPointerException
            Nil
          )
        )
        Assign( // tree.tpe=Unit
          $read$$iw$$iw$test1$SignedType$$anonfun$signature$1.this."$outer " // private[this] val $outer: $line3.iw$test1$SignedType, tree.tpe=$line3.iw$test1$SignedType
          "$outer" // $outer: $line3.iw$test1$SignedType, tree.tpe=$line3.iw$test1$SignedType
        )
      )
      Apply( // def <init>(): scala.runtime.AbstractFunction0$mcI$sp in class AbstractFunction0$mcI$sp, tree.tpe=scala.runtime.AbstractFunction0$mcI$sp
        $read$$iw$$iw$test1$SignedType$$anonfun$signature$1.super."<init>" // def <init>(): scala.runtime.AbstractFunction0$mcI$sp in class AbstractFunction0$mcI$sp, tree.tpe=()scala.runtime.AbstractFunction0$mcI$sp
        Nil
      )
      ()
    )
  )
)

== Expanded type of tree ==

TypeRef(TypeSymbol(final abstract class Nothing extends Object))

No getter for variable mySignatureRunId in trait iw$test1$SignedType
	at scala.reflect.internal.SymbolTable.abort(SymbolTable.scala:49)
	at scala.tools.nsc.Global.abort(Global.scala:254)
	at scala.tools.nsc.interpreter.IMain$$anon$1.scala$tools$nsc$interpreter$ReplGlobal$$super$abort(IMain.scala:265)
	at scala.tools.nsc.interpreter.ReplGlobal$class.abort(ReplGlobal.scala:21)
	at scala.tools.nsc.interpreter.IMain$$anon$1.abort(IMain.scala:265)
	at scala.tools.nsc.transform.Mixin$MixinTransformer.scala$tools$nsc$transform$Mixin$MixinTransformer$$postTransform(Mixin.scala:1233)
	at scala.tools.nsc.transform.Mixin$MixinTransformer$$anonfun$transform$1.apply(Mixin.scala:1261)
	at scala.tools.nsc.transform.Mixin$MixinTransformer$$anonfun$transform$1.apply(Mixin.scala:1261)
	at scala.reflect.internal.SymbolTable.atPhase(SymbolTable.scala:207)
	at scala.reflect.internal.SymbolTable.afterPhase(SymbolTable.scala:216)
	at scala.tools.nsc.Global.afterMixin(Global.scala:1103)
	at scala.tools.nsc.transform.Mixin$MixinTransformer.transform(Mixin.scala:1261)
	at scala.tools.nsc.transform.Mixin$MixinTransformer.transform(Mixin.scala:471)
	at scala.reflect.internal.Trees$$anonfun$itransform$2.apply(Trees.scala:1235)
	at scala.reflect.internal.Trees$$anonfun$itransform$2.apply(Trees.scala:1233)
	at scala.reflect.api.Trees$Transformer.atOwner(Trees.scala:2936)
	at scala.reflect.internal.Trees$class.itransform(Trees.scala:1232)
	at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:13)
	at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:13)
	at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2897)
	at scala.tools.nsc.transform.Mixin$MixinTransformer.transform(Mixin.scala:1258)
	at scala.tools.nsc.transform.Mixin$MixinTransformer.transform(Mixin.scala:471)
	at scala.reflect.api.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:2927)
	at scala.reflect.api.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:2925)
	at scala.collection.immutable.List.loop$1(List.scala:170)
	at scala.collection.immutable.List.mapConserve(List.scala:186)
	at scala.reflect.api.Trees$Transformer.transformStats(Trees.scala:2925)
	at scala.reflect.internal.Trees$class.itransform(Trees.scala:1276)
	at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:13)
	at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:13)
	at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2897)
	at scala.tools.nsc.transform.Mixin$MixinTransformer.transform(Mixin.scala:1258)
	at scala.tools.nsc.transform.Mixin$MixinTransformer.transform(Mixin.scala:471)
	at scala.reflect.api.Trees$Transformer.transformTemplate(Trees.scala:2904)
	at scala.reflect.internal.Trees$$anonfun$itransform$4.apply(Trees.scala:1280)
	at scala.reflect.internal.Trees$$anonfun$itransform$4.apply(Trees.scala:1279)
	at scala.reflect.api.Trees$Transformer.atOwner(Trees.scala:2936)
	at scala.reflect.internal.Trees$class.itransform(Trees.scala:1278)
	at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:13)
	at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:13)
	at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2897)
	at scala.tools.nsc.transform.Mixin$MixinTransformer.transform(Mixin.scala:1258)
	at scala.tools.nsc.transform.Mixin$MixinTransformer.transform(Mixin.scala:471)
	at scala.reflect.api.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:2927)
	at scala.reflect.api.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:2925)
	at scala.collection.immutable.List.loop$1(List.scala:170)
	at scala.collection.immutable.List.mapConserve(List.scala:186)
	at scala.reflect.api.Trees$Transformer.transformStats(Trees.scala:2925)
	at scala.reflect.internal.Trees$$anonfun$itransform$7.apply(Trees.scala:1298)
	at scala.reflect.internal.Trees$$anonfun$itransform$7.apply(Trees.scala:1298)
	at scala.reflect.api.Trees$Transformer.atOwner(Trees.scala:2936)
	at scala.reflect.internal.Trees$class.itransform(Trees.scala:1297)
	at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:13)
	at scala.reflect.internal.SymbolTable.itransform(SymbolTable.scala:13)
	at scala.reflect.api.Trees$Transformer.transform(Trees.scala:2897)
	at scala.tools.nsc.transform.Mixin$MixinTransformer.transform(Mixin.scala:1258)
	at scala.tools.nsc.transform.Mixin$MixinTransformer.transform(Mixin.scala:471)
	at scala.tools.nsc.ast.Trees$Transformer.transformUnit(Trees.scala:227)
	at scala.tools.nsc.transform.Transform$Phase.apply(Transform.scala:30)
	at scala.tools.nsc.Global$GlobalPhase.applyPhase(Global.scala:464)
	at scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:431)
	at scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:431)
	at scala.collection.Iterator$class.foreach(Iterator.scala:727)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)
	at scala.tools.nsc.Global$GlobalPhase.run(Global.scala:431)
	at scala.tools.nsc.Global$Run.compileUnitsInternal(Global.scala:1583)
	at scala.tools.nsc.Global$Run.compileUnits(Global.scala:1557)
	at scala.tools.nsc.Global$Run.compileSources(Global.scala:1553)
	at scala.tools.nsc.interpreter.IMain.compileSourcesKeepingRun(IMain.scala:428)
	at scala.tools.nsc.interpreter.IMain$ReadEvalPrint.compileAndSaveRun(IMain.scala:801)
	at scala.tools.nsc.interpreter.IMain$ReadEvalPrint.compile(IMain.scala:761)
	at scala.tools.nsc.interpreter.IMain$Request.compile$lzycompute(IMain.scala:936)
	at scala.tools.nsc.interpreter.IMain$Request.compile(IMain.scala:931)
	at scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:603)
	at scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:568)
	at scala.tools.nsc.interpreter.ILoop.pasteCommand(ILoop.scala:724)
	at scala.tools.nsc.interpreter.ILoop$$anonfun$standardCommands$8.apply(ILoop.scala:263)
	at scala.tools.nsc.interpreter.ILoop$$anonfun$standardCommands$8.apply(ILoop.scala:263)
	at scala.tools.nsc.interpreter.LoopCommands$LoopCommand$$anonfun$nullary$1.apply(LoopCommands.scala:65)
	at scala.tools.nsc.interpreter.LoopCommands$LoopCommand$$anonfun$nullary$1.apply(LoopCommands.scala:65)
	at scala.tools.nsc.interpreter.LoopCommands$NullaryCmd.apply(LoopCommands.scala:76)
	at scala.tools.nsc.interpreter.ILoop.command(ILoop.scala:708)
	at scala.tools.nsc.interpreter.ILoop.processLine$1(ILoop.scala:577)
	at scala.tools.nsc.interpreter.ILoop.innerLoop$1(ILoop.scala:584)
	at scala.tools.nsc.interpreter.ILoop.loop(ILoop.scala:587)
	at scala.tools.nsc.interpreter.ILoop$$anonfun$process$1.apply$mcZ$sp(ILoop.scala:878)
	at scala.tools.nsc.interpreter.ILoop$$anonfun$process$1.apply(ILoop.scala:833)
	at scala.tools.nsc.interpreter.ILoop$$anonfun$process$1.apply(ILoop.scala:833)
	at scala.tools.nsc.util.ScalaClassLoader$.savingContextLoader(ScalaClassLoader.scala:135)
	at scala.tools.nsc.interpreter.ILoop.process(ILoop.scala:833)
	at scala.tools.nsc.MainGenericRunner.runTarget$1(MainGenericRunner.scala:83)
	at scala.tools.nsc.MainGenericRunner.process(MainGenericRunner.scala:96)
	at scala.tools.nsc.MainGenericRunner$.main(MainGenericRunner.scala:105)
	at scala.tools.nsc.MainGenericRunner.main(MainGenericRunner.scala)
{noformat}
