@inline annotation causes java.lang.VerifyError:
```scala
Exception in thread "main" java.lang.VerifyError: (class: pk.Main$$, method: main signature: ([Ljava/lang/String;)V) Accessing value from uninitialized register pair 4/5
        at pk.Main.main(Main.scala)
Java Result: 1
```

First part of the code. Can be compiled without any options. This part MUST BE IN A SEPARATE JAR for bug to occur.
```scala
package mylib
class Vec(var x: Double, var y: Double)
object Vec { @inline def apply(x: Double, y: Double) = new Vec(x, y) }
```

The second part of the code. Must be compiled with "-optimise" option (to activate inlining). Must be compiled separately from the first part.
```scala
import mylib._
object Main {
  def main(args: Array[String]) {
    val u = Vec(0, 1)
    println(u)
  }
}
```

Note that the code will work without errors if both parts are placed in the same file. To reproduce the error, compile part1 and put it in a jar. Then include the jar on a classpath to compile part2.

Tested and reproduced on scala-2.8.0.r21113 and scala-2.8.0.r21213.
