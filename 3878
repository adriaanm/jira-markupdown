Replying to [comment:8 adam77]:
> How come there is no problem when the default is removed from the constructor parameter?

Without the default argument, the constructor of {{Foo$$F1[object]}} does not need to call the constructor of {{Foo[object]}}, which breaks the chain described above.

You can reproduce the problem without default arguments:

{code}
object Foo {
  case object F1 extends Foo(getBool)
  case object F2 extends Foo(getBool)

  val values = Set(F1,F2)

  def getBool = false
}

abstract class Foo private(bar: Boolean)

object Bug {
  val foo = Foo.F1

  def main(args:Array[String]):Unit = {
	println(Foo.values)
  }
}
{code}
