This ticket is nr. 7 both in terms of Votes and Watchers. Right there with "implement higher-order unification for type-constructor inference" and for-comprehension performance. While those tickets are technically very challenging, this one is more about reaching a decision and acting on it.

In an ideal world {{filterKeys}} would behave like {{filter}} and {{mapValues}} would behave like {{map}}. Unfortunately, the documentation promises that no elements are copied, and that restricts the implementation to pretty much the current one.

We could:

- change to strict behavior and break some clients. This could be done in Scala 3.0
- deprecate {{filterKeys}} and {{mapValues}} and create two other methods with explicit strict/lazy behavior, {{filterKeysNow}} and {{withFilterKeys}} Ã  la {{FilterMonadic}}.
- add a specific return type. However, as long as that type is a subtype of {{Map}} we won't gain much, as it's unlikely people would use an explicit type to store the result of {{filter}}. This will go unnoticed in most of the cases.

The second choice sounds the most reasonable to me. Thoughts?
