Duplicate of scala/bug#5712.

So far we only have dependent method types; constructors are not supported. It's surprisingly tricky to implement this unfortunately.

Here's a pattern to workaround:
```scala
scala> class A { class B }
defined class A

scala> object O1 extends A; object O2 extends A
defined module O1
defined module O2

scala> object Test { class Blah[AA <: A](val a: AA, b: AA#B); object Blah { def apply(a: A)(b: a.B) = new Blah[a.type](a, b) } }
defined module Test

scala> Test.Blah(O1)(new O1.B)
res2: Test.Blah[O1.type] = Test$Blah@54becf73

scala> Test.Blah(O1)(new O2.B)
<console>:15: error: type mismatch;
 found   : O2.B
 required: O1.B
              Test.Blah(O1)(new O2.B)
                            ^
```

Could I ask that you please check for duplicate tickets, either by searching JIRA or asking on the mailing list, before lodging new ones? Thanks.
