The members of `akka.http.scaladsl.model.MediaTypes` have different types. Some are of type `MediaType.WithOpenCharset` while others are of type `MediaType.WithFixedCharset`. Using them in isolation works fine, but when scalac is asked to calculate the LUB of both types, it blows up in the most peculiar way. This can be worked around by declaring the type explicitly.

{code}
Welcome to Scala version 2.11.7 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_45).
Type in expressions to have them evaluated.
Type :help for more information.

scala> import akka.http.scaladsl.model.{MediaType, MediaTypes}
import akka.http.scaladsl.model.{MediaType, MediaTypes}

scala> val a = MediaTypes.`application/xml`
a: akka.http.scaladsl.model.MediaType.WithOpenCharset = application/xml

scala> val b = MediaTypes.`application/json`
b: akka.http.scaladsl.model.MediaType.WithFixedCharset = application/json

scala> val boom = Seq(a, b)
error: missing or invalid dependency detected while loading class file 'MediaType.class'.
Could not access type WithFixedCharset in trait akka.http.javadsl.model.MediaType,
because it (or its dependencies) are missing. Check your build definition for
missing or conflicting dependencies. (Re-run with `-Ylog-classpath` to see the problematic classpath.)
A full rebuild may help if 'MediaType.class' was compiled against an incompatible version of akka.http.javadsl.model.MediaType.

scala> val works = Seq[MediaType](a, b)
works: Seq[akka.http.scaladsl.model.MediaType] = List(application/xml, application/json)
{code}

Here is a repo with a tiny reproducer https://github.com/rklaehn/invaliddependency

It is probably of interest that ContentType.WithFixedCharset and ContentType.WithOpenCharset are inner interfaces declared in a java class
https://github.com/akka/akka/blob/84fd5a9b2a4ebc1dcfe1cda8c072023ba84b44a0/akka-http-core/src/main/java/akka/http/javadsl/model/MediaType.java
