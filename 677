No, it was a mistake. I had tried it in the interpreter, where it works.

I believe it works because the interpreter wraps every line into a new object. The object where the case class defines its factory (apply method) wasn't the same as the object of the same name, since they were in different objects.

In other words, whilst the buggy situation is equivalent to the following.
```scala
case class A()
object A {
  def apply() = ...
  def apply() = ...
}
```

The interpreter-based situation would be the following.
```scala
object Line1 {
  case class A()
  object A { def apply() = ... }
}
object Line2 {
  object A { def apply() = ... }
}
```

Which is fine.

