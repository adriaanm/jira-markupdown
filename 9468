The trace of the lub:
```scala
% cat sandbox/test.scala
trait A[C[_]]
class M1[A]
class M2[A]

class Test {
  def foo: A[M1]
  def bar: A[M2]
  def lub = List(foo, bar)
}

% qbin/scalac -Dscalac.debug.lub  sandbox/test.scala
lub of List(A[M2], A[M1]) at depth 2
** Depth is 2
A[M2]  A[M1]
------ ------
A[M2]  A[M1]
Object Object
Any    Any
  lub of List(<empty>, <empty>) at depth 2
  lub of List(<empty>, <empty>) is <empty>
  lub of List(M2, M1) at depth 1
** Depth is 1
M1     M2
------ ------
M1[A]  M2[A]
Object Object
Any    Any
Frontier(
   (0)
        M2[A]
        Object
        Any

   (1)
        Object
        Any

)
** Depth is 1
M1     M2
------ ------
M1[A]  M2[A]
Object Object
Any    Any
Frontier(
   (0)
        Object
        Any

   (1)
        Object
        Any

)
** Depth is 2
M1     M2
------ ------
Object M2[A]
Any    Object
       Any
  lub of List(M2, M1) is Object
lub of List(A[M2], A[M1]) is A[_ >: M2 with M1 <: Object]
sandbox/test.scala:8: error: type mismatch;
 found   : A[M1]
 required: A[_ >: M2 with M1 <: Object]
  def lub = List(foo, bar)
                 ^
sandbox/test.scala:8: error: type mismatch;
 found   : A[M2]
 required: A[_ >: M2 with M1 <: Object]
  def lub = List(foo, bar)
                      ^
two errors found
```
