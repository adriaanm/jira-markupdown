The following reduced test case exhibits the problem:

{code}
import scala.language.higherKinds

import scala.{specialized => sp}

trait TC[M[_], @sp(Int) A]

object Compiles {
  def f2[M[_], A](implicit ev: TC[M, A]): M[A] = ???
  def f1[M[_], A](implicit ev: TC[M, A]): M[A] = f2[M, A](ev)
}

object CompilesNot {
  def f2[M[_], @sp(Int) A](implicit ev: TC[M, A]): M[A] = ???
  def f1[M[_], @sp(Int) A](implicit ev: TC[M, A]): M[A] = f2[M, A](ev)
}
{code}

and fails to compile with:
{noformat}
[info] Compiling 1 Scala source to ...
[error] test.scala:14: type mismatch;
[error]  found   : TC[M[_],Int]
[error]  required: TC[M,Int]
[error]   def f1[M[_], @sp(Int) A](implicit ev: TC[M, A]): M[A] = f2[M, A](ev)
[error]                                                                    ^
[error] one error found
[error] (compile:compile) Compilation failed
[error] Total time: 3 s, completed Mar 16, 2015 12:41:42 PM
{noformat}
