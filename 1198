oh man. this was hard to isolate.

full compilation, with all sources passed to scalac, succeeds. but then incremental recompilation, with only some sources passed to scalac, fails:
{code}
% cat I.java
interface I { enum E { E1 } ; }
% cat J.java
class J implements I { private E e = E.E1 ; }
% cat S.scala
class S extends J
% /usr/local/scala-2.9.0.RC1/bin/scalac I.java J.java S.scala
% javac I.java J.java
% rm J.class S.class
% /usr/local/scala-2.9.0.RC1/bin/scalac J.java S.scala
J.java:1: error: not found: type E
class J implements I { private E e = E.E1 ; }
                               ^
one error found
{code}

the problem goes away if E is fully qualified in J:
{code}
% cat I.java
interface I { enum E { E1 } ; }
% cat J.java
class J implements I { private I.E e = I.E.E1 ; }
% cat S.scala
class S extends J
% /usr/local/scala-2.9.0.RC1/bin/scalac I.java J.java S.scala
% javac I.java J.java
% rm J.class S.class
% /usr/local/scala-2.9.0.RC1/bin/scalac J.java S.scala
{code}
