I'm sad to say not only is it not fixed, I seem to have broken it worse with the patch which tightened pattern matcher behavior.  This no longer compiles:
```scala
class C[T](a: Array[T]) {
  def f = a match { 
    case x: Array[Int]    => x(0)
    case x: Array[Double] => 5
  }
}
```
```scala
<console>:7: error: scrutinee is incompatible with pattern type;
 found   : Array[Int]
 required: Array[T]
           case x: Array[Int]    => x(0)
                   ^
<console>:8: error: scrutinee is incompatible with pattern type;
 found   : Array[Double]
 required: Array[T]
           case x: Array[Double] => 5
                   ^
```
So this seems to be taking an overly literal view of type parameters.  On top of that, you'll recall the reason it was left open was because I thought the result type of the above match should be "Int" and not "Any" since every case definitively results in an Int.  I can't tell if that's the case now since it doesn't compile, but I'm supposing it's not.
