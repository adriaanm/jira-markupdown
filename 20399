Related to scala/bug#9937, in which the same bug in Kotlin trips up scalac.
```
$ cat sandbox/test.scala && scalac sandbox/test.scala
class C {
  class D
}

abstract class E { def foo: Option[C#D] }

$ javap -cp . -v E | tail -n 30
  #25 = Utf8               ScalaSig
{
  public abstract scala.Option<C$D> foo();
    descriptor: ()Lscala/Option;
    flags: ACC_PUBLIC, ACC_ABSTRACT
    Signature: #18                          // ()Lscala/Option<LC$D;>;

  public E();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #14                 // Method java/lang/Object."<init>":()V
         4: return
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   LE;
      LineNumberTable:
        line 5: 0
}
SourceFile: "test.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
Error: unknown attribute
  ScalaInlineInfo: length = 0xE
   01 00 00 02 00 0B 00 0C 00 00 09 00 0A 00
Error: unknown attribute
  ScalaSig: length = 0x3
   05 00 00
```

Compare with Java:
```
$ cat sandbox/Test.java && javac -d . sandbox/Test.java
class C { class D {} }
abstract class E { abstract java.util.List<C.D> foo(); }

$ javap -cp . -v E | tail -n 5
    Signature: #14                          // ()Ljava/util/List<LC$D;>;
}
SourceFile: "Test.java"
InnerClasses:
     #12= #11 of #20; //D=class C$D of class C
```
