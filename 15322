The attached file generates an AbstractMethodError when compiled using scalac and then run using scala, when attempting to call the version of A for which specialization has occurred.  (The first call to foo.value, which is for a non-specialized type, is okay.)

An attempt to perform a similar test in the REPL fails in a different way for the same failing case, with the REPL crashing.  I don't know if the two failures stem from the same cause or not:
{code}
$$ ./scala-2.8.0.r21907-b20100512020118/bin/scala
Welcome to Scala version 2.8.0.r21907-b20100512020118 (Java HotSpot(TM) 64-Bit Server VM, Java 1.6.0_16).
Type in expressions to have them evaluated.
Type :help for more information.

scala> trait B[@specialized(Int) T] { def value: T }                               
defined trait B

scala> class A[@specialized(Int) T](x: T) { def foo = new B[T]{ def value = x } }  
defined class A

scala> (new A("abc")).foo.value                                                    
res0: java.lang.String = abc

scala> new A(10)                                                                 
Exception in thread "main" java.lang.Error: Unknown type: <notype>, <notype>[class scala.tools.nsc.symtab.Types$$NoType$$, class scala.tools.nsc.symtab.Types$$NoType$$] TypeRef? false, false
	at scala.tools.nsc.symtab.SymbolTable.abort(SymbolTable.scala:34)
	at scala.tools.nsc.backend.icode.TypeKinds$$class.toTypeKind(TypeKinds.scala:475)
	at scala.tools.nsc.backend.icode.ICodes.toTypeKind(ICodes.scala:27)
	at scala.tools.nsc.backend.icode.GenICode$$ICodePhase.scala$$tools$$nsc$$backend$$icode$$GenICode$$ICodePhase$$$$genLoad(GenICode.scala:580)
	at scala.tools.nsc.backend.icode.GenICode$$ICodePhase.scala$$tools$$nsc$$backend$$icode$$GenICode$$ICodePhase$$$$genStat(GenICode.scala:173)
	at scala.tools.nsc.backend.icode.GenICode$$ICodePhase$$$$anonfun$$genStat$$1.apply(GenICode.scala:156)
	at scala.tools.nsc.backend.icode.GenICode$$ICodePhase$$$$anonfun$$genStat$$1.apply(GenICode.scala:156)
	at scala.collection.LinearSeqOptimized$$class.foldLeft(LinearSeqOptimized.scala:124)
	at scala.collection.immutable.List.foldLeft(List.scala:46)
...
{code}
