```scala
Welcome to Scala version 2.8.0.final (Java HotSpot(TM) Client VM, Java 1.6.0_21)
.
Type in expressions to have them evaluated.
Type :help for more information.

scala> val a = (new { type A }): { type A[X] }
<console>:5: error: only classes can have declared but undefined members
       val a = (new { type A }): { type A[X] }
                           ^

scala> val a = (new { type A = Any }): { type A[X] }
a: AnyRef{type A[X]} = $$anon$$1@c9161b

scala> identity[a.A[Any]] _
Exception in thread "main" java.lang.Error: Unknown type: ()java.lang.Object, ()
java.lang.Object[class scala.tools.nsc.symtab.Types$$MethodType, class scala.tool
s.nsc.symtab.Types$$MethodType] TypeRef? false, false
        at scala.tools.nsc.symtab.SymbolTable.abort(SymbolTable.scala:33)
```

I haven't found this reported in an existing ticket. Searching for 'tcpoly kind' does find some that are in the same ballpark: scala/bug#2070 scala/bug#2086

See also this thread on scala-user: http://thread.gmane.org/gmane.comp.lang.scala.user/29075

scalac currently disallows kind-mismatches between an member and an overriding member, although I can't find this in the spec. I suggest to update the definition of *subsumes* to require the kinds match, which would apply to both compound type conformance and overriding.
