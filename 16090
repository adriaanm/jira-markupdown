```scala
/** Test case from Lukas Pustina (pustina@cs.uni-bonn.de)
 */

class Interval[@specialized T](val high: T)
class Node[@specialized T](val interval: Interval[T]) {
  val x1 = Some(interval.high)
}

object Test {
  def main(args: Array[String]): Unit = {
    new Node(new Interval(5)).x1
  }
}
```
Output:
```scala
java.lang.IllegalAccessError
	at Node$$mcI$$sp.<init>(0424.scala:6)
	at Test$$.main(0424.scala:11)
	at Test.main(0424.scala)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
```
Same with 2.8.1 or r24819.
