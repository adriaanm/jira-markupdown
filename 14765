When the editor contains code that has an anonymous inner class passed as a parameter to a method and the anonymous inner class has certain compilation errors, the editor fails to save the file with a _NullPointerException_.

Setup code:
{code}
object Helper {
  def accept(a: Any) { }
}

trait Translator {
  def translate(a: AnyRef): AnyRef
}
{code}

The Scala editor fails to save the following classes with a _NullPointerException_
{code}
class SaveErrorWhenUndefinedCallerMethod {
  doesNotExist(new Translator() {
    def translate(a: AnyRef): AnyRef = {
      null
    }
  })
}
{code}

{code}
class SaveErrorWhenUndefinedMethodInBody {
  Helper.accept(new Translator() {
    def translate(a: AnyRef): AnyRef = {
      doesNotExist
      null
    }
  })
}
{code}

{code}
class SaveErrorWhenLastExpressionDoesNotHaveTheCorrectType {
  Helper.accept(new Translator() {
    def translate(a: AnyRef): AnyRef = {
    }
  })
}
{code}

{code}
class SaveErrorWhenWrongMethodSignatureWithParameterThatDoesNotExist {
  Helper.accept(new Translator() {
    def translate(a: DoesNotExist): AnyRef = {
      null
    }
  })
}
{code}

{code}
class SaveErrorWhenWrongMethodSignatureWithExtraParameterThatDoesNotExist {
  Helper.accept(new Translator() {
    def translate(a: AnyRef, b: DoesNotExist): AnyRef = {
      null
    }
  })
}
{code}

Tested with eclipse 3.5.1 and sdt 2.8 r19920
