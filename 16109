When summing over only one numeric textnode the output is correct: its's the numeric sum of the numeric values. 1 for instance is not converted to 49 but stays 1. But when summing over more than one node, there is a conversion done to the ASCII value (1 is converted to 49, 2 to 50)and these are summed (i.e. 99) or to char it is 'c'.

Another thing is that 
val total2 = (someXML \ "VALUE").text.sum.toString.toInt is generating an error while
val total2 = (someXML \ "VALUE").text.sum.toInt.toString 
is not (it outputs 99)
Error when for the case above
java.lang.NumberFormatException: For input string: "c"
        at java.lang.NumberFormatException.forInputString(NumberFormatException.
java:48)
        at java.lang.Integer.parseInt(Integer.java:449)
        at java.lang.Integer.parseInt(Integer.java:499)
        at scala.collection.immutable.StringLike$$class.toInt(StringLike.scala:23

Tested on:
==========
java version "1.6.0_18"
Java(TM) SE Runtime Environment (build 1.6.0_18-b07)
Java HotSpot(TM) Client VM (build 16.0-b13, mixed mode, sharing)
Scala version 2.9.RC3
Windows Home Premium 32 bit


Code:
=====
package xmlsum2
import xml.{XML, Node, NodeSeq}

object Main extends App {
val someXML = <X><VALUE>1</VALUE><VALUE>2</VALUE></X>

var total = 0 ; (someXML \ "VALUE").foreach(total += _.text.toInt)
val total2 = (someXML \ "VALUE").text.sum
val total2number = (someXML \ "VALUE").count(_ => true)
println("Total1: " + total) 
println("Total2: " + total2) 
println("Total2number: " + total2number)

val someXML2 = <X><VALUE>4</VALUE></X>

var total3 = 0 ; (someXML2 \ "VALUE").foreach(total3 += _.text.toInt)
val total4 = (someXML2 \ "VALUE").text.sum
val total4number = (someXML2 \ "VALUE").count(_ => true)
println("Total3: " + total3) 
println("Total4: " + total4) 
println("Total4number: " + total4number)
}

Output:
=======

C:\scala-2.9.0.RC3\examples>scala xmlsum2.Main
java version "1.6.0_18"
Java(TM) SE Runtime Environment (build 1.6.0_18-b07)
Java HotSpot(TM) Client VM (build 16.0-b13, mixed mode, sharing)

Total1: 3
Total2: c
Total2number: 2
Total3: 4
Total4: 4
Total4number: 1
