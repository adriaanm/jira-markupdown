@Johannes I am trying to piece things together using only the spec. According to SLS 6.11:

{quote}
Evaluation of the block entails evaluation of its statement sequence, followed by an evaluation of the final expression _e_, which defines the result of the block.
{quote}

I am interpreting the above as:
1. {s1; ...; sn; x } needs to happen in sequential order
2. the whole block is one expression that's either evaluated or not evaluated. 

SLS 7.3 says
{quote}
If such a view is found, the expression e is converted to v(e).
{quote}
Here, I am reading that _e_ is the entire {s1; ...; sn; x } since there are no special clause about expanding blocks. So it's v({s1; ...; sn; x }), and when the parameter is passed by name the entire block is still not evaluated. {s1; ...; sn; v(x) } is a close approximation, but it works only when the parameter is strictly evaluated.


