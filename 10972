I'm also experiencing this with iMain.compile. Before iMain.compile the thread context CL is {{sun.misc.Launcher$AppClassLoader@368239c8}} and afterwards it is {{scala.reflect.internal.util.ScalaClassLoader$URLClassLoader@39094bde}}.

This happened in tests (scalatest), where in consequence other tests that try to create an ActorSystem fail because in akka some components are created via reflection relying on the thread context CL:
{code}
    sbt.ForkMain$ForkError: interface akka.actor.Scheduler is not assignable from class akka.actor.LightArrayRevolverScheduler
            at akka.actor.ReflectiveDynamicAccess$$anonfun$getClassFor$1.apply(DynamicAccess.scala:69)
            at akka.actor.ReflectiveDynamicAccess$$anonfun$getClassFor$1.apply(DynamicAccess.scala:66)
            at scala.util.Try$.apply(Try.scala:191)
            at akka.actor.ReflectiveDynamicAccess.getClassFor(DynamicAccess.scala:66)
            at akka.actor.ReflectiveDynamicAccess.createInstanceFor(DynamicAccess.scala:84)
            at akka.actor.ActorSystemImpl.createScheduler(ActorSystem.scala:676)
            at akka.actor.ActorSystemImpl.<init>(ActorSystem.scala:576)
            at akka.actor.ActorSystem$.apply(ActorSystem.scala:142)
            at akka.actor.ActorSystem$.apply(ActorSystem.scala:109)
            at foo.bar.SomeSpec.<init>(SomeSpec.scala:32)
            at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
            at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
            at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
            at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
            at java.lang.Class.newInstance(Class.java:442)
            at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:641)
            at sbt.ForkMain$Run$2.call(ForkMain.java:294)
            at sbt.ForkMain$Run$2.call(ForkMain.java:284)
            at java.util.concurrent.FutureTask.run(FutureTask.java:266)
            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
            at java.lang.Thread.run(Thread.java:745)
{code}

I can reproduce this with this App run from sbt with {{runMain foo.Main}}:

{code}
package foo

import javax.script.ScriptEngineManager

object Main extends App {

  val ngine = new ScriptEngineManager().getEngineByName("scala")

  val iMain = ngine.asInstanceOf[scala.tools.nsc.interpreter.IMain]
  class Foo
  iMain.settings.embeddedDefaults[Foo]

  println(Thread.currentThread().getContextClassLoader)
  iMain.compile("val x = 1")
  println(Thread.currentThread().getContextClassLoader)

}
{code}

scala version is 2.11.6
