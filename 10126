"even when considering that it is possible to redefine vars in a class as defs instead"

This is not not allowed. What is happening here is this: you have a constructor parameter "firstName", which may or may not become a class member depending on whether it is used outside the constructor. When you only assign it to a var, then it is not used outside the constructor so it goes away: thus does 'def firstName()' survive. If it is referenced from a method, including 'firstName()', then it gets a field, at which point it is a conflicting definition because you can't overload nullary methods with empty-parameter-list methods.

This is not redefining anything - there is no member "firstName" to redefine, there is only an initial value passed in the constructor (which could be named anything.)
