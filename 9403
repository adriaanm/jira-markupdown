An example which doesn't fail with a bang, but behaves in a way which seems to violate a lot of reasonable expectations:
```scala
  class Foo {
    class Bar {
      def foo = 1
    }
  }
 
  class SubFoo extends Foo {
    class Bar {
      def foo = 42
    }
  }

// Let's create some instances:
  val foo = new Foo
  val fooBar = new foo.Bar
  fooBar.foo                                      //> res0: Int = 1
  // ok

  val subFoo = new SubFoo
  val subFooBar = new subFoo.Bar
  subFooBar.foo                                   //> res1: Int = 42
  // ok

  val superFoo: Foo = subFoo
  val superFooBar = new superFoo.Bar
  superFooBar.foo                                 //> res2: Int = 1
  // NOT OK!
```

The last result is scary, because the syntax looks like things are dynamically bound, but the method is called on the static type instead.

Mailing list: https://groups.google.com/d/topic/scala-language/vQYwywr0LL4/discussion
