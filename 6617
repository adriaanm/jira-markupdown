The humorous-to-me ticket title obscures that actually this is just an -optimise+@specialize bug: no @inline or final needed.  I can't believe there are crashers this easy to hit which haven't been reported...
{code}
class C2[@specialized(Boolean) U]() {
  def f(x: U): U = x
}
{code}
{noformat}

% scalac3 -optimise a.scala 
% scalac3 -optimise a.scala 
error: Companions 'class C2$mcZ$sp' and 'object C2$mcZ$sp' must be defined in same file
	at scala.reflect.internal.Symbols$Symbol.isCoDefinedWith(Symbols.scala:1464)
	at scala.reflect.internal.Symbols$Symbol$$anonfun$companionClass$1.apply(Symbols.scala:1500)
	at scala.reflect.internal.Symbols$Symbol$$anonfun$companionClass$1.apply(Symbols.scala:1500)
	at scala.reflect.internal.Symbols$Symbol.filter(Symbols.scala:1230)
	at scala.reflect.internal.Symbols$Symbol.suchThat(Symbols.scala:1234)
	at scala.reflect.internal.Symbols$Symbol.companionClass(Symbols.scala:1500)
	at scala.reflect.internal.Symbols$Symbol.companionSymbol(Symbols.scala:1530)
	at scala.tools.nsc.symtab.SymbolLoaders$SymbolLoader.complete(SymbolLoaders.scala:128)
	at scala.reflect.internal.Symbols$Symbol.info(Symbols.scala:859)
{noformat}
