The f interpolator should check that format specs using indexed args are valid.
```scala
scala> val x = 7.0
x: Double = 7.0

scala> f"$x%f == %<.3f == %1$$.3f"
res0: String = 7.000000 == 7.000 == 7.000

scala> f"$x%f == %<d == %1$$.3f"
java.util.IllegalFormatConversionException: d != java.lang.Double
  at java.util.Formatter$FormatSpecifier.failConversion(Unknown Source)
  at java.util.Formatter$FormatSpecifier.printInteger(Unknown Source)
  at java.util.Formatter$FormatSpecifier.print(Unknown Source)
  at java.util.Formatter.format(Unknown Source)
  at java.util.Formatter.format(Unknown Source)
  at java.lang.String.format(Unknown Source)
  at scala.collection.immutable.StringLike$class.format(StringLike.scala:287)
  at scala.collection.immutable.StringOps.format(StringOps.scala:30)
  ... 32 elided

scala> f"$x%f == %<.3f == %1$$d"
java.util.IllegalFormatConversionException: d != java.lang.Double
  at java.util.Formatter$FormatSpecifier.failConversion(Unknown Source)
  at java.util.Formatter$FormatSpecifier.printInteger(Unknown Source)
  at java.util.Formatter$FormatSpecifier.print(Unknown Source)
  at java.util.Formatter.format(Unknown Source)
  at java.util.Formatter.format(Unknown Source)
  at java.lang.String.format(Unknown Source)
  at scala.collection.immutable.StringLike$class.format(StringLike.scala:287)
  at scala.collection.immutable.StringOps.format(StringOps.scala:30)
  ... 32 elided
```
FTR, this code was copy/pasted from a Windows 7 cmd.exe shell, where arrow keys were used to reproduce the error.
