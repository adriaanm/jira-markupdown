The SBT patch -- which closes the streams at {{SimpleProcess}} results in this exception being thrown:

{code}
  [partest] java.io.IOException: Stream closed
  [partest] 	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:145)
  [partest] 	at java.io.BufferedInputStream.read1(BufferedInputStream.java:255)
  [partest] 	at java.io.BufferedInputStream.read(BufferedInputStream.java:317)
  [partest] 	at java.io.FilterInputStream.read(FilterInputStream.java:90)
  [partest] 	at scala.sys.process.BasicIO$.loop$1(BasicIO.scala:115)
  [partest] 	at scala.sys.process.BasicIO$.transferFullyImpl(BasicIO.scala:122)
  [partest] 	at scala.sys.process.BasicIO$.transferFully(BasicIO.scala:104)
  [partest] 	at scala.sys.process.ProcessImpl$PipeThread.runloop(ProcessImpl.scala:159)
  [partest] 	at scala.sys.process.ProcessImpl$PipeSource.run(ProcessImpl.scala:180)
{code}

{{PipeSource}} is one of the two threads that copy the output of one process to another when doing something like {{p1 #| p2}}. When {{p1}} loses its threads, that causes the exception above. {{p1}} doesn't know about {{PipeSource}}, as it is a {{SimpleProcess}}. The object that knows about {{p1}}, {{p2}} and {{PipeSource}}, the {{PipedProcesses}}, doesn't have a way to stop {{PipeSource}}.
