Tab completion with the following code crashes the REPL
```scala
// Foo.scala
object Foo {
  val x = new Object {
    val y = 1
  }
}
```

To reproduce, compile `scalac Foo.scala` and start the REPL `scala -cp .` Then enter
```scala
scala> import Foo.x

scala> x.<TAB>
```

I get a stack trace that begins with
```scala
java.lang.AssertionError: assertion failed: fatal: <refinement> has non-class owner value x after flatten.
	at scala.reflect.internal.Symbols$Symbol.scala$reflect$internal$Symbols$$flattenName(Symbols.scala:605)
	at scala.reflect.internal.Symbols$ClassSymbol.name(Symbols.scala:2182)
	at scala.reflect.internal.Symbols$ClassSymbol.name(Symbols.scala:2152)
	at scala.reflect.internal.Symbols$Symbol.isRefinementClass(Symbols.scala:309)
	at scala.reflect.internal.Symbols$Symbol.defaultFlagMask(Symbols.scala:1828)
	at scala.reflect.internal.Symbols$Symbol.defaultFlagString(Symbols.scala:1831)
	at scala.reflect.internal.Symbols$Symbol.defString(Symbols.scala:1835)
	at scala.reflect.internal.Scopes$Scope$$anonfun$mkString$1.apply(Scopes.scala:306)
	at scala.reflect.internal.Scopes$Scope$$anonfun$mkString$1.apply(Scopes.scala:306)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
```

Thanks.
