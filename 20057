The following program
```scala
import scala.reflect.ClassTag

object Program {
  def test[T: ClassTag](x: T) = {
    val arr = new Array[T](1)
    println(arr.getClass)
    println(x.getClass)
    arr(0) = x
  }

  def main(args: Array[String]): Unit = {
    test(new Array[Nothing](0))
  }

}
```

throws the exception java.lang.ArrayStoreException:
```
[error] (run-main-8) java.lang.ArrayStoreException: [Ljava.lang.Object;
java.lang.ArrayStoreException: [Ljava.lang.Object;
	at scala.runtime.ScalaRunTime$.array_update(ScalaRunTime.scala:89)
	at Program$.test(Program.scala:8)
	at Program$.main(Program.scala:12)
	at Program.main(Program.scala)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
```

The output of the program
```
class [[Lscala.runtime.Nothing$;
class [Ljava.lang.Object;
```

explains the problem. The array arr created using ClassTag has element type Array[scala.runtime.Nothing$] but array created by new has type Array[java.lang.Object].

Same exception is thrown with Null. For other types it works fine.
