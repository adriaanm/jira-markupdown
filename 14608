The following occurs when using classes generated by the current 2.7.7 nightly. It may be reproducible with a simpler test case; below is the first case under which I have encountered it:

{code}
//STest.scala

trait A[X <: A[X]]

trait B[X <: A[X]]

trait C {
  def f(t: B[X] forSome { type X <: A[X] }): Unit
}

class D extends C {
  override def f(t: B[X] forSome { type X <: A[X] }) = ()
}
{code}

{code}
//JTest.java

class JTest {
  C c = new D();
}
{code}

{code}
knuttycombe@knuttycombe-ubuntu:~/tmp/scala$$ scalac STest.scala
knuttycombe@knuttycombe-ubuntu:~/tmp/scala$$ javac JTest.java
JTest.java:2: cannot access C
bad class file: ./C.class
undeclared type variable: X
Please remove or make sure it appears in the correct subdirectory of the classpath.
  C c = new D();
  ^
knuttycombe@knuttycombe-ubuntu:~/tmp/scala$$ vi STest.scala
{code}
