**Expected result:**
"test".bar and "test".copy() leads to (almost) identical error messages
**Actual Result:**
"test".bar leads to two error messages and "test".copy() only to one, which can be very surprising.
**Reproduce code:**
```scala
object Foo{
  trait TypedType[T]
  implicit def intColumnType: TypedType[Int] = null
  case class ConstColumn[T](v: T){
    def bar = 5
  }
  implicit def valueToConstColumn[T : TypedType](v: T) = ConstColumn(v)
  5.copy()
  5.bar

  "test".bar // could not find implicit value for evidence parameter of type Foo.TypedType[String]
             // value bar is not a member of String

  "test".copy() // could not find implicit value for evidence parameter of type Foo.TypedType[String]
}
```
