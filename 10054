Easy cake for GenBCode, whether optimization is on or not.

Not sure whether this bug shares a root cause with scala/bug#7407 . The problem there last time I checked was a per-design best-effort shuffling of ICode CFG blocks aiming to comply with bytecode verification.

In contrast, the bytecode emitted by GenBCode reflects the lexical nesting of try-catch-finally, thus it always passes bytecode verification.

To better see the ordering of side-effects:
```
import scala.util.control.ControlThrowable

object Test {
  def main(args: Array[String]) {
    try { println(1) }
    finally {
      try { println(2) }
      finally {
        try   { println(3) }
        catch {
          case ct: ControlThrowable => throw(ct)
          case t:  Throwable        => t.printStackTrace()
        }
      }
    }
  }
}
```
