Have you ever tried the alphabetical index under the search bar? (On the left panel)
Finding methods is what this index was introduced to do.

To continue with your above example, if you're looking for all possible locations a method `foo` might be defined, you would simply click the "F" under that search bar, and the right panel will turn to an index of all entities and members beginning with f/F, including methods. You'd simply locate `foo` in the list, and you'd see all classes/objects/traits which implement `foo`.

A live example is the method `map`, defined throughout the standard library. In looking at the scaladoc index page for M, [http://www.scala-lang.org/api/current/index.html#index.index-m], one can see a list of all entities where `map` is implemented.

Regarding "pimped" methods-- Scaladoc in general doesn't list pimped methods on the class/object/trait they've been pimped onto, yet (expect a solution to this soon). So this is less of a problem with search, and a general soon-to-be-resolved-issue with Scaladoc. 

Regarding your other suggestions, such as searching across classes/methods and the type-based queries-- stuff like this would require something like a database, which isn't an option when statically generating documentation to be shipped in the distribution. For that, I'd recommend [scalex](http://scalex.org/) (or using the search bar on [docs.scala-lang.org](http://docs.scala-lang.org), which will very very soon return the results of a scalex query on the search results page.)
