Replying to [comment:8 odersky]:
> Good point. That one is not covered by the alternative use of (_). You'd have to write
> () => f which is a bit less nice. But It's still only a minor inconvenience and writing () => f might atcually help comprehensibility.

I would miss f _.  I use it a lot, although maybe there are other ways to do things.  Is there another way to turn a method into a function without knowing the arity first? Maybe that seems like a trivial thing but I get a lot of mileage in the repl, especially with java's ridiculously long everything.
```scala
scala> java.lang.management.ManagementFactory.newPlatformMXBeanProxy _
res0: (javax.management.MBeanServerConnection, java.lang.String, java.lang.Class[Nothing]) => Nothing = <function3>

scala> java.util.Arrays.deepEquals _
res1: (Array[java.lang.Object], Array[java.lang.Object]) => Boolean = <function2>
```
