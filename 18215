There are a couple problems with the definition of {{Function.const}}. First is just a minor annoyance:

{code}
scala> val alwaysZero = Function.const(0)
<console>:8: error: missing arguments for method const in object Function;
follow this method with `_' if you want to treat it as a partially applied function
{code}

Since {{const}}'s whole purpose is to construct function values (presumably for use in higher order functions), this would be more convenient:

{code}
def const[A](a: A): Any => A = _ => a
{code}

There's still a bigger problem, though: the returned function is strict in its argument.

{code}
scala> val zero = const(0)(???)
scala.NotImplementedError: an implementation is missing
{code}

So there's another important tweak:

{code}
def const[A](a: A): (=> Any) => A = _ => a
{code}

Now this is safe:
{code}
scala> val zero = const(0)(???)
zero: Int = 0
{code}
