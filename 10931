I withdraw the suggestion that there is a workaround. One simply trades in one set of bugs for another.
```scala
scala> val u = scala.reflect.runtime.universe
u: scala.reflect.api.JavaUniverse = scala.reflect.runtime.JavaUniverse@7e73b262

scala> import u._
import u._

scala> def f[T: WeakTypeTag] = weakTypeOf[T]
f: [T](implicit evidence$1: u.WeakTypeTag[T])u.Type

scala> f[List[_]]
res0: u.Type = scala.List[_]

// result of f[List[_]] if u is asInstanceOf[scala.reflect.internal.SymbolTable]
scala> f[List[_]]
scala.ScalaReflectionException: object $iw not found.
  at scala.reflect.internal.Mirrors$RootsBase.staticModule(Mirrors.scala:160)
  at scala.reflect.internal.Mirrors$RootsBase.staticModule(Mirrors.scala:22)
  at $typecreator1$1.apply(<console>:13)
```
