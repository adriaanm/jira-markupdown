{{{
BigDecimal("-4.6010652208491219E+1556245283").hashCode
}}}

Explodes with an OutOfMemoryError even with a 4GB heap.  (tested using PaulP's sbt-extras script with SBT_MEM=4096)  The issue is that the BigDecimal#isWhole function is extremely heap-intensive for large numbers.  This is actually a bit silly, given that numbers like the one I pasted are never, ever going to be convertible to either Int *or* Double, which is what the isWhole check is intended to accomplish.

My proposal would be to change the implementation of BigDecimal#hashCode to do a quick sanity check on the size of the value to see if it's even *possible* to fall into the range of Int/Double.  If not, then check the sign and return the value that Double's ## would have returned anyway (Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY).  As things stand, this is literally a security whole in Scala for people who parse user-specified text as BigDecimal, even with non-ARBITRARY contexts.
