Here's another reason, my email to scala-internals about SI-5929.
{noformat}
Oh, the interesting things one learns trying to compile scalatest against
the right version of scalacheck.  It didn't compile, actually, which led
me to this little bundle of badness.

  case class Foo(x: Int)(implicit y: Foo) { }
  def f(args: List[Foo]) = if (false) args map (_.copy()) else args

What return type is to be inferred for f? In m3 it is List[Foo].  In m4
it is List[Object], because of https://issues.scala-lang.org/browse/SI-5907 .

In scalatest, the affected method is

  private def getArgsWithSpecifiedNames(argNames: Option[List[String]], scalaCheckArgs: Prop.Args) = {
    if (argNames.isDefined) {
      // length of scalaCheckArgs should equal length of argNames
      val zipped = argNames.get zip scalaCheckArgs
      zipped map { case (argName, arg) => arg.copy(label = argName) }
    }
    else
      scalaCheckArgs
  }
{noformat}
