The attached file generates a ClassCastException when run with the error:

{code}
java.lang.ExceptionInInitializerError
        at test.Main.main(interpretertest.scala)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at scala.tools.nsc.ObjectRunner$$$$anonfun$$run$$1.apply(ObjectRunner.scala:75)
        at scala.tools.nsc.ObjectRunner$$.withContextClassLoader(ObjectRunner.scala:49)
        at scala.tools.nsc.ObjectRunner$$.run(ObjectRunner.scala:74)
        at scala.tools.nsc.MainGenericRunner$$.main(MainGenericRunner.scala:161)
        at scala.tools.nsc.MainGenericRunner.main(MainGenericRunner.scala)
Caused by: java.lang.reflect.InvocationTargetException
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at scala.tools.nsc.Interpreter.bind(Interpreter.scala:543)
        at test.Main$$.<init>(interpretertest.scala:9)
        at test.Main$$.<clinit>(interpretertest.scala)
        ... 10 more
Caused by: java.lang.ClassCastException: test.Foo cannot be cast to test.Foo
        at binder0$$.set(<script>:1)
        at binder0.set(<script>)
        ... 17 more

{code}

Presumably what's happening is that the interpreter is loading the class test.Foo again rather than correctly delegating to its parent ClassLoader? Regardless, it results in interpreter.bind being very not useful because you can't bind anything outside of the standard library. 
