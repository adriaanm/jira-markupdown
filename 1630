I have found a workaround:
```scala
class A {
  def +(that: Nothing) = () // I'm just adding this overloaded method...
  def +(that: A) = new A
  def *(that: A) = new A
}

class B {
  def +(that: B) = new B
  def *(that: B) = new B
}

implicit def a2b(a: A) = new B

val a = new A
val b = new B

a+b*a // works
a*b+a // works
b*a+a // works

a+a*b // ... and then it works.
```
