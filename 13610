After upgrading from scala-2.7.1.r15574 to scala-2.7.1.r15611 I again have a Serializable issue (possibly due to changeset 15603):
```scala
package test

@serializable
@SerialVersionUID(1L)
class VarModel[T]( getter: => T, setter: T => Unit )
{
  def this( getter: => T ) = this( getter, null )

  def getObject: AnyRef = getter.asInstanceOf[AnyRef]

  def setObject( v: AnyRef ) = {
    if( setter==null )
      throw new RuntimeException( "Tried to set readonly model!")
    setter( v.asInstanceOf[T] )
  }

  def detach = ()
}

@serializable
@SerialVersionUID(1L)
class Printer( p: VarModel[String] ) {
  def print = println( p.getObject );
}

@serializable
@SerialVersionUID(1L)
class Component {
}

class Form extends Component {
}

@serializable
@SerialVersionUID(1L)
class Main {
  var pass = "pass"

  def main(args : Array[String]) : Unit = {
    val f = new Form {
      val p = new Printer( new VarModel( pass, pass=_ ) );
      p.print
    }
    ()
  }
}
```

The generated anonymous classes aren't Serializable!

Although with Scala @Serializable might not be inherited with Form from Component in the example above - in my work case, Form is a Java class inheriting Serializable from a parent.

Since there is no way to indicate Serializable to anonymous classes (see SI-832) - this seems to be a newly introduced bug.
