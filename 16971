{code}
import scala.reflect.makro.{Context => Ctx}

object Macros {
  def foo[T](s: String) = macro Impls.foo[T]

  object Impls {
    def foo[T: c.TypeTag](c: Ctx)(s: c.Expr[T]) = c.reify {
      Array(s.eval)
    }
  }
}
{code}

{code}
object Test extends App {
  val arr = Macros.foo("hello", "world")
  println(arr.getClass)
}
{code}

{code}
Macros_1.scala:8: error: No ArrayTag available for T
      Array(s.eval)
           ^
one error found
{code}
