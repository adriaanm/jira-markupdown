This no longer crashes with trunk.  Instead:
```scala
$$ scalac28 a.scala 
a.scala:10: error: overriding value y in trait A of type B.x.S[Int];
 value y has incompatible type
  val y : x.S = throw new Exception
      ^
```
I find this example sufficiently confusing that I'm not sure what the correct behavior (or code) is.  Regardless, if there's still a bug revealed by the test code, at the least the title of this ticket should be altered to reflect what it is.

If I alter the annotation on B.y to be the same as A.y, I get:
```scala
$$ scalac28 a.scala 
a.scala:10: error: B.x.S does not take type parameters
  val y : x.S[Int] = throw new Exception
            ^
one error found
```
Fair enough.  If I remove the annotation entirely it compiles and infers that B.y is Nothing, also fair enough.
