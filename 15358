I ran into this in a codebase that was translated from Java to Scala via jatran and then fixed to compile. I was able to reduce it to a self-contained test, although it may be possible to reduce it further.

The issue occurs with 2.8.0.RC2 and the latest nightly (r22026). JAVA_OPTS was set to "-Xmx2048m -XX:MaxPermSize=256m -Xss1m" and I confirmed via JConsole that there was plenty of free memory. The following command never terminates in my machine and I let it run for several minutes:

{code}
/opt/scala-2.8.0.r22026-b20100525020146/bin/scalac -Ylog:clos -optimise test/NodeInputPanel.scala 
[log closelim] Analyzing test.NodeInputType.ADD
[log closelim] Added point: 1
[log closelim] Cpp info at entry to block 1: 
Bindings: Map()
Stack: List()
[log closelim] Analyzing test.NodeInputType.EDIT
[log closelim] Added point: 1
[log closelim] Cpp info at entry to block 1: 
Bindings: Map()
Stack: List()
[log closelim] Analyzing test.NodeInputType.<init>
[log closelim] Added point: 1
[log closelim] Cpp info at entry to block 1: 
Bindings: Map()
Stack: List()
[log closelim] Analyzing test.NodeEvent.inputType
[log closelim] Added point: 1
[log closelim] Cpp info at entry to block 1: 
Bindings: Map()
Stack: List()
[log closelim] Analyzing test.NodeEvent.id
[log closelim] Added point: 1
[log closelim] Cpp info at entry to block 1: 
Bindings: Map()
Stack: List()
[log closelim] Analyzing test.NodeEvent.code
[log closelim] Added point: 1
[log closelim] Cpp info at entry to block 1: 
Bindings: Map()
Stack: List()
[log closelim] Analyzing test.NodeEvent.weight
[log closelim] Added point: 1
[log closelim] Cpp info at entry to block 1: 
Bindings: Map()
Stack: List()
[log closelim] Analyzing test.NodeEvent.threshold
[log closelim] Added point: 1
[log closelim] Cpp info at entry to block 1: 
Bindings: Map()
Stack: List()
[log closelim] Analyzing test.NodeEvent.<init>
[log closelim] Added point: 1
[log closelim] Cpp info at entry to block 1: 
Bindings: Map()
Stack: List()
[log closelim] Analyzing test.NodeInputPanel.weightField
[log closelim] Added point: 1
[log closelim] Cpp info at entry to block 1: 
Bindings: Map()
Stack: List()
[log closelim] Analyzing test.NodeInputPanel.thresholdField
[log closelim] Added point: 1
[log closelim] Cpp info at entry to block 1: 
Bindings: Map()
Stack: List()
[log closelim] Analyzing test.NodeInputPanel.codeField
[log closelim] Added point: 1
[log closelim] Cpp info at entry to block 1: 
Bindings: Map()
Stack: List()
[log closelim] Analyzing test.NodeInputPanel.idField
[log closelim] Added point: 1
[log closelim] Cpp info at entry to block 1: 
Bindings: Map()
Stack: List()
[log closelim] Analyzing test.NodeInputPanel.initEditInputType
[log closelim] Added point: 1
[log closelim] Cpp info at entry to block 1: 
Bindings: Map()
Stack: List()
[log closelim] Analyzing test.NodeInputPanel.test$$NodeInputPanel$$$$fireNodeEvent
[log closelim] Added point: 1
[log closelim] Added point: 2
[log closelim] Added point: 3
[log closelim] Added point: 4
[log closelim] Added point: 5
[log closelim] Added point: 6
[log closelim] Added point: 8
[log closelim] Added point: 9
[log closelim] Added point: 10
[log closelim] Added point: 11
[log closelim] Added point: 12
[log closelim] Added point: 13
[log closelim] Added point: 14
[log closelim] Added point: 15
[log closelim] Added point: 16
[log closelim] Added point: 17
[log closelim] Added point: 18
[log closelim] Added point: 19
[log closelim] Added point: 20
[log closelim] Added point: 21
[log closelim] Added point: 22
[log closelim] Added point: 23
[log closelim] Added point: 24
[log closelim] Added point: 25
[log closelim] Added point: 26
[log closelim] Added point: 27
[log closelim] Added point: 28
[log closelim] Added point: 29
[log closelim] Added point: 30
[log closelim] Added point: 31
[log closelim] Added point: 32
[log closelim] Added point: 34
[log closelim] Added point: 35
[log closelim] Added point: 36
[log closelim] Added point: 37
[log closelim] Added point: 39
[log closelim] Added point: 40
[log closelim] Added point: 41
[log closelim] Added point: 42
[log closelim] Added point: 43
[log closelim] Added point: 46
[log closelim] Added point: 47
[log closelim] Added point: 48
[log closelim] Added point: 49
[log closelim] Added point: 52
[log closelim] Added point: 53
[log closelim] Added point: 54
[log closelim] Added point: 55
[log closelim] Added point: 56
[log closelim] Added point: 57
[log closelim] Added point: 58
[log closelim] Added point: 59
[log closelim] Added point: 60
[log closelim] Added point: 65
[log closelim] Added point: 66
[log closelim] Added point: 67
[log closelim] Added point: 68
[log closelim] Added point: 69
[log closelim] Added point: 70
[log closelim] Added point: 71
[log closelim] Added point: 72
[log closelim] Added point: 81
[log closelim] Added point: 82
[log closelim] Added point: 83
[log closelim] Added point: 84
[log closelim] Added point: 85
[log closelim] Added point: 86
[log closelim] Added point: 87
[log closelim] Added point: 88
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] considering unused outer at position 0 in List(test.NodeInputPanel, test.NodeEvent)
[log closelim] considering unused outer at position 0 in List(test.NodeInputPanel, test.NodeEvent)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] considering unused outer at position 0 in List(test.NodeInputPanel, test.NodeEvent)
[log closelim] considering unused outer at position 0 in List(test.NodeInputPanel, test.NodeEvent)
[log closelim] considering unused outer at position 0 in List(test.NodeInputPanel, test.NodeEvent)
[log closelim] considering unused outer at position 0 in List(test.NodeInputPanel, test.NodeEvent)
[log closelim] considering unused outer at position 0 in List(test.NodeInputPanel, test.NodeEvent)
[log closelim] considering unused outer at position 0 in List(test.NodeInputPanel, test.NodeEvent)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] considering unused outer at position 0 in List(test.NodeInputPanel, test.NodeEvent)
[log closelim] considering unused outer at position 0 in List(test.NodeInputPanel, test.NodeEvent)
[log closelim] considering unused outer at position 0 in List(test.NodeInputPanel, test.NodeEvent)
[log closelim] considering unused outer at position 0 in List(test.NodeInputPanel, test.NodeEvent)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] giving up on constructor NodeEvent(diff: 1)
[log closelim] considering unused outer at position 0 in List(test.NodeInputPanel, test.NodeEvent)
[log closelim] considering unused outer at position 0 in List(test.NodeInputPanel, test.NodeEvent)
[log closelim] considering unused outer at position 0 in List(test.NodeInputPanel, test.NodeEvent)
[log closelim] considering unused outer at position 0 in List(test.NodeInputPanel, test.NodeEvent)
{code}

A stacktrace snapshot:

{code}
Name: main
State: RUNNABLE
Total blocked: 0  Total waited: 0

Stack trace: 
scala.collection.mutable.HashMap.table(HashMap.scala:39)
scala.collection.mutable.HashTable$$class.findEntry(HashTable.scala:116)
scala.collection.mutable.HashMap.findEntry(HashMap.scala:39)
scala.collection.mutable.HashMap.$$plus$$eq(HashMap.scala:70)
scala.tools.nsc.backend.icode.analysis.CopyPropagation$$copyLattice$$$$anonfun$$lub2$$2.apply(CopyPropagation.scala:201)
scala.tools.nsc.backend.icode.analysis.CopyPropagation$$copyLattice$$$$anonfun$$lub2$$2.apply(CopyPropagation.scala:200)
scala.collection.TraversableLike$$WithFilter$$$$anonfun$$foreach$$1.apply(TraversableLike.scala:823)
scala.collection.mutable.HashMap$$$$anonfun$$foreach$$1.apply(HashMap.scala:80)
scala.collection.mutable.HashMap$$$$anonfun$$foreach$$1.apply(HashMap.scala:80)
scala.collection.Iterator$$class.foreach(Iterator.scala:631)
scala.collection.mutable.HashTable$$$$anon$$1.foreach(HashTable.scala:161)
scala.collection.mutable.HashTable$$class.foreachEntry(HashTable.scala:194)
scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
scala.collection.mutable.HashMap.foreach(HashMap.scala:80)
scala.collection.TraversableLike$$WithFilter.foreach(TraversableLike.scala:822)
scala.tools.nsc.backend.icode.analysis.CopyPropagation$$copyLattice$$.lub2(CopyPropagation.scala:200)
scala.tools.nsc.backend.icode.analysis.CopyPropagation$$copyLattice$$.lub2(CopyPropagation.scala:53)
scala.tools.nsc.backend.icode.analysis.CompleteLattice$$$$anonfun$$lub$$1.apply(CompleteLattice.scala:40)
scala.collection.LinearSeqOptimized$$class.foldLeft(LinearSeqOptimized.scala:123)
scala.collection.immutable.List.foldLeft(List.scala:45)
scala.collection.LinearSeqOptimized$$class.reduceLeft(LinearSeqOptimized.scala:137)
scala.collection.immutable.List.reduceLeft(List.scala:45)
scala.tools.nsc.backend.icode.analysis.CompleteLattice$$class.lub(CompleteLattice.scala:40)
scala.tools.nsc.backend.icode.analysis.CopyPropagation$$copyLattice$$.lub(CopyPropagation.scala:53)
scala.tools.nsc.backend.icode.analysis.DataFlowAnalysis$$$$anonfun$$forwardAnalysis$$1.apply(DataFlowAnalysis.scala:76)
scala.tools.nsc.backend.icode.analysis.DataFlowAnalysis$$$$anonfun$$forwardAnalysis$$1.apply(DataFlowAnalysis.scala:69)
scala.collection.LinearSeqOptimized$$class.foreach(LinearSeqOptimized.scala:61)
scala.collection.immutable.List.foreach(List.scala:45)
scala.tools.nsc.backend.icode.analysis.DataFlowAnalysis$$class.forwardAnalysis(DataFlowAnalysis.scala:69)
scala.tools.nsc.backend.icode.analysis.CopyPropagation$$CopyAnalysis.run(CopyPropagation.scala:235)
scala.tools.nsc.backend.opt.ClosureElimination$$ClosureElim.analyzeMethod(ClosureElimination.scala:101)
scala.tools.nsc.backend.opt.ClosureElimination$$ClosureElim$$$$anonfun$$analyzeClass$$1.apply(ClosureElimination.scala:87)
scala.tools.nsc.backend.opt.ClosureElimination$$ClosureElim$$$$anonfun$$analyzeClass$$1.apply(ClosureElimination.scala:86)
scala.collection.LinearSeqOptimized$$class.foreach(LinearSeqOptimized.scala:61)
scala.collection.immutable.List.foreach(List.scala:45)
scala.tools.nsc.backend.opt.ClosureElimination$$ClosureElim.analyzeClass(ClosureElimination.scala:86)
scala.tools.nsc.backend.opt.ClosureElimination$$ClosureEliminationPhase.apply(ClosureElimination.scala:35)
scala.tools.nsc.backend.icode.ICodes$$ICodePhase$$$$anonfun$$apply$$1.apply(ICodes.scala:93)
scala.tools.nsc.backend.icode.ICodes$$ICodePhase$$$$anonfun$$apply$$1.apply(ICodes.scala:93)
scala.collection.LinearSeqOptimized$$class.foreach(LinearSeqOptimized.scala:61)
scala.collection.immutable.List.foreach(List.scala:45)
scala.collection.generic.TraversableForwarder$$class.foreach(TraversableForwarder.scala:44)
scala.collection.mutable.LinkedHashSet.foreach(LinkedHashSet.scala:73)
scala.tools.nsc.backend.icode.ICodes$$ICodePhase.apply(ICodes.scala:93)
scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$applyPhase$$1.apply(Global.scala:276)
scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$applyPhase$$1.apply(Global.scala:276)
scala.tools.nsc.reporters.Reporter.withSource(Reporter.scala:48)
scala.tools.nsc.Global$$GlobalPhase.applyPhase(Global.scala:276)
scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$run$$1.apply(Global.scala:252)
scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$run$$1.apply(Global.scala:252)
scala.collection.Iterator$$class.foreach(Iterator.scala:631)
scala.collection.mutable.ListBuffer$$$$anon$$1.foreach(ListBuffer.scala:304)
scala.tools.nsc.Global$$GlobalPhase.run(Global.scala:252)
scala.tools.nsc.Global$$Run.compileSources(Global.scala:733)
scala.tools.nsc.Global$$Run.compile(Global.scala:813)
scala.tools.nsc.Main$$.process(Main.scala:108)
scala.tools.nsc.Main$$.main(Main.scala:122)
scala.tools.nsc.Main.main(Main.scala)

{code}
