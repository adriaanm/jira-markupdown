I narrowed this a bunch further.  Here is enough to crash it.
```scala
object Oops {  
  implicit def someImplicit(s: Seq[_]): String = error("stub")
  def item: String = Nil map { case e => e  }
}
```
(You can crash at a different spot by saying "case e: Any => e" instead.)

It still seems to me like it's in lambdalifter, during the free vars traversal.  I tried to figure it out and came to the very speculative conclusion that it's some assumption it's making which is true for methods, but not for labels, or vice versa.  Or, I could easily believe that the symbols being constructed in the matcher are not set up correctly, but as yet I don't know in what fashion.
