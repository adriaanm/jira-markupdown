Here lies the telling inconsistency:
```
> (this, this.info, this.baseClasses, this.info.baseTypeSeq.toList)

(
  class View2,
  Two.this.Alias { def <init>(): Two.this.View2},
  List(class View2, trait Op, trait M, class Object, class Any),
  List(Two.this.View2, Two.this.Op[Int], Object, Any)
)
```

`matchesPrefixAndClass(View2.this.type, trait M)(trait M)` yields false because `(class View2).isSubClass(trait M)` does. It gets its information from `this.info.baseTypeIndex`, which has lost `M`.
