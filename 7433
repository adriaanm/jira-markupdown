This code is the same like in issue except implicit reference is explicit, however code from issue compiles and this one not (I hope it's not true that such situation is ok for Scala).
```scala
class Expr[T] {
  def * (other: Expr[T]): Expr[T] = null
  def *(other: Const[_ <: CC[T]]): Const[CC[T]] = null
}

case class Const[T](value: T) extends Expr[T]
class CC[T]
case class ExtDouble(value: Double) extends CC[Double]

object Test extends App {
  implicit def double2Const[T](value : Double): Const[T] = Const(value.asInstanceOf[T])

  double2Const(2.0) * Const[ExtDouble](ExtDouble(2.0))
}
```
