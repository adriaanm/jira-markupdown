When explicitly defining the companion object of a case class, the compiler does not add a `FunctionN` parent and does not override `toString`.

working as expected:
```scala
scala> object u { case class C(x: Int) }
defined module u

scala> u.C
res1: u.C.type = C

scala> val f: Int => u.C = u.C
f: (Int) => u.C = C

scala> 
```


unexpected:
```scala
scala> object t { object C; case class C(x: Int) }
defined module t

scala> t.C
res0: t.C.type = t$$C$$@5e58a983

scala> val f: Int => t.C = t.C
<console>:6: error: type mismatch;
 found   : t.C.type (with underlying type object t.C)
 required: (Int) => t.C
       val f: Int => t.C = t.C
                             ^
```
