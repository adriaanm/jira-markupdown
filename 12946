```scala
trait A {
    def f(a: String): Unit { }
}

trait B[T] extends A {
    def f(a: T): Unit
}

class C extends B[String] {
}

class D extends B[String] with A {
}
```

compiler output:
```scala
hello.scala:9: error: class C needs to be abstract, since method f in trait B of type (String)Unit is not defined
class C extends B[String] {
^
hello.scala:12: error: class D needs to be abstract, since method f in trait B of type (String)Unit is not defined
class D extends B[String] with A {
^
two errors found
```

I think, both C and D are correct classes.

Checked on 2.6.0-final.
