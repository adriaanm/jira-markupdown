I'm working on a fix for this, we need to refine:

{code}
if (name != nme.CONSTRUCTOR && inExprModeOr(mode, PATTERNmode)) {
  val qual1 = adaptToMemberWithArgs(tree, qual, name, mode, true, true)
  if (qual1 ne qual)
    return typed(treeCopy.Select(tree, qual1, name), mode, pt)
}
{code}

https://github.com/scala/scala/blob/886c40/src/compiler/scala/tools/nsc/typechecker/Typers.scala#L4603

To something like:

{code}
if (qual1 ne tree)
{code}

or

{code}
if (!qual1.isErrorTyped)
{code}

I haven't pinpointed why a formatted literal spins into an infinite loop, whereas the desugared expression recovers with a sensible type error.

I might not be able to submit a PR for this for a day or two.
