Add this to the list of why it's so hard to use an alternative Predef.

{code}
package p

object Bug {
  def empty[F[_]] = null

  type LocalNothing = scala.Nothing

  def f = empty[Nothing]
  def g = empty[LocalNothing]
  // a.scala:11: error: kinds of the type arguments (p.Bug.LocalNothing) do not conform to the expected kinds of the type parameters (type F).
  // p.Bug.LocalNothing's type parameters do not match type F's expected parameters:
  // type LocalNothing has no type parameters, but type F has one
  //   def g = empty[LocalNothing]
  //                ^
  // one error found
}
{code}
