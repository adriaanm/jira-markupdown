There are two jansi.dll bundled in jline.jar, one for 32 bits and one for 64 bits. The one being picked up is chosen based on the value of sun.arch.data.model system property (32 or 64). Once unpacked the dll does not get refreshed. The only check that is performed is based on timestamp of jline.jar and jansi.dll. Running first the 32 bits version unpacks the 32 bits dll. When starting the 64 bits JVM, jansi.dll is then incompatible. (or vice versa if starting with 64 bits).

The bug is really in the [hawtjni](https://github.com/chirino/hawtjni) dependent library used by jline.

Here is a cygwin session demonstrating the issue:
```scala
$ rm /cygdrive/c/Users/jlh/AppData/Local/Temp/jansi.dll

$ scala
Welcome to Scala version 2.9.0.final (Java HotSpot(TM) 64-Bit Server VM, Java 1.6.0_21).
Type in expressions to have them evaluated.
Type :help for more information.

scala>:quit

$ md5sum /cygdrive/c/Users/jlh/AppData/Local/Temp/jansi.dll
d47102e00a05c357e91988d56ca7a635 */cygdrive/c/Users/jlh/AppData/Local/Temp/jansi.dll

$ scala32
Failed to created JLineReader: java.lang.NoClassDefFoundError: Could not initialize class org.fusesource.jansi.internal.Kernel32
Falling back to SimpleReader.
Welcome to Scala version 2.9.0.final (Java HotSpot(TM) Client VM, Java 1.6.0_18).
Type in expressions to have them evaluated.
Type :help for more information.

scala> :quit

$ md5sum /cygdrive/c/Users/jlh/AppData/Local/Temp/jansi.dll
d47102e00a05c357e91988d56ca7a635 */cygdrive/c/Users/jlh/AppData/Local/Temp/jansi.dll

$ rm /cygdrive/c/Users/jlh/AppData/Local/Temp/jansi.dll

$ scala32
Welcome to Scala version 2.9.0.final (Java HotSpot(TM) Client VM, Java 1.6.0_18).
Type in expressions to have them evaluated.
Type :help for more information.

scala> :quit

$ md5sum /cygdrive/c/Users/jlh/AppData/Local/Temp/jansi.dll
2452a4f2c62c0447948444cfb0f9f428 */cygdrive/c/Users/jlh/AppData/Local/Temp/jansi.dll
```

For the end user, the work around is to delete the dll `del %TEMP%\jansi.dll`.
