scala.collection.mutable.BitSet's &= method only changes the members of the bitfield up to other.nwords. If the other BitSet has a lower capacity than the bitset &= is called on, the higher words of the first BitSet aren't cleared as would be expected.
```scala

Welcome to Scala version 2.11.2 (OpenJDK 64-Bit Server VM, Java 1.7.0_65).
Type in expressions to have them evaluated.
Type :help for more information.

scala> import scala.collection.mutable.BitSet
import scala.collection.mutable.BitSet

scala> val bitSet = new BitSet() + 10 + 20 + 63 + 64 + 100
bitSet: scala.collection.mutable.BitSet = BitSet(10, 20, 63, 64, 100)

scala> bitSet &= BitSet.empty
res0: bitSet.type = BitSet(64, 100)
```
