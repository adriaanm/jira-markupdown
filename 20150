{code}
object Main extends App {
  class Baz {
    object Foo
  }

  println((new Baz).Foo.isInstanceOf[Singleton])
}
{code}
results in
{code}
[warn] /tmp/renderer4uPUlcG0ee/src/main/scala/test.scala:6: fruitless type test: a value of type Main.Baz#Foo.type cannot also be a Singleton
[warn]   println((new Baz).Foo.isInstanceOf[Singleton])
[warn]                                     ^
[warn] one warning found
[success] Total time: 9 s, completed Jul 23, 2016 6:11:33 AM
Now running...
[info] Running Main 
true
{code}
In fact, `"".isInstanceOf[Singleton]` is `true` as well...

Presumably the problem is that `Singleton` is erased to `Object`. Would it be reasonable to make `isInstanceOf[Singleton]` an error?
