I now have a minimal reproducer ...

A.scala
```scala
object Misnamed
```

B.scala
```scala
object B {
  val a = Misnamed
} 
```

If at least one of,
 * A.scala is open in an editor
or,
 * There is a class file for object Misnamed
Then the editor will (correctly) not report errors against the occurrence of Misnamed in B.scala. If both of these conditions do not hold (ie. close A.scala, turn off automatic building, then do a clean without an immediate rebuild) then the editor will (incorrectly) report "not found: value Misnamed" against the occurrence of Misnamed in B.scala.

Note that in the both the error and the non-error case the presentation compiler might need a little nudge to exhibit the behaviour as described (e.g to make the incorrect error go away by opening A.scala you might also need to make a single character edit to B.scala; to make the error reappear you might need to reinstantiate the presentation compiler by doing a clean).

I think that this example probably covers all the remaining cases of this ticket, so if you're seeing incorrect behaviour which is clearly different from the incorrect behaviour I've just described, then please let me know.
