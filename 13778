Maybe I'm not reading the spec properly, but I see nothing wrong with the following code:
```scala
abstract class Env {
  protected def size:Int
}

object EmptyEnv extends Env {
  protected def size = 0
}

class NestedEnv(val parent:Env) extends Env {
  protected def size = 1 + parent.size
}
```

However, it spits out this:
```scala
error: method size cannot be accessed in Env
         protected def size = 1 + parent.size
                                         ^
```

(Adding **override** to **size** in the subclasses doesn't change anything.)
