I've further simplified the example to
```scala
trait Search[M] {
    def search(input: M): C[Int] = null
}

object StringSearch extends Search[String]

trait C[T]
```

and 
```scala
public class JavaApp {
       public static void main(String[] args) {
               StringSearch.search("test");
       }
}
```

In a strange way the error depends on the return value being an applied type (strange because the error appears in the parameter position). The problem is actually catched using the `-Ycheck:genjvm` flag:
```scala
src/main/scala/Test.scala:5: warning: compiler bug: created generic signature for method search in StringSearch that does not conform to its erasure
signature: (Ljava/lang/String;)LC<Ljava/lang/Object;>;
original type: (input: String)C[Int]
normalized type: (input: String)C[Object]
erasure type: (input: Object)C
if this is reproducible, please report bug at http://lampsvn.epfl.ch/trac/scala
object StringSearch extends Search[String]
       ^
one warning found
```
