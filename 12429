Without the overload:
{code}
.\src\main\scala\test\Test.scala:5: error: no type parameters for method map: (x$1: test.SuccessHandler[_ >: String, _ <: R])test.Promise[R] exist so that it can be applied to arguments (test.SuccessHandler[String,Int])
 --- because ---
argument expression's type is not compatible with formal parameter type;
 found   : test.SuccessHandler[String,Int]
 required: test.SuccessHandler[_ >: String, _ <: ?R]
Note: String <: Any, but Java-defined trait SuccessHandler is invariant in type T.
You may wish to investigate a wildcard type such as `_ <: Any`. (SLS 3.2.10)
  promise.map(new SuccessHandler[String, Int] {
          ^
.\src\main\scala\test\Test.scala:5: error: type mismatch;
 found   : test.SuccessHandler[String,Int]
 required: test.SuccessHandler[_ >: String, _ <: R]
  promise.map(new SuccessHandler[String, Int] {
              ^
two errors found
{code}
