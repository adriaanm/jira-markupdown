This looks fixed since at least RC1.  I can't check in a test case which depends on a couple hundred kilobytes of jars, but here is a demo.  If anyone wants to try to dredge out a reasonable sized test case you'll be doing a good deed.
```scala
[paulp@leaf 2896]$$ /scala/builds/trunk/r19003/bin/scalac -cp 'tmp/*' a.scala 
a.scala:9: error: illegal cyclic reference involving object DataLoader
class SomeDataObject(primaryFile : FileObject, loader : MultiFileLoader) extends MultiDataObject(primaryFile, loader)
                                                                                 ^
a.scala:9: error: too many arguments for constructor Object: ()java.lang.Object
class SomeDataObject(primaryFile : FileObject, loader : MultiFileLoader) extends MultiDataObject(primaryFile, loader)
                    ^
two errors found
[paulp@leaf 2896]$$ /scala/inst/rc1/bin/scalac -cp 'tmp/*' a.scala
[paulp@leaf 2896]$$ 
```
