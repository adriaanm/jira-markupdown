When
  - reopening Eclipse with an already existing project or
  - adding sources in src/ folder and refreshing,
src/ in project explorer remains empty and the following exception is thrown:

{code}
org.eclipse.core.runtime.AssertionFailedException: null argument:
at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:84)
at org.eclipse.core.runtime.Assert.isNotNull(Assert.java:72)
at org.eclipse.core.expressions.EvaluationContext.<init>(EvaluationContext.java:44)
at org.eclipse.ui.internal.navigator.filters.CoreExpressionFilter.select(CoreExpressionFilter.java:51)
at org.eclipse.jface.viewers.ViewerFilter.filter(ViewerFilter.java:51)
at org.eclipse.jdt.internal.ui.navigator.NonEssentialElementsFilter.hasFilteredChildren(NonEssentialElementsFilter.java:77)
at org.eclipse.jdt.internal.ui.navigator.NonEssentialElementsFilter.select(NonEssentialElementsFilter.java:63)
at org.eclipse.jface.viewers.ViewerFilter.filter(ViewerFilter.java:51)
at org.eclipse.jface.viewers.AbstractTreeViewer.getFilteredChildren(AbstractTreeViewer.java:619)
at org.eclipse.jface.viewers.AbstractTreeViewer.getSortedChildren(AbstractTreeViewer.java:581)
at org.eclipse.jface.viewers.AbstractTreeViewer$$1.run(AbstractTreeViewer.java:776)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
at org.eclipse.jface.viewers.AbstractTreeViewer.createChildren(AbstractTreeViewer.java:755)
at org.eclipse.jface.viewers.TreeViewer.createChildren(TreeViewer.java:627)
at org.eclipse.jface.viewers.AbstractTreeViewer.handleTreeExpand(AbstractTreeViewer.java:1410)
at org.eclipse.jface.viewers.TreeViewer.handleTreeExpand(TreeViewer.java:918)
at org.eclipse.jface.viewers.AbstractTreeViewer$$4.treeExpanded(AbstractTreeViewer.java:1421)
at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:125)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1495)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1519)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1504)
at org.eclipse.swt.widgets.Tree.itemNotificationProc(Tree.java:2293)
at org.eclipse.swt.widgets.Display.itemNotificationProc(Display.java:2312)
at org.eclipse.swt.internal.carbon.OS.CallNextEventHandler(Native Method)
at org.eclipse.swt.widgets.Widget.kEventControlTrack(Widget.java:1062)
at org.eclipse.swt.widgets.Control.kEventControlTrack(Control.java:1950)
at org.eclipse.swt.widgets.Widget.controlProc(Widget.java:367)
at org.eclipse.swt.widgets.Display.controlProc(Display.java:835)
at org.eclipse.swt.internal.carbon.OS.CallNextEventHandler(Native Method)
at org.eclipse.swt.widgets.Tree.kEventMouseDown(Tree.java:2363)
at org.eclipse.swt.widgets.Widget.mouseProc(Widget.java:1262)
at org.eclipse.swt.widgets.Display.mouseProc(Display.java:2819)
at org.eclipse.swt.internal.carbon.OS.SendEventToEventTarget(Native Method)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2938)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)
at org.eclipse.ui.internal.Workbench.access$$4(Workbench.java:2219)
at org.eclipse.ui.internal.Workbench$$4.run(Workbench.java:466)
at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)
at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:169)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:585)
at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)
at org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)
at org.eclipse.equinox.launcher.Main.run(Main.java:1173)
{code}

Furthermore, unchecking “Package declarations” in “Customize View”, “Filters” shows the packages again, and some of the source files.

With a hierarchy containing a.b.X and a.b.c.Y, packages a, b and c are visible as well as Y, but X is invisible and b does not have a little arrow to its left. a does have a little arrow, and when opened, shows a.b that again has no arrow.

This is really a show-stopper: it makes the plugin unusable (I have no idea how to edit some of my sources).

Issue detected in nightly build r14101.
