This is not just cosmetic. It causes java.lang.Class.getDeclaredClasses to blow up as follows when walking classes to get methods, inner classes, etc. This is done in JRuby's Java integration layer to build up our meta-structure.

No class Scala delivers should ever break Java reflection. For now we are patching around it by catching the NoClassDefFoundError and giving up on inspecting inner classes for the class in question.
```scala
Class.java:-2:in `getDeclaredClasses0': java.lang.NoClassDefFoundError: scala/collection/mutable/ArrayBuffer$$$$anonfun$$remove$$1
	from Class.java:1699:in `getDeclaredClasses'
	from JavaClass.java:1848:in `getDeclaredClasses'
	from JavaClass.java:695:in `installClassClasses'
	from JavaClass.java:615:in `setupProxy'
	from Java.java:506:in `createProxyClass'
	from Java.java:445:in `getProxyClass'
	from Java.java:487:in `get_proxy_class'
	from JavaUtilities.java:34:in `get_proxy_class'
	from org/jruby/javasupport/JavaUtilities$$s_method_1_0$$RUBYINVOKER$$get_proxy_class.gen:65535:in `call'
	from CachingCallSite.java:312:in `cacheAndCall'
	from CachingCallSite.java:151:in `call'
	from CallOneArgNode.java:57:in `interpret'
	from LocalAsgnNode.java:123:in `interpret'
	from NewlineNode.java:103:in `interpret'
	from WhenOneArgNode.java:36:in `whenSlowTest'
	from WhenOneArgNode.java:46:in `when'
	from CaseNode.java:133:in `interpret'
	from NewlineNode.java:103:in `interpret'
	from BlockNode.java:71:in `interpret'
	from ASTInterpreter.java:64:in `INTERPRET_METHOD'
	from InterpretedMethod.java:184:in `call'
	from DefaultMethod.java:177:in `call'
	from CachingCallSite.java:312:in `cacheAndCall'
	from CachingCallSite.java:151:in `call'
	from FCallOneArgNode.java:36:in `interpret'
	from NewlineNode.java:103:in `interpret'
	from BlockNode.java:71:in `interpret'
	from RootNode.java:129:in `interpret'
	from ASTInterpreter.java:101:in `INTERPRET_ROOT'
	from Ruby.java:721:in `runInterpreter'
	from Ruby.java:582:in `runNormally'
	from Ruby.java:418:in `runFromMain'
	from Main.java:286:in `run'
	from Main.java:128:in `run'
	from Main.java:97:in `main'
Caused by:
URLClassLoader.java:202:in `run': java.lang.ClassNotFoundException: scala.collection.mutable.ArrayBuffer$$$$anonfun$$remove$$1
	from AccessController.java:-2:in `doPrivileged'
	from URLClassLoader.java:190:in `findClass'
	from JRubyClassLoader.java:49:in `findClass'
	from ClassLoader.java:307:in `loadClass'
	from ClassLoader.java:248:in `loadClass'
	from Class.java:-2:in `getDeclaredClasses0'
	from Class.java:1699:in `getDeclaredClasses'
	from JavaClass.java:1848:in `getDeclaredClasses'
	from JavaClass.java:695:in `installClassClasses'
	from JavaClass.java:615:in `setupProxy'
	from Java.java:506:in `createProxyClass'
	from Java.java:445:in `getProxyClass'
	from Java.java:487:in `get_proxy_class'
	from JavaUtilities.java:34:in `get_proxy_class'
	from org/jruby/javasupport/JavaUtilities$$s_method_1_0$$RUBYINVOKER$$get_proxy_class.gen:65535:in `call'
	from CachingCallSite.java:312:in `cacheAndCall'
	from CachingCallSite.java:151:in `call'
	from CallOneArgNode.java:57:in `interpret'
	from LocalAsgnNode.java:123:in `interpret'
	from NewlineNode.java:103:in `interpret'
	from WhenOneArgNode.java:36:in `whenSlowTest'
	from WhenOneArgNode.java:46:in `when'
	from CaseNode.java:133:in `interpret'
	from NewlineNode.java:103:in `interpret'
	from BlockNode.java:71:in `interpret'
	from ASTInterpreter.java:64:in `INTERPRET_METHOD'
	from InterpretedMethod.java:184:in `call'
	from DefaultMethod.java:177:in `call'
	from CachingCallSite.java:312:in `cacheAndCall'
	from CachingCallSite.java:151:in `call'
	from FCallOneArgNode.java:36:in `interpret'
	from NewlineNode.java:103:in `interpret'
	from BlockNode.java:71:in `interpret'
	from RootNode.java:129:in `interpret'
	from ASTInterpreter.java:101:in `INTERPRET_ROOT'
	from Ruby.java:721:in `runInterpreter'
	from Ruby.java:582:in `runNormally'
	from Ruby.java:418:in `runFromMain'
	from Main.java:286:in `run'
	from Main.java:128:in `run'
	from Main.java:97:in `main'
```
