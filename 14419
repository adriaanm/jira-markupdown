(originally reported as contrib701, see pos/contrib701, but was masked by SI-513)

The following code causes a loop in subtype checking:

{code}
trait B {
  type A[T] >: A[A[T]]
}
{code}

The reason is:

{code}
         sym2.isAbstractType && isDifferentType(tp2, tp2.bounds.lo) && (tp1 <:< tp2.bounds.lo)
{code}

the checks are  (roughly)

{code}
Nothing <: A[T]
  A[T] is different from A[A[T]]
  Nothing <: A[A[T]]
   A[A[T]] is different from A[A[A[T]]]
   Nothing <: A[A[A[T]]]
      ....
{code}

I propose to change `isDifferentType` to `isDifferentTypeConstructor`, which only checks the head of a type, ignoring type arguments of TypeRef's.
