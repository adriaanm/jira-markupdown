The EBNF of aphaid in SIP11 says that id preceding a processed is
```scala
alphaid ::= upper idrest
        | varid
```

Scala Language Specification 2.9 specifies
```scala
varid ::= lower idrest
idrest ::= {letter | digit} [‘_’ op]
op ::= opchar {opchar}
```

Acording to the EBNF, the following should be a list of valid alphaids.
```scala
a_a
a_+
```

However, when using the later with processed strings, the following compiler error is produced:
```scala
error: value a_+ is not a member of StringContext
```

Example code:
```scala
implicit class A(val sc: StringContext) {
  def a_a(args: Any*) = args
  def a_+(args: Any*) = args
}

val a = "Hello StringInterpolation"

a_a"$a" // ok, produces WrappedArray(Hello StringInterpolation)

a_+"$a" // error: value a_+ is not a member of StringContext

StringContext("").a_+(a) // ok, produces WrappedArray(Hello StringInterpolation)
```
