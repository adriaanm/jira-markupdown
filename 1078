Sorry, the code is buggy. A correct example:
{code}
object ProjTest {
  trait MInt { type Type }
  trait _0 extends MInt { type Type = Boolean }
  trait Succ[Pre <: MInt] extends MInt { type Type = Pre#Type }
  
  type _1 = Succ[_0]
  type _2 = Succ[_1]
  
  type X1 = _0#Type   // Ok
  type X2 = _1#Type   // Ok
  type X3 = _2#Type   // Compiler error, illegal cyclic reference involving type Type
}
{code}
Which doesn't contain a loop and should be expanded to:
{code}
_2#Type = Succ[_1]#Type = _1#Type = Succ[_0]#Type = _0#Type = Boolean
{code}
Can you verify if this works with your experimental branch?

If it does, it could be hopefully be used to implement more advanced things like HList (see http://jnordenberg.blogspot.com).
