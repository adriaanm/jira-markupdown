As the answer is slightly disappointing (I'd like to implicitly convert between Iterable[A] and !IndexedSeq[B] with the help of an implicit A => B in a certain scope) and already two years old, I thought I'd ask whether the problem still stands or maybe some other progress has been made, leading to a new evaluation.

BTW:
```scala
object Test {  
  implicit val i: Int = 12
 
  // implicit def fromAtoB[A, B](s: A)(implicit v: B): B = v
  // error: type mismatch;
  //  found   : java.lang.String("hallo")
  //  required: Int
  //     println("hallo": Int)
  //             ^
  //
  // But this one works.
  implicit def fromAtoB[A, B >: Int](s: A)(implicit v: B): B = v
  
  def main(args: Array[String]): Unit = {
    println("hallo": Int)
  }
}
```
