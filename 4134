It's my test code: 

{code}
		int size = 1000000;
		final Object[] objs = new Object[ size ];
		final List<Object> list = new ArrayList<Object>();

		final ScalaColls sc = new ScalaColls( size );

		for ( int i = 0; i < size; i++ ) {
			objs[i] = new Object();
			list.add( new Object() );
		}
		MeasureTime mt = new MeasureTime( 10 );
		mt.add( new ProcessForMeasuring() {
			@Override
			public void proceed() {
				boolean b;
				for ( Object obj : list ) {
					b = ( obj != null );
				}
			}
		} );
		mt.add( new ProcessForMeasuring() {
			@Override
			public void proceed() {
				boolean b;
				for ( Object obj : objs ) {
					b = ( obj != null );
				}
			}
		} );
		mt.add( new ProcessForMeasuring() {

			@Override
			public void proceed() {
				sc.withWhile();
			}
		} );
		mt.add( new ProcessForMeasuring() {

			@Override
			public void proceed() {
				sc.withForEach();
			}
		} );

		mt.print();
{code}

But I tried stupid one too. Something like

{code}
long begin = System.currentTimeMillis();
sc.withWhile();
long time = System.currentTimeMillis() - begin;
{code}

in different combinations and so on. Results were the same.
