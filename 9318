Okay, looking through all the Either code, and actually giving it some thought.

map and flatMap on projections should return the same projection type. That's because we expect map/flatMap to be chain-able. And, you know, Functor, Monad, that stuff.

filter on Either has entirely the wrong signature and basically could only ever work accidentally. Because it returns an option, future map/flatMap stuff in the chain is on the option and that's just wrong. Filter, like map and flatMap, shouldn't change the type.

A filter with the right signature (one that returns a projection) doesn't make sense as-is because there's no zero for an Either or its projections, i.e. no equivalent of an empty List, or a None. 

We can always hack in a filter that throws an exception on mismatch, but that's ugly. Or we could add a zero to Either so that Either[String, String] is Right | Left | F-You, but that's outside the normal contract of Either and frankly is better done as Option[Either[A, B]] instead.
