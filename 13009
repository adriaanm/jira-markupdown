The following case class generates the below assertion stack trace:

{code}
case class Ref[T <: T](val r : T)
{code}

However, variations on this class do not:

{code}
class Ref2[T >: T](val r : T)
class Ref3[T <: T](val r : T)
case class Ref4[T >: T](val r : T)
{code}

{code}
Exception in thread "main" java.lang.AssertionError: assertion failed: T
        at scala.Predef$$.assert(Predef.scala:96)
        at scala.tools.nsc.typechecker.Infer$$$$anonfun$$scala$$tools$$nsc$$typechecker$$Infer$$$$solvedTypes$$1.apply(Infer.scala:141)
        at scala.tools.nsc.typechecker.Infer$$$$anonfun$$scala$$tools$$nsc$$typechecker$$Infer$$$$solvedTypes$$1.apply(Infer.scala:141)
        at scala.List.foreach(List.scala:753)
        at scala.tools.nsc.typechecker.Infer$$class.scala$$tools$$nsc$$typechecker$$Infer$$$$solvedTypes(Infer.scala:141)
        at scala.tools.nsc.typechecker.Infer$$Inferencer.computeArgs$$1(Infer.scala:877)
        at scala.tools.nsc.typechecker.Infer$$Inferencer.inferConstructorInstance(Infer.scala:894)
        at scala.tools.nsc.typechecker.Typers$$Typer.adapt(Typers.scala:713)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3132)
        at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$typedApply$$1$$1.apply(Typers.scala:2427)
        at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$typedApply$$1$$1.apply(Typers.scala:2427)
        at scala.tools.nsc.typechecker.Typers$$Typer.silent(Typers.scala:574)
        at scala.tools.nsc.typechecker.Typers$$Typer.typedApply$$1(Typers.scala:2427)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:3027)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3130)
        at scala.tools.nsc.typechecker.Typers$$Typer.typedPattern(Typers.scala:3192)
        at scala.tools.nsc.typechecker.Typers$$Typer.typedCase(Typers.scala:1374)        at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$typedCases$$1.apply(Typers.scala:1396)
        at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$typedCases$$1.apply(Typers.scala:1395)
        at scala.List$$.loop$$1(List.scala:244)
        at scala.List$$.mapConserve(List.scala:261)
        at scala.tools.nsc.typechecker.Typers$$Typer.typedCases(Typers.scala:1395)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:2944)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3130)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3175)
        at scala.tools.nsc.typechecker.Typers$$Typer.transformedOrTyped(Typers.scala:3224)
        at scala.tools.nsc.typechecker.Typers$$Typer.typedDefDef(Typers.scala:1297)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:2868)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3130)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3164)
        at scala.tools.nsc.typechecker.SyntheticMethods$$class.equalsMethod$$1(SyntheticMethods.scala:184)
        at scala.tools.nsc.typechecker.SyntheticMethods$$class.addSyntheticMethods(SyntheticMethods.scala:273)
        at scala.tools.nsc.Global$$analyzer$$.addSyntheticMethods(Global.scala:261)
        at scala.tools.nsc.typechecker.Typers$$Typer.typedClassDef(Typers.scala:1020)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:2859)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3130)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3164)
        at scala.tools.nsc.typechecker.Typers$$Typer.typedStat$$1(Typers.scala:1500)
        at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$21.apply(Typers.scala:1529)
        at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$21.apply(Typers.scala:1529)
        at scala.List$$.loop$$1(List.scala:244)
        at scala.List$$.mapConserve(List.scala:261)
        at scala.tools.nsc.typechecker.Typers$$Typer.typedStats(Typers.scala:1529)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:2855)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3130)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3164)
        at scala.tools.nsc.typechecker.Analyzer$$typerFactory$$$$anon$$2.apply(Analyzer.scala:40)
        at scala.tools.nsc.Global$$GlobalPhase.applyPhase(Global.scala:245)
        at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$run$$1.apply(Global.scala:233)
        at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$run$$1.apply(Global.scala:233)
        at scala.Iterator$$class.foreach(Iterator.scala:376)
        at scala.collection.mutable.ListBuffer$$$$anon$$1.foreach(ListBuffer.scala:255)
        at scala.tools.nsc.Global$$GlobalPhase.run(Global.scala:233)
        at scala.tools.nsc.Global$$Run.compileSources(Global.scala:529)
        at scala.tools.nsc.Global$$Run.compile(Global.scala:613)
        at scala.tools.nsc.Main$$.process(Main.scala:86)
        at scala.tools.nsc.Main$$.main(Main.scala:107)
        at scala.tools.nsc.Main.main(Main.scala)
{code}

It's good that the compiler warns about the bad code, but I think
the compiler should not throw a stack trace, given that the other
variants of the code work do not throw an assertion.
