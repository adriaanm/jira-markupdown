Here is a small example on how to replicate the problem:

{code}
object Main {
  def main(args: Array[String]) {
    val s = new Extended("s")
    println(s.foo) //works

    val i = new Extended(1)
    println(i.foo) //infinite loop with StackOverflowError
  }
}

class Base[@specialized(Int) T](val t: T) { def foo() :T = t }
class Extended [@specialized(Int) T](t: T) extends Base[T](t) {
  override def foo() :T = super.foo
}
{code}

Tested on Scala.2.8.0.RC7
