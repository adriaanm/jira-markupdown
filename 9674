It has been a constant source of bugs. No one can really say with great certainty what it does. To maintain the invariant that `typecheck(reset(typecheck(t)) =~= typecheck(t)`, all sorts of finicky tricks like `TypeTree#original` are needed, and they don't always suffice. See https://groups.google.com/d/msg/scala-internals/t6cpY7fGng4/0CIfXj1e-UEJ for a recent example.

I'm exploring ways that macros can avoid the need to use resetAttrs, e.g. if they just need to splice a tree into a new context, we just need to expose `changeOwner` transformations, see: https://issues.scala-lang.org/browse/SI-5797?focusedCommentId=63969&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-63969. Once we get through the current crop of releases, I'm going to finish my resetAttrs-free version of scala-async.

See also:

scala/bug#6187
scala/bug#5464
...
