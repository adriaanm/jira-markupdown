Having continuity with Java is great, but not at the price of compromising type safety.
A good example is the use of null vs Option[A].
As a programmer get situated in Scala comfortably, he or she no longer thinks in terms of Java or other languages,
and a normal Scala would almost never use null actively (with a few exception in standard lib such as regex extraction and XML namespace).
In my opinion, having a source-level compatibility of `+` with Java doesn't buy much, and is very harmful to Scala as a language. More than once I've been bitten by unintended "Some(...)" or "None" showing up in string output.
An ideal course of action would be to deprecate any2stringadd so the compiler would start raising warnings, if not an optional compiler error would be helpful like `-no-unsafeadd`.
