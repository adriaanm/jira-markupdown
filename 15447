Copied from comment in scala/bug#3563:

A related problem (with respect to r22157) is that the definition of `TraversableLike.toStream` loops.

It is defined as:
```scala
def toStream: Stream[A] = Stream.empty[A] ++ thisCollection
```

But, the definition of `Stream.++ `is:
```scala
  def ++[...](that: TraversableOnce[B]) ... =
   if (isEmpty) that.toStream
   ...
```

IterableLike overrides toStream to be `Iterator.toStream`, so I don't know where this would show up other than a custom subclass of `Traversable`:
```scala
scala> class Empty extends Traversable[Nothing] { def foreach[T](f: Nothing => T) {} }
defined class Empty

scala> (new Empty).toStream                                                           
java.lang.StackOverflowError
        at Empty.thisCollection(<console>:5)
        at scala.collection.TraversableLike$$class.toStream(TraversableLike.scala:701)
        at Empty.toStream(<console>:5)
        at scala.collection.immutable.Stream.$$plus$$plus(Stream.scala:143)
        at scala.collection.TraversableLike$$class.toStream(TraversableLike.scala:701)
        at Empty.toStream(<console>:5)
```
