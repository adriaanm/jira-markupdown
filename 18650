This is a follow up to SI-7280.

As stated in the previous ticket, vals and vars available through an import are returned by the scope completion, but they are filtered out by Scala IDE, and not displayed to the user.

The reason the IDE filters them is because they are always marked as non-accessible.

If they can be accessed through the synthetic getters, they should not be mark non-accessible, as referencing them at the location of the completion is valid in code.

Test case:
{code:scala}
object Cont {
  val someVal = 2
  private val somePrivateVal = 3
  def longName() {}
}
 
class ImportOut {
  import Cont._
 
  def foo {
    /*_*/   // `longName`, `someVal` and `somePrivateVal` are in the scope members,
            // but `someVal` is marked as inaccessible.
  }
}
{code}
