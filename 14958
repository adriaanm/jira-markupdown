Using apache commons collections: pre-generics, and inspection of the bytecode verifies no generic signatures.  Jar can be grabbed from here:  http://apache.mirrors.redwire.net/commons/collections/binaries/commons-collections-3.2.1-bin.tar.gz

Now this source:
```scala
import org.apache.commons.collections._

object Test {
  def main(args: Array[String]): Unit = {
    val buf = BufferUtils.synchronizedBuffer(new buffer.CircularFifoBuffer)
    buf.add(new String)
  }
}
```
You can create the buffer, but you'll never be able to add anything to it through the front door, because scala says:
```scala
a.scala:6: error: type mismatch;
 found   : java.lang.String
 required: E
    buf.add(new String)
            ^
```
Obviously since "E" shouldn't exist it's not possible to cast one's element to E.  There's no way to supply a type parameter at creation.  I think the E must somehow be burbling up from the java collections classes, but I don't immediately see how.

As a kind of sick workaround, you can do this:
```scala
    (buf add _).asInstanceOf[String => Unit]("abc")
```
Behavior is the same in 2.7.7 and latest trunk.
