Gilles, am opening this ticket for you since it came up in email between martin and me and we didn't want it to slip through the cracks.  I am willing to implement it if you like but I could use a sketch of how you think I ought to go about it.

ClassManifest.scala:
{code}
    def subargs(args1: List[OptManifest[_]], args2: List[OptManifest[_]]): Boolean = {
      (args1 zip args2) forall { 
        case (x: ClassManifest[_], y: ClassManifest[_]) => x <:< y // !!! [Martin] this is wrong, need to take variance into account
        case (NoManifest, NoManifest) => true
        case _ => false
      }
    }
{code}
