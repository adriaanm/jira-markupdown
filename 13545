The problem is that for methods like the *Set* constructor a *Iterable* should be fine but one needs a *Seq*. this can result in a unneeded copy with *toSeq* created, e.g. a new *List*:
```scala
object Main extends Application
{
  import collection.Set
  import collection.immutable.Set
  
  
  val a = Set(1,2,3,4) // or any val a : Iterable[Int]
  val b = Set(a toSeq : _*) //  a toSeq ) == List(1,2,3,4)
}
```

Of course the alternative would be to create create new additional constructors for classes like *Set*, but I vote for the other solution because *Iterable* has *toSeq*..
