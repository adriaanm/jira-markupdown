This seems to be fixed under the experimental backend, GenBCode.

That backend will become the default in 2.12. We aren't making non-critical bug fixes to GenASM anymore, so I'm going to mark this as fixed for 2.12.

I'd appreciate if you could verify this under scala 2.11 compiling with `-Ybackend:GenCode`, and take a broader look at the debugger experience to check for any regressions in bytecode positions.

{noformat}
 % scalac -Ybackend:GenBCode -Ydebug -Xprint:typer sandbox/test.scala && echo ':javap -v -c Example$' | scala
...
  public void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: ldc           #16                 // String
         2: astore_2
         3: aload_2
         4: ifnull        21
         7: goto          10
        10: aload_0
        11: invokevirtual #19                 // Method foo:()V
        14: aconst_null
        15: pop
        16: aconst_null
        17: astore_2
        18: goto          3
        21: aload_0
        22: invokevirtual #22                 // Method bar:()V
        25: return
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            2      23     2     x   Ljava/lang/String;
            0      26     0  this   LExample$;
            0      26     1  args   [Ljava/lang/String;
{noformat}
