=== What steps will reproduce the problem (please be specific and use wikiformatting)? ===

bug.scala
{code}
object test {
  object A
  trait B

  object Conv {
    implicit def a2b(a: A.type): B = new B {}
  }

  import Conv._

  class Boo(a: B = A) {          // fails

    def this(a: Any, b: B = A) = // fails
      this(new B {})

    def method(b: B = A) = ()    // okay
    A: B                         // okay
  }
}
{code}

=== What is the expected behavior? ===

Compilation success.

=== What do you see instead? ===

{code}
scalac -d target/ src/main/scala/bug.scala 
src/main/scala/bug.scala:11: error: type mismatch;
 found   : test.A.type (with underlying type object test.A)
 required: test.B
  class Boo(a: B = A) {          // fails
                   ^
src/main/scala/bug.scala:13: error: type mismatch;
 found   : test.A.type (with underlying type object test.A)
 required: test.B
    def this(a: Any, b: B = A) = // fails
                            ^
two errors found
{code} 

=== Additional information ===

Source: http://stackoverflow.com/questions/4640634/weird-bug-related-to-implicit-conversions-on-default-contructor-parameters

=== What versions of the following are you using? ===
  - Scala: 2.8.1 / 2.9.0-SNAPSHOT
