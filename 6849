The varargs issue mentioned by David appears to be gone in 2.10.0

{code}
scala210
Welcome to Scala version 2.10.0-20121024-085118-2c554249fd (Java HotSpot(TM) 64-Bit Server VM, Java 1.6.0_27).
Type in expressions to have them evaluated.
Type :help for more information.

scala> class User
defined class User

scala> class Checkin
defined class Checkin

scala>   
     | type Tagged[U] = { type Tag = U }
defined type alias Tagged

scala> type @@[T, U] = T with Tagged[U] // Thanks to @retronym for suggesting this type alias
defined type alias $at$at

scala>   
     | class Tagger[U] {
     |   def apply[T](t : T) : T @@ U = t.asInstanceOf[T @@ U]
     | }
defined class Tagger

scala> def tag[U] = new Tagger[U]
tag: [U]=> Tagger[U]

scala>  
     | // Manual specialization needed here ... specializing apply above doesn't help

scala> def tag[U](i : Int) : Int @@ U = i.asInstanceOf[Int @@ U]
tag: [U](i: Int)@@[Int,U]

scala> def tag[U](l : Long) : Long @@ U = l.asInstanceOf[Long @@ U]
tag: [U](l: Long)@@[Long,U]

scala> def tag[U](d : Double) : Double @@ U = d.asInstanceOf[Double @@ U]
tag: [U](d: Double)@@[Double,U]

scala>  
     | def fetch[A](id: Int @@ A): A = null.asInstanceOf[A]
fetch: [A](id: @@[Int,A])A

scala>  
     | def tag[U](arr: Array[Int]):Array[Int @@ U] = arr.asInstanceOf[Array[Int @@ U]]
tag: [U](arr: Array[Int])Array[@@[Int,U]]

scala>  
     | tag[User](Array(3, 4, 5)).map(_.toString) 
res6: Array[String] = Array(3, 4, 5)
{code}
