The Enumeration.ValueSet type should properly implement java.io.Serializable. For example, the A class below won't  serialize correctly, while the B class will. It's difficult to spot this detail.

object Types extends Enumeration {
  val X = Value
  val Y = Value
}
class A extends java.io.Serializable {
  val types = Types.values
}
class B extends java.io.Serializable {
  val types = Set(Types.A, Types.B)
}


// A will not serialize because it contains a ValueSet

def serialize(obj: AnyRef) = {
  val baos = new java.io.ByteArrayOutputStream()
  val oos = new java.io.ObjectOutputStream(baos)
  oos.writeObject(obj)
  oos.close()
  val bais = new java.io.ByteArrayInputStream(baos.toByteArray)
  val ois = new java.io.ObjectInputStream(bais)
  val prime = ois.readObject()
  oid.close()
  prime
}

serialize(new B()) // passes
serialize(new A()) // fails
