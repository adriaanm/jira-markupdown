Dropping more elements than exist from a List or Array just produces an empty collection, but with String, it throws an exception.  I thought that I saw a report of this before, but searching the bug database for the exception, I wasn't able to find it.

{code}
scala> "foo".take(4)
res0: String = foo

scala> "foo".drop(4)
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1937)
	at scala.collection.immutable.StringOps.slice(StringOps.scala:40)
	at scala.collection.immutable.StringOps.slice(StringOps.scala:31)
	at scala.collection.IndexedSeqOptimized$$class.drop(IndexedSeqOptimized.scala:145)
	at scala.collection.immutable.StringOps.drop(StringOps.scala:31)
	at .<init>(<console>:6)
	at .<clinit>(<console>)
	at RequestResult$$.<init>(<console>:9)
	at RequestResult$$.<clinit>(<console>)
	at RequestResult$$scala_repl_result(<console>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcc...
scala> List(1,2,3).take(4)
res2: List[Int] = List(1, 2, 3)

scala> List(1,2,3).drop(4)
res3: List[Int] = List()
{code}
