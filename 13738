There seems to be an exponential growth in compilation time when type expression complexity increases linearly. The following code example takes a very long time to compile. It needs to be compiled with "-Yrecursion 10" compiler option. When changing T1 to "_4#Add[_0]" for example, the compilation time is reasonable.
{code}
object MInts {
  sealed trait MInt {
    type Add[N <: MInt] <: MInt
    type Suc <: MInt
  }

  final class _0 extends MInt {
    type Add[N <: MInt] = N
    type Suc = Succ[_0]
  }

  final class Succ[P <: MInt] extends MInt {
    type Add[N <: MInt] = P#Add[N]#Suc
    type Suc = Succ[Succ[P]]
  }

  type _1 = Succ[_0]
  type _2 = Succ[_1]
  type _3 = Succ[_2]
  type _4 = Succ[_3]
  type _5 = Succ[_4]
  type _6 = Succ[_5]
  type _7 = Succ[_6]
  type _8 = Succ[_7]
  type _9 = Succ[_8]

  // Anything above _6 increases compile time a lot
  type T1 = _9#Add[_0]
}
{code}
