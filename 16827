The following mixture of attempting a phantom-type constraint + specialization explodes at compile time:
```scala
trait C
class Foo[@specialized(Int) T, A] {
  def bar[B >: A <: C]: T = ???
}
```

With the following exception:
```scala
error: 
     while compiling:  /home/jsuereth/projects/tmp/phantom-bug.scala
       current phase:  specialize
     library version:  version 2.10.0-M2-0118-gf1c39dd981-2012-03-11
    compiler version:  version 2.10.0-M2-0118-gf1c39dd981-2012-03-11
  reconstructed args:  -Xscript Main -d /tmp/scalascript5606505759334571591.tmp

uncaught exception during compilation: scala.reflect.internal.Types$TypeError
```

Remove any one of the type bounds makes the code succeed.  Removing the @specialize annotation also makes the code succeed.
