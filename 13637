The current implementation of Collection.toArray looks like:
{code}
  def toArray[B >: A]: Array[B] = toList.toArray
{code}
While this might be elegant, this is ridiculously ineffecient. Do we need to construct a linked list in order to creat an array?

Please adopt some less elegant but more efficient algorithm, maybe something along the lines of:
{code}
  def toArray[B >: A]: Array[B] = {
    val result = new Array[B](size)
    val it = elements
    var pos = 0
    while (it.hasNext) {
      result (pos) = it.next
      pos += 1
    }
    result
  }
{code}

