This is far more insidious.   Objects are completely ignored when determining duplicates in the namespace:

{code}

object test {

  def x(i: Int) = i
  object x { def apply(i: Int) = i }
}

scala> test.x(1)
<console>:8: error: ambiguous reference to overloaded definition,
both object x in object test of type test.x.type
and  method x in object test of type (i: Int)Int
match argument types (Int)
              test.x(1)
                   ^


{code}

