By contrast, this is okay:
```scala
scala>

scala> object Test {
  sealed abstract class BarrierDirection

  object BarrierDirection {
    case object Down extends BarrierDirection {
    }

    case object Up extends BarrierDirection {
    }

  }
  import Test.BarrierDirection._
  (d1: BarrierDirection, d2: BarrierDirection) =>
    (d1, d2) match {
      case (Up, Up) | (Down, Down) => false
      case (Down, Up)              => true
      case (Up, Down)              => false
    }
}
defined module Test
```
