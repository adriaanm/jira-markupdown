{code}
scala> object Test { object scala { reflect.runtime.currentMirror } }
<console>:7: error: value reflect is not a member of object Test.scala
       object Test { object scala { reflect.runtime.currentMirror } }
                                                    ^
{code}

Here's the offending code:

{code:title=reflect/runtime/package.scala}
    def currentMirror(c: scala.reflect.macros.Context): c.Expr[universe.Mirror] = {
      import c.universe._
      val runtimeClass = c.reifyEnclosingRuntimeClass
      if (runtimeClass.isEmpty) c.abort(c.enclosingPosition, "call site does not have an enclosing class")
      val runtimeUniverse = Select(Select(Select(Ident(newTermName("scala")), newTermName("reflect")), newTermName("runtime")), newTermName("universe"))
      val currentMirror = Apply(Select(runtimeUniverse, newTermName("runtimeMirror")), List(Select(runtimeClass, newTermName("getClassLoader"))))
      c.Expr[Nothing](currentMirror)(c.WeakTypeTag.Nothing)
    }
{code}

I've seen the same problem in a few macros/compiler plugins.
