J.java:
{code}
class J {
	enum E { E1 }
	void foo(E e) { }
}
{code}

S.scala:
{code}
class S(j:J) { j.foo(J.E.E1) }
{code}

compiling separately works OK:
{code}
  ~/newbug> javac J.java
  ~/newbug> ~/scala/dists/latest/bin/scalac -classpath . S.scala
{code}

together, not:
{code}
  ~/newbug> ~/scala/dists/latest/bin/scalac J.java S.scala      
J.java:3: error: not found: type E
	void foo(E e) { }
                 ^
one error found
{code}
