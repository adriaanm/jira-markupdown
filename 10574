Actually it looks like an old, latent bug. It must be trigged by the current layout of the implicits in scope.

I can reproduce it with 2.10.3 (using the exact classpath as in your report):

{noformat}
scala-hash v2.10.3 -classpath /Users/jason/Downloads/broken/target/scala-2.11.0-SNAPSHOT/test-classes:/Users/jason/Downloads/broken/target/scala-2.11.0-SNAPSHOT/classes:/Users/jason/.ivy2/cache/org.scalatest/scalatest_2.11.0-M8/jars/scalatest_2.11.0-M8-2.1.RC1.jar:/Users/jason/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.0-M8.jar:/Users/jason/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.11.0-M8/bundles/scala-parser-combinators_2.11.0-M8-1.0.0-RC5.jar:/Users/jason/.ivy2/cache/org.scala-lang.modules/scala-xml_2.11.0-M8/bundles/scala-xml_2.11.0-M8-1.0.0-RC7.jar:/Users/jason/.ivy2/cache/org.scalacheck/scalacheck_2.11.0-M8/jars/scalacheck_2.11.0-M8-1.11.3.jar:/Users/jason/.ivy2/cache/org.scala-sbt/test-interface/jars/test-interface-1.0.jar /Users/jason/Downloads/broken/src/test/scala/Broken.scala
error: type mismatch;
 found   : Any
 required: AnyRef
Note: Any is not implicitly converted to AnyRef.  You can safely
pattern match `x: AnyRef` or cast `x.asInstanceOf[AnyRef]` to do so.
one error found
{noformat}

