The non determinism in the example above can be fixed by using the following patch:
```scala
--- a/src/scaladoc/scala/tools/nsc/doc/html/page/Template.scala
+++ b/src/scaladoc/scala/tools/nsc/doc/html/page/Template.scala
@@ -652,7 +652,7 @@ class Template(universe: doc.Universe, generator: DiagramGenerator, tpl: DocTemp
           <div class="toggleContainer block">
             <span class="toggle">Known Subclasses</span>
             <div class="subClasses hiddenContent">{
-              templatesToHtml(subs.toList.sortBy(_.name), scala.xml.Text(", "))
+              templatesToHtml(subs.toList.sortBy(_.qualifiedName.split("\\.").reverse.mkString(".")), scala.xml.Text(", "))
             }</div>
           </div>
         else NodeSeq.Empty
```
However, other sources of non-determinism exist. Here is another example, from scala/tools/nsc/settings/FscSettings.html:
```scala
613,614c613,614
<       <a id="Xexperimental:_112.s.typeforSome{val_112:ScalaSettings.this.EnableSettings[ScalaSettings.this.BooleanSetting]}"></a>
<       <a id="Xexperimental:ScalaSettings.Xexperimental._112.type.s.typeforSome{val_112:EnableSettings[BooleanSetting]}"></a>
---
>       <a id="Xexperimental:_105.s.typeforSome{val_105:ScalaSettings.this.EnableSettings[ScalaSettings.this.BooleanSetting]}"></a>
>       <a id="Xexperimental:ScalaSettings.Xexperimental._105.type.s.typeforSome{val_105:EnableSettings[BooleanSetting]}"></a>
```
Not terribly important, but it would be nice to have determinism in Scaladoc as well.
