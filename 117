I hope it's clear to everyone that the issue isn't just a theoretical one about rigor, that matters only if you have your head in the clouds. This is something that bites all Scala coders trying to write correct code, but that includes biting beginners all the time, when they are learning the language. So for example just now on IRC:
```
D: to append to a collection use :+ not +
I: ah, thanks!
I: I was following red herrings it seems
B: huh
B: required: String
I: yeah, that was what my reaction was too B. When I started looking at the documentation
  I figured the addString methods might be related, and the byte was getting converted to a Char implicitly,
  and then wanted to treat the whole thing as a String. But apparently it's something else entirely
B: ! Vector(new Foo, new Foo) + (new Foo)
multibot_:  error: type mismatch;
multibot_:   found  : Foo
multibot_:   required: String
B: not even "oh hey I think you might have meant String here", it's "REQUIRED String", wtf
```

This is just one example; I've seen versions of this exchange on #scala countless times over the years.

It gets especially confusing if someone points out or realizes that Set actually does expect + and not :+ or +: .
