it seems the problem here is in `doTypedApply`, where we first filter out alternatives with the wrong number of parameters using:

{code}
var sym = fun.symbol filter { alt =>
  isApplicableSafe(context.undetparams, followApply(pre.memberType(alt)), argtypes, pt)
{code}

which causes the alternative 
{code}
[T](xs: T*)(implicit evidence$$2: scala.reflect.ClassManifest[T])Array[T]
{code}

to be filtered out because `Array[Nothing]` is not a subtype of `Unit` (`pt`).

Since it's only an optimisation anyway, I propose to be less strict and replace `pt` by `WildcardType`.

Martin: please advise & re-assign to me 
