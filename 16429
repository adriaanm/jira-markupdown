{code}new Array(...){code}
with more than one dimension is not supported anymore:

{code}
new Array(1,1)
error: too many arguments for constructor Array: (_length: Int)Array[T]
              new Array(1,1)
              ^
{code}


But RefChecks still checks for it:

{code}
      case Apply(Select(New(tpt), name), args) 
      if (tpt.tpe.typeSymbol == ArrayClass && args.length >= 2) =>
        unit.deprecationWarning(tree.pos, 
          "new Array(...) with multiple dimensions has been deprecated; use Array.ofDim(...) instead")
        val manif = {
          var etpe = tpt.tpe
          for (_ <- args) { etpe = etpe.typeArgs.headOption.getOrElse(NoType) }
          if (etpe == NoType) {
            unit.error(tree.pos, "too many dimensions for array creation")
            Literal(Constant(null))
          } else {
            localTyper.getManifestTree(tree.pos, etpe, false)
          }
        }
        val newResult = localTyper.typedPos(tree.pos) {
          new ApplyToImplicitArgs(gen.mkMethodCall(ArrayModule, nme.ofDim, args), List(manif))
        }
        currentApplication = tree
        newResult
{code}

This looks like dead code to me.
