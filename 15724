```scala
// A.scala
trait T1
trait T2

object O1 {
  def h(x: T1) = ()
  def g() = new T1 with T2
}

// B.scala
object Test {  
  val bug = O1.h(O1.g())

  def main(args: Array[String]): Unit = ()
}
```
```scala
% scalac A.scala
% scalac B.scala
% scala Test
java.lang.NoSuchMethodError: O1$$.g()LT2;
	at Test$$.<init>(B.scala:2)
	at Test$$.<clinit>(B.scala)
	at Test.main(B.scala)
```
Naturally there's no problem if they're compiled together.

Confirmed broken in r23241 and 2.8.0.  Works correctly in 2.7.7.
