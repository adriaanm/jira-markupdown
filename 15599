Been doing some more profiling with 2.8.0.final, and found a hotspot.

Current:
```scala
  override def sizeHint(len: Int) {
    if (len > size && len >= 1) {
      val newarray = new Array[AnyRef](len)
      Array.copy(array, 0, newarray, 0, size0)
      array = newarray
    }
  }
```

array and newarray are statically known to be Array[AnyRef]. The reflective guard `srcClass.isArray && dest.getClass.isAssignableFrom(srcClass)` in Array.copy is always true. This `.isArray` call accounted for 5% of the execution time in the profiling run.

Proposed:
```scala
  override def sizeHint(len: Int) {
    if (len > size && len >= 1) {
      val newarray = new Array[AnyRef](len)
      Platform.arraycopy(array, 0, newarray, 0, size0)
      array = newarray
    }
  }
```

The doc comment for `Array.copy` still refers to boxed arrays, this should be updated.
