Adding something like this though, will generate the necessary specialization.
```scala
class Blah[@specialized (Int) T:Manifest](a:T) {
  def blah[@specialized (Int) S>:T, @specialized (Int)  W:Manifest](f:S=>W):W  =f(a) 
}
```
```scala
public int blah$mIIc$sp(scala.Function1, scala.reflect.Manifest);
  Code:
   Stack=2, Locals=3, Args_size=3
   0:	aload_1
   1:	aload_0
   2:	getfield	#26; //Field a$mcI$sp:I
   5:	invokeinterface	#44,  2; //InterfaceMethod scala/Function1.apply$mcII$sp:(I)I
   10:	ireturn
```
