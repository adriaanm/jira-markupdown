I suspect this is related to SI-3133 which showed similar symptoms.  Say you have a pair of Java classes:
{code}
public class Base {
  public class Inner {}
}

public class Derived extends Base {
  public void foo(Inner i) {}
}
{code}
If you run scalac on them with any `-make` recompilation strategy other than `all`, it complains:
{code}
$$ ~/scala/scala-2.8.0.RC1/bin/scalac -make:changed *.java
Derived.java:2: error: not found: type Inner
  public void foo(Inner i) {}
                  ^
one error found
{code}
This happens if a method in the derived class takes or returns an instance of the inner class, but not if it merely has a field of the inner type.

With `-make:all` or no `-make` option at all, scalac is happy.
