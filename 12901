The Scala code 
{code}
(x: Int) => x * 2
{code}
is translated to something like:
{code}
public final class anonfun$$1 extends /*...*/ {
    //...
    public final java.lang.Object apply(java.lang.Object);
    public final int apply(int);
    public int $$tag();
    //...
}
{code}
but calling `Method.isBridge` return `Array(false, false)`
{code}
  val cls = Function1.this.getClass
  val meths = cls.getMethods() filter { _.getName == "apply" }
  println("bridge: " + (meths map { _.isBridge }))
{code}
