running the test suite to confirm the following patch to isSubType0 does the trick:
```scala
      case (PolyType(tparams1, res1), PolyType(tparams2, res2)) =>
        (tparams1.length == tparams2.length && {
          //@M for an example of why we need to generate fresh symbols, see neg/tcpoly_ticket2101.scala
          val tpsFresh = cloneSymbols(tparams1) // @M cloneSymbols(tparams2) should be equivalent -- TODO: check
          List.forall2(tparams1, tparams2)((p1, p2) =>
          p2.info.substSym(tparams2, tpsFresh) <:< p1.info.substSym(tparams1, tpsFresh)) &&
          res1.substSym(tparams1, tpsFresh) <:< res2.substSym(tparams2, tpsFresh)
        })
```
