The semantics of the same command-line option are different, but even worse the test fails with partest but not scalatest.
{code}
% ./scalatest files/jvm/serialization.scala
Source directory is : /tmp/search/scala/test/files
Scala binaries in   : /tmp/search/scala/build/quick/bin/
Scala version is    : Scala compiler version 2.7.0.r14185-b20080228154530 -- (c) 2002-2008 LAMP/EPFL
Scalac options are  : -deprecation
Java binaries in    : /home/linuxsoft/apps/java/bin
Java runtime is     : Java HotSpot(TM) Client VM (build 1.5.0_14-b03, mixed mode, sharing)
Java options are    : -Xmx256M -Xms16M

Testing JVM backend
testing: files/jvm/serialization.scala                                [  OK  ]

All of 1 tests were successful (elapsed time: 00:00:11)
{code}
versus
{code}
% ./partest files/jvm/serialization.scala
Source directory is : /tmp/search/scala/test/files
Scala binaries in   : /tmp/search/scala/build/quick/bin
Scala version is    : Scala compiler version 2.7.0.r14185-b20080228154530 -- (c) 2002-2008 LAMP/EPFL
Scalac options are  : -deprecation
Java binaries in    : /home/linuxsoft/apps/java-1.5.0_14/jre/bin
Java runtime is     : Java HotSpot(TM) Client VM (build 1.5.0_14-b03, mixed mode, sharing)
Java options are    : -Xmx256M -Xms16M

Testing compiler (on files whose compilation should succeed)
testing: [...]/files/jvm/serialization.scala                          [  OK  ]

Testing compiler (on files whose compilation should fail)
testing: [...]/files/jvm/serialization.scala                          [FAILED]

Testing JVM backend
testing: [...]/files/jvm/serialization.scala                          [FAILED]

Testing JVM backend
testing: [...]/files/jvm/serialization.scala                          [FAILED]

Testing JVM backend
testing: [...]/files/jvm/serialization.scala                          [FAILED]

4 of 5 tests failed (elapsed time: 00:00:21)
{code}
{code}
