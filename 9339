The relevant change was a "minor tweak". Are we sure it's minor, paulp?
```scala
commit 632daed4ed
Author: Paul Phillips <paulp@improving.org>
Date:   5 months ago

    Minor tweaks in Types/Scopes.
    
    All methods to do with handling imports more uniformly and early
    filtering of symbols which cannot be imported. Also make TypeBounds
    treat a Wildcard in lower or upper bounds as an empty bound, so we
    don't see all these method signatures like
    
      def f[T >: ? <: ?]
    
    because that's not helpful.

diff --git a/src/compiler/scala/tools/nsc/typechecker/Contexts.scala b/src/compiler/scala/tools/nsc/typechecker/Contexts.scala
index dfc621d60e..78380ad054 100644
--- a/src/compiler/scala/tools/nsc/typechecker/Contexts.scala
+++ b/src/compiler/scala/tools/nsc/typechecker/Contexts.scala
@@ -1006,7 +1006,7 @@ trait Contexts { self: Analyzer =>
     }
 
     def allImportedSymbols: Iterable[Symbol] =
-      qual.tpe.members flatMap (transformImport(tree.selectors, _))
+      importableMembers(qual.tpe) flatMap (transformImport(tree.selectors, _))
```
