This is actually not a bug. The reason is that the lambda body of the eta-expansion of {{isPrime}} invokes the {{isPrime}} method, which is an instance method, so the lambda needs to capture the {{C}} instance.

The class

{code}
class C {
  def methodLift = {
    def isPrime(c: Int) = BigInt(c).isProbablePrime(1)
    val f: Int => Boolean = isPrime
    f(0)
  }
}
{code}

compiles to (with delambdafy:method, indylambda)

{code}
class C {
  def anonfun$1(i: Int) = this.isPrime$1(i)
  def isPrime$1(i: Int) = BigInt(c).isProbablePrime(1)
  def methodLift = {
    // lambda captures `this`, in order to be able to invoke the instance method `anonfun$1`
    val f = indyLambda(this, MethodHandle(anonfun$1))
    f.apply(0)
  }
}
{code}
