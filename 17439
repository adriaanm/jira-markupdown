It is not possible to overload applyDynamic because the name parameter is required to be by itself in the first parameter list:

{code:lang=java}
import language.dynamics

object J {
   val x = new X(3)

   x.call(3,9)

   class X(i: Int) extends Dynamic {
      def applyDynamic(name: String)(in: Int): Int = i + in
      def applyDynamic(name: String)(a: Int, b: Int): Int = a + b
   }
}
```scala

```
J.scala:6: error: ambiguous reference to overloaded definition,
both method applyDynamic in class X of type (name: String)(a: Int, b: Int)Int
and  method applyDynamic in class X of type (name: String)(in: Int)Int
match argument types (String)
   x.call(3,9)
   ^
{code}
