This code must be in two separate source files to reproduce the error with Scala 2.7.2-RC1
```scala
// BEGIN X.scala
object T {
  val s = V.v("7")
}
// END X.scala

// BEGIN Y.scala
sealed trait U[A]

object U {
  implicit val w: W[U] = error("")

  implicit def x[A](e: U[A]): X[U, A] = error("")
}

object V {
  def v[A](a: A)(implicit e: U[A]): Nothing = error("")
}

trait W[F[_]]

sealed trait X[F[_], A]

object X {
  def x[F[_], A](ft: F[A])(implicit f: W[F]): X[F, A] = error("")
}
// END Y.scala
```


The compiler outputs the following:
```scala
$$ scalac Y.scala && scalac X.scala
error: error while loading X, class file './X.class' is broken
(<)
error: error while loading W, class file './W.class' is broken
(<)
two errors found
```

Note that compiling the two files together does not produce the problem (though I expect the bad .class file is still being created):
```scala
$$ scala X.scala Y.scala
$$
```
