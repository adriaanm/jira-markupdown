Content of the attached file:

{code}
object NoAnnotAllowed {
  case class N[A](val n: A)
  class My[A]
  object My {
    def apply[A](a: N[A]*)            = new My[A]
	// this apply causes the last expression to fail
    def apply[A](s: String)(a: N[A]*) = new My[A]
  }
  implicit def anyToN[A](a: A): N[A] = N(a)
  implicit def seqToN[A](s: Seq[A]): Seq[N[A]] = s map (x => N(x))
  // works whether the first or  both apply signatures are present
  My(1, 2)
  // tests the second apply
  My("A")(1, 2)
  My("A")(Seq(1, 2): _*)
  // expected to work with or without the second apply
  // but works only if the second apply is omitted
  My(Seq(1, 2): _*)
}
{code}

Error message:
{code}
<console>:24: error: no `: _*' annotation allowed here
(such annotations are only allowed in arguments to *-parameters)
         My(Seq(1, 2): _*)
                     ^
{code}
