Given the following Java class:

{code}
package a;

public class A {
    int f = 42;
}
{code}

and the following Scala class:
{code}
package b

object B {

    def main(args: Array[String]) = {
        val x = new a.A()
        println(x.f)
    }
}
{code}

Then scalac accepts the program, but the JVM throws an exception at runtime:

{code}
wehr@anaehoomalu:~/tmp$$ scalac a/A.java b/B.scala 
wehr@anaehoomalu:~/tmp$$ javac a/A.java
wehr@anaehoomalu:~/tmp$$ scala b.B
java.lang.IllegalAccessError: tried to access field a.A.f from class b.B$$
        at b.B$$.main(B.scala:7)
        at b.B.main(B.scala)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at scala.tools.nsc.ObjectRunner$$$$anonfun$$run$$1.apply(ObjectRunner.scala:75)
        at scala.tools.nsc.ObjectRunner$$.withContextClassLoader(ObjectRunner.scala:49)
        at scala.tools.nsc.ObjectRunner$$.run(ObjectRunner.scala:74)
        at scala.tools.nsc.MainGenericRunner$$.main(MainGenericRunner.scala:164)
        at scala.tools.nsc.MainGenericRunner.main(MainGenericRunner.scala)
wehr@anaehoomalu:~/tmp$$ scalac -version
Scala compiler version 2.7.2.final -- Copyright 2002-2008, LAMP/EPFL
wehr@anaehoomalu:~/tmp$$ scala -version
Scala code runner version 2.7.2.final -- Copyright 2002-2008, LAMP/EPFL
{code}

Changing the visibility modifier of f in class a.A to protected yields a compile-time error (as expected):

{code}
wehr@anaehoomalu:~/tmp$$ scalac a/A.java b/B.scala
b/B.scala:7: error: variable f cannot be accessed in a.A
        println(x.f)
                  ^
one error found
{code}
