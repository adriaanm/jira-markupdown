Apologies
```scala
import java.io.Serializable

trait IData[T] extends Serializable {
  def getObject: T
  def setObject(obj: T): Unit
}

@SerialVersionUID(1L)
class Data[T <% Serializable](_obj: T) extends IData[T] {

  def this() = this(null.asInstanceOf[T])

  private var obj: T = null.asInstanceOf[T]

  if (! _obj.isInstanceOf[Serializable]) {
    throw new RuntimeException("Foo")
  }

  if (_obj != null) setObject(_obj)

  def getObject: T = obj

  def setObject(obj: T): Unit = {
    this.obj = obj
  }
}
```
But its academic. I went back to my own code (100Kloc)
and put back the type constraint, and javap no longer
had ` private final scala.Function1 evidence$$1; `.
I tried some combinations, trying to remember any 
changes made during the day, but could not get it to
generate a field for the evidence.
Sorry. But I certainly did not make it up. I am sorry
to admit that I do no know Scala well enough to 
make up the evidence field and or the 
```scala
[class=scala.Predef$$$$anon$$3] [----- field that is not serializable
```
warning message.

Close the bug report.
