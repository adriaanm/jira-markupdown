This seems to be fixed in scala 2.8 r20879. Since `T` is not in classpath, it behaves as expected.
```scala
~/tmp/scala-2.8.0.r20879-b20100214020153/bin$$ cat T.scala
trait T { private val z = new C1 }
private class C1

~/tmp/scala-2.8.0.r20879-b20100214020153/bin$$ cat C.scala
class C2 {
  def m1() { new T { } }
  def m2() { new T { } }
}

~/tmp/scala-2.8.0.r20879-b20100214020153/bin$$ ./scalac T.scala

~/tmp/scala-2.8.0.r20879-b20100214020153/bin$$ ./scalac C.scala
C.scala:2: error: not found: type T
  def m1() { new T { } }
                 ^
C.scala:3: error: not found: type T
  def m2() { new T { } }
                 ^
two errors found
```
