{code}
object Test {
  private[this] val foo: AnyRef = ???
  private[this] val bar: AnyRef {} = ???

  private[this] val res1: foo.type = foo
  private[this] val res2: bar.type = bar
}

[[syntax trees at end of                     typer]] // test.scala
package <empty> {
  object Test extends scala.AnyRef {
    def <init>(): Test.type = {
      Test.super.<init>();
      ()
    };
    private[this] val foo: AnyRef = scala.this.Predef.???;
    private[this] val bar: AnyRef = scala.this.Predef.???;
    private[this] val res1: Test.foo.type = Test.this.foo;
    private[this] val res2: Test.<refinement>.type = Test.this.bar
  }
}

{code}

See: https://github.com/scala/scala/commit/d852612c3537f2e4506dd838c719d44a3031679d and the dance around `isOmittablePrefix` / `SingletonType#safeToString`.
