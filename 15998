I think this following snippet should not compile (because the match does not contain an exhaustive set of cases): 
```scala
scala> object Enum extends Enumeration { val A, B, C = Value }
defined module Enum

scala> def foo(v : Enum.Value) = v match {
     | case Enum.B => println("B")
     | }
foo: (v: Enum.Value)Unit
```

It compiles and produces a MatchError at runtime:
```scala
scala> foo(Enum.A)
scala.MatchError: A
	at .foo(<console>:6)
	at .<init>(<console>:8)
	at .<clinit>(<console>)
	at RequestResult$$.<init>(<console>:9)
	at RequestResult$$.<clinit>(<console>)
	at RequestResult$$scala_repl_result(<console>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at scala.tools.nsc.Interpreter$$Request$$$$anonfun$$loadAndRun$$1$$$$anonfun$$apply$$18.apply(Interpreter.scala:981)
	at scala.tools.nsc.Interpreter$$Request$$$$anonfun$$loadAndRun$$1$$$$anonfun$$apply$$18.apply(Interpreter.scala:981)
	at scala.util.control.Exception$$Catch.apply(Exception.scala:79)
	at scal...
```

Using scala 2.8.1.
