I see you also reported scala/bug#9956 from randomly generated code.

re: "Does it make sense to report" this kind of thing: maybe!

In general, we don't have the resources to even investigate, yet alone fix, just any crash.

The main thing that makes a crash report valuable is *minimized*, *easy-to-read* code that triggers it. The first thing we'd do, ourselves, with any reported crash is to try to reduce it to its bare minimum essence. This, in itself, is work. And it isn't work we have time to do ourselves for just anything, so we ask that bug reporters minimize their reports themselves if at all possible.

Another thing that makes a potential report valuable is how *important* the bug you've found is. Most bug reports are filed by programmers who were doing an actual coding task, so that's evidence right there that the issue may be encountered in practice. If you're randomly generating code, we don't that have indication, so human judgment is needed to determine whether the bug will get attention (or even whether it's worth filing in the first place).

Another thing that makes a bug report valuable is information about whether the bug has been reported before. Is this really a new crash, and not just a minor variation on one we already have in JIRA? For randomly generated code, if you don't have time to determine whether the crash is new, we don't have time either.

Finally, note that in general, compiler crashes are the least serious kind of compiler bug. It's always much worse if the compiler doesn't crash, but accepts incorrect code and/or produces incorrect code. Crashing at compile time isn't good, but at least the programmer knows right away they've got a problem.

So: yes, it's possible that some valuable bug reports could come out of what you're doing. But producing those reports won't be easy — your code generator will only be doing a small fraction of the work for you.

