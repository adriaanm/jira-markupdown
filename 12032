Hey @Seth, I tried doing the following
```scala
 *  @usecase def ++[B](that: GenTraversableOnce[B]): $Coll[B]
   *    @inheritdoc
   *
   *    Example:
   *    {{{
   *      scala> val a = $Coll(1)
   *      a: $Coll[Int] = $Coll(1)
   *
   *      scala> val b = $Coll(2)
   *      b: $Coll[Int] = $Coll(2)
   *
   *      scala> val c = a ++ b
   *      c: $Coll[Int] = $Coll(1, 2)
   *
   *      scala> val d = $Coll('a')
   *      d: $Coll[Char] = $Coll(a)
   *
   *      scala> val e = c ++ d
   *      e: $Coll[AnyVal] = $Coll(1, 2, a)
   *    }}}
```

when I build scaladoc `ant docs.lib`, and locate the documentation locally, I see the following  

#### GenTraversableLike
```scala
scala> val a = `GenTraversable`(1)
a: `GenTraversable`[Int] = `GenTraversable`(1)

scala> val b = `GenTraversable`(2)
b: `GenTraversable`[Int] = `GenTraversable`(2)

scala> val c = a ++ b
c: `GenTraversable`[Int] = `GenTraversable`(1, 2)

scala> val d = `GenTraversable`('a')
d: `GenTraversable`[Char] = `GenTraversable`(a)

scala> val e = c ++ d
e: `GenTraversable`[AnyVal] = `GenTraversable`(1, 2, a)
```

#### List
```scala
scala> val a = `List`(1)
a: `List`[Int] = `List`(1)

scala> val b = `List`(2)
b: `List`[Int] = `List`(2)

scala> val c = a ++ b
c: `List`[Int] = `List`(1, 2)

scala> val d = `List`('a')
d: `List`[Char] = `List`(a)

scala> val e = c ++ d
e: `List`[AnyVal] = `List`(1, 2, a)
```

With my limited understanding, I started looking at other classes which provide examples and realized that every example that has been shown is between " { { { " and " } } } " and the code between them is not using `$Coll` to de-reference any Collection, they rather use actual Collection class.

Am I missing anything?
What is your advice?
