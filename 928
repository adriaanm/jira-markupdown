I've just run into this issue with Scala 2.8 final.  I haven't yet been able to identify *which* code in my library is causing the problem - is there a way that scalac can let us know which code is causing the issue?

java.lang.Error: ch.epfl.lamp.fjbg.JCode$$OffsetTooBigException: offset too big to fit in 16 bits: 36197
at ch.epfl.lamp.fjbg.JFieldOrMethod.writeTo(JFieldOrMethod.java:114)
at ch.epfl.lamp.fjbg.JClass.writeTo(JClass.java:315)
at scala.tools.nsc.backend.jvm.GenJVM$$BytecodeGenerator.emitClass(GenJVM.scala:141)
at scala.tools.nsc.backend.jvm.GenJVM$$BytecodeGenerator.genClass(GenJVM.scala:262)
at scala.tools.nsc.backend.jvm.GenJVM$$JvmPhase.apply(GenJVM.scala:56)
at scala.tools.nsc.backend.jvm.GenJVM$$JvmPhase$$$$anonfun$$run$$3.apply(GenJVM.scala:52)
at scala.tools.nsc.backend.jvm.GenJVM$$JvmPhase$$$$anonfun$$run$$3.apply(GenJVM.scala:52)
at scala.collection.mutable.HashMap$$$$anon$$2$$$$anonfun$$foreach$$3.apply(HashMap.scala:89)
at scala.collection.mutable.HashMap$$$$anon$$2$$$$anonfun$$foreach$$3.apply(HashMap.scala:89)
at scala.collection.Iterator$$class.foreach(Iterator.scala:631)
at scala.collection.mutable.HashTable$$$$anon$$1.foreach(HashTable.scala:161)
at scala.collection.mutable.HashTable$$class.foreachEntry(HashTable.scala:194)
at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
at scala.collection.mutable.HashMap$$$$anon$$2.foreach(HashMap.scala:89)
at scala.tools.nsc.backend.jvm.GenJVM$$JvmPhase.run(GenJVM.scala:52)
at scala.tools.nsc.Global$$Run.compileSources(Global.scala:733)
at scala.tools.nsc.Global$$Run.compileFiles(Global.scala:803)
at scala.tools.nsc.interactive.RefinedBuildManager.update0$$1(RefinedBuildManager.scala:123)
at scala.tools.nsc.interactive.RefinedBuildManager.update(RefinedBuildManager.scala:182)
at scala.tools.nsc.interactive.RefinedBuildManager.update(RefinedBuildManager.scala:92)
at scala.tools.eclipse.EclipseBuildManager.build(EclipseBuildManager.scala:120)
at scala.tools.eclipse.ScalaProject.build(ScalaProject.scala:421)
at scala.tools.eclipse.ScalaBuilder.build(ScalaBuilder.scala:87)
at org.eclipse.core.internal.events.BuildManager$$2.run(BuildManager.java:627)
at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:170)
at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:201)
at org.eclipse.core.internal.events.BuildManager$$1.run(BuildManager.java:253)
at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:256)
at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:309)
at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:341)
at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:140)
at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:238)
at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
Caused by: ch.epfl.lamp.fjbg.JCode$$OffsetTooBigException: offset too big to fit in 16 bits: 36197
at ch.epfl.lamp.fjbg.JCode.checkOffset16(JCode.java:896)
at ch.epfl.lamp.fjbg.JCode.patchAllOffset(JCode.java:975)
at ch.epfl.lamp.fjbg.JCode.freeze(JCode.java:95)
at ch.epfl.lamp.fjbg.JMethod.freeze(JMethod.java:81)
at ch.epfl.lamp.fjbg.JFieldOrMethod.writeTo(JFieldOrMethod.java:111)
... 34 more

