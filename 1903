For an ironic twist, if you're in any package other than "test", then import test._ allows def test1() to compile.  But you can't do that import in package test or you are bombarded by ambiguity errors.
{code}
./a.scala:30: error: reference to foo is ambiguous;
it is both defined in object test and imported subsequently by 
import test._
      foo(1, 2)
      ^
./a.scala:31: error: reference to foo is ambiguous;
it is both defined in object test and imported subsequently by 
import test._
      foo(1, 2, 3)
      ^
{code}
etc.
