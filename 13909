When the following program is compiled by 2.7.2-final or r16668 the compiler crashes during type checking/inferencing (stdout and stderr attached). I expected an error since a function is being used where a partial function is expected. The pattern matching on the option field seems to have something to do with it, since the Some type is mentioned in the crash report and simpler versions I tried didn't exhibit the problem.

Adding the keyword "case" before "c =>" removes the problem by making it type correct.

{code}
object Main extends Application {

    case class Foo (field : Option[String])

    val x : PartialFunction[Foo,Int] =
        {
            c => c.field match {
                case Some (s) => 42
                case None     => 99
            }
        }
        
    println (x (Foo (None))) // prints 99
    println (x (Foo (Some ("foo")))) // prints 42
        
}
{code}

