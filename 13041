I have two Java classes:
```scala
public class Par<T> {}

public class Foo {
  public Foo(Par p) {} // note the raw type
}
```

Trying to create a Foo instance in Scala with
```scala
object Main {
  new Foo(new Par)
}
```

gives a compile error:
```scala
Main.scala:2: error: no type parameters for constructor Par: ()Par[T] exist so that it can be applied to arguments ()
 --- because ---
result type Par[T] is incompatible with expected type Par
  new Foo(new Par)
```

Alternatively for
```scala
object Main {
  new Foo(new Par[Int])
}
```

I get
```scala
Main.scala:2: error: type mismatch;
 found   : Par[Int]
 required: Par
  new Foo(new Par[Int])
          ^
one error found
```


When the parameter type in Foo is changed from Par to Par<?>, the compiler bails out with a stack overflow:
```scala
Exception in thread "main" java.lang.StackOverflowError
        at scala.tools.nsc.typechecker.Infer$$class.instantiate(Infer.scala:92)
        at scala.tools.nsc.Global$$analyzer$$.instantiate(Global.scala:261)
        at scala.tools.nsc.typechecker.Infer$$class.instantiate(Infer.scala:96)
        at scala.tools.nsc.Global$$analyzer$$.instantiate(Global.scala:261)
        at scala.tools.nsc.typechecker.Infer$$class.instantiate(Infer.scala:96)
        at scala.tools.nsc.Global$$analyzer$$.instantiate(Global.scala:261)
        at scala.tools.nsc.typechecker.Infer$$class.instantiate(Infer.scala:96)
        at scala.tools.nsc.Global$$analyzer$$.instantiate(Global.scala:261)
...
```
