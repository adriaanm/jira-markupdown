There's a really funny effect that happens when someone tries to return a statement (e.g. a MemberDef) from a macro impl. Then the macro engine says:
```scala
Test.scala:8: error: type mismatch;
 found   : <notype>
 required: Any
Note that <none> extends Any, not AnyRef.
Such types can participate in value classes, but instances
cannot appear in singleton types or in reference comparisons.
  Macros.foo
         ^
one error found
```

This should be caught by the validator. Also, it would be useful if the validator could tell people that such code doesn't make sense anyway, because the expanded definition is going to be local.
