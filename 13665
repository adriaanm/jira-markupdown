```scala
trait Foo[F[_]]

object Z {
  def unapply(f: Foo[T] forSome { type T[_] }) = Some(7)
}

object D {
  def f(x: Foo[List]) = x match {
    case Z(n) => error("todo")
  }
}
```

scala.tools.nsc.symtab.Types$$NoCommonType: lub/glb of incompatible types: [_]()>: Nothing <: Any and List
        at scala.tools.nsc.symtab.Types$$$$anonfun$$matchingBounds$$1.apply(Types.scala:4236)
        at scala.tools.nsc.symtab.Types$$$$anonfun$$matchingBounds$$1.apply(Types.scala:4232)
        at scala.List.map(List.scala:798)
        at scala.tools.nsc.symtab.Types$$class.matchingBounds(Types.scala:4232)
        at scala.tools.nsc.symtab.Types$$class.lub0$$1(Types.scala:3963)
        at scala.tools.nsc.symtab.Types$$class.lub(Types.scala:4036)
        at scala.tools.nsc.symtab.SymbolTable.lub(SymbolTable.scala:12)
        at scala.tools.nsc.symtab.Types$$class.lub(Types.scala:3954)
        at scala.tools.nsc.symtab.SymbolTable.lub(SymbolTable.scala:12)
        at scala.tools.nsc.symtab.Types$$class.solveOne$$1(Types.scala:3795)
        at scala.tools.nsc.symtab.Types$$$$anonfun$$solve$$1.apply(Types.scala:3800)
        at scala.tools.nsc.symtab.Types$$$$anonfun$$solve$$1.apply(Types.scala:3799)
        at scala.List.foreach(List.scala:827)
        at scala.tools.nsc.symtab.Types$$class.solve(Types.scala:3799)
        at scala.tools.nsc.symtab.SymbolTable.solve(SymbolTable.scala:12)
        at scala.tools.nsc.symtab.Types$$ExistentialType.withTypeVars(Types.scala:1718)
        at scala.tools.nsc.symtab.Types$$class.isSubType0(Types.scala:3617)
        at scala.tools.nsc.symtab.Types$$class.isSubType(Types.scala:3483)
        at scala.tools.nsc.symtab.SymbolTable.isSubType(SymbolTable.scala:12)
        at scala.tools.nsc.symtab.Types$$Type.$$less$$colon$$less(Types.scala:490)
        at scala.tools.nsc.matching.ParallelMatching$$RepFactory$$$$anonfun$$17.apply(ParallelMatching.scala:1098)
        at scala.tools.nsc.matching.ParallelMatching$$RepFactory$$$$anonfun$$17.apply(ParallelMatching.scala:1010)
        at scala.List.flatMap(List.scala:1118)
        at scala.tools.nsc.matching.ParallelMatching$$RepFactory.make(ParallelMatching.scala:1009)
        at scala.tools.nsc.matching.ParallelMatching$$RepFactory.make(ParallelMatching.scala:883)
        at scala.tools.nsc.matching.ParallelMatching$$class.initRep(ParallelMatching.scala:1334)
        at scala.tools.nsc.transform.ExplicitOuter.initRep(ExplicitOuter.scala:19)
        at scala.tools.nsc.matching.TransMatcher$$class.handlePattern(TransMatcher.scala:223)
        at scala.tools.nsc.transform.ExplicitOuter.handlePattern(ExplicitOuter.scala:19)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transform(ExplicitOuter.scala:473)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transform$$5.apply(Trees.scala:1295)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transform$$5.apply(Trees.scala:1294)
        at scala.tools.nsc.ast.Trees$$Transformer.atOwner(Trees.scala:1410)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:33)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:27)
        at scala.tools.nsc.ast.Trees$$Transformer.transform(Trees.scala:1293)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.transform(TypingTransformers.scala:46)
        at scala.tools.nsc.transform.ExplicitOuter$$OuterPathTransformer.transform(ExplicitOuter.scala:207)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transform(ExplicitOuter.scala:365)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transformStats$$1.apply(Trees.scala:1404)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transformStats$$1.apply(Trees.scala:1402)
        at scala.List$$.loop$$1(List.scala:293)
        at scala.List$$.mapConserve(List.scala:310)
        at scala.tools.nsc.ast.Trees$$Transformer.transformStats(Trees.scala:1402)
        at scala.tools.nsc.ast.Trees$$Transformer.transform(Trees.scala:1310)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.scala$$tools$$nsc$$transform$$TypingTransformers$$TypingTransformer$$$$super$$transform(TypingTransformers.scala:44)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer$$$$anonfun$$transform$$1.apply(TypingTransformers.scala:44)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer$$$$anonfun$$transform$$1.apply(TypingTransformers.scala:44)
        at scala.tools.nsc.ast.Trees$$Transformer.atOwner(Trees.scala:1410)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:33)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:27)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.transform(TypingTransformers.scala:44)
        at scala.tools.nsc.transform.ExplicitOuter$$OuterPathTransformer.transform(ExplicitOuter.scala:207)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transform(ExplicitOuter.scala:345)
        at scala.tools.nsc.ast.Trees$$Transformer.transformTemplate(Trees.scala:1388)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transform$$2.apply(Trees.scala:1282)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transform$$2.apply(Trees.scala:1282)
        at scala.tools.nsc.ast.Trees$$Transformer.atOwner(Trees.scala:1410)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:33)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:27)
        at scala.tools.nsc.ast.Trees$$Transformer.transform(Trees.scala:1281)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.transform(TypingTransformers.scala:46)
        at scala.tools.nsc.transform.ExplicitOuter$$OuterPathTransformer.transform(ExplicitOuter.scala:207)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transform(ExplicitOuter.scala:497)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transformStats$$1.apply(Trees.scala:1404)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transformStats$$1.apply(Trees.scala:1402)
        at scala.List$$.loop$$1(List.scala:293)
        at scala.List$$.mapConserve(List.scala:310)
        at scala.tools.nsc.ast.Trees$$Transformer.transformStats(Trees.scala:1402)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transform$$1.apply(Trees.scala:1278)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transform$$1.apply(Trees.scala:1278)
        at scala.tools.nsc.ast.Trees$$Transformer.atOwner(Trees.scala:1410)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:33)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:27)
        at scala.tools.nsc.ast.Trees$$Transformer.transform(Trees.scala:1277)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.transform(TypingTransformers.scala:46)
        at scala.tools.nsc.transform.ExplicitOuter$$OuterPathTransformer.transform(ExplicitOuter.scala:207)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transform(ExplicitOuter.scala:497)
        at scala.tools.nsc.ast.Trees$$Transformer.transformUnit(Trees.scala:1405)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.scala$$tools$$nsc$$transform$$ExplicitOuter$$ExplicitOuterTransformer$$$$super$$transformUnit(ExplicitOuter.scala:507)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer$$$$anonfun$$transformUnit$$1.apply(ExplicitOuter.scala:507)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer$$$$anonfun$$transformUnit$$1.apply(ExplicitOuter.scala:507)
        at scala.tools.nsc.symtab.SymbolTable.atPhase(SymbolTable.scala:105)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transformUnit(ExplicitOuter.scala:507)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transformUnit(ExplicitOuter.scala:276)
        at scala.tools.nsc.transform.Transform$$Phase.apply(Transform.scala:30)
        at scala.tools.nsc.Global$$GlobalPhase.applyPhase(Global.scala:257)
        at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$run$$1.apply(Global.scala:243)
        at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$run$$1.apply(Global.scala:243)
        at scala.Iterator$$class.foreach(Iterator.scala:395)
        at scala.collection.mutable.ListBuffer$$$$anon$$1.foreach(ListBuffer.scala:266)
        at scala.tools.nsc.Global$$GlobalPhase.run(Global.scala:243)
        at scala.tools.nsc.Global$$Run.compileSources(Global.scala:556)
        at scala.tools.nsc.Global$$Run.compile(Global.scala:641)
        at scala.tools.nsc.Main$$.process(Main.scala:84)
        at scala.tools.nsc.Main$$.main(Main.scala:98)
        at scala.tools.nsc.Main.main(Main.scala)
exception when transforming def f(x: Foo[List]): Nothing = x match {
  case Z.unapply(<unapply-selector>) <unapply> ((n @ _)) => scala.this.Predef.error("todo")
}
exception when transforming java.lang.Object with ScalaObject {
  def this(): object D = {
    D.super.this();
    ()
  };
  def f(x: Foo[List]): Nothing = x match {
    case Z.unapply(<unapply-selector>) <unapply> ((n @ _)) => scala.this.Predef.error("todo")
  }
}
exception when transforming final class D extends java.lang.Object with ScalaObject {
  def this(): object D = {
    D.super.this();
    ()
  };
  def f(x: Foo[List]): Nothing = x match {
    case Z.unapply(<unapply-selector>) <unapply> ((n @ _)) => scala.this.Predef.error("todo")
  }
}
exception when transforming package <empty> {
  abstract trait Foo[F[_ >: Nothing <: Any] >: [_]Nothing <: [_]Any] extends java.lang.Object;
  final class Z extends java.lang.Object with ScalaObject {
    def this(): object Z = {
      Z.super.this();
      ()
    };
    def unapply(f: Foo[T[_]] forSome { type T[_]<: ()>: Nothing <: Any }): Some[Int] = new Some[Int](7)
  };
  final class D extends java.lang.Object with ScalaObject {
    def this(): object D = {
      D.super.this();
      ()
    };
    def f(x: Foo[List]): Nothing = x match {
      case Z.unapply(<unapply-selector>) <unapply> ((n @ _)) => scala.this.Predef.error("todo")
    }
  }
}
error: fatal error: lub/glb of incompatible types: [_]()>: Nothing <: Any and List
mtony@gonzales:/tmp$$ rm *.class
mtony@gonzales:/tmp$$ scalac Foo.scala
scala.tools.nsc.symtab.Types$$NoCommonType: lub/glb of incompatible types: [_]()>: Nothing <: Any and List
        at scala.tools.nsc.symtab.Types$$$$anonfun$$matchingBounds$$1.apply(Types.scala:4236)
        at scala.tools.nsc.symtab.Types$$$$anonfun$$matchingBounds$$1.apply(Types.scala:4232)
        at scala.List.map(List.scala:798)
        at scala.tools.nsc.symtab.Types$$class.matchingBounds(Types.scala:4232)
        at scala.tools.nsc.symtab.Types$$class.lub0$$1(Types.scala:3963)
        at scala.tools.nsc.symtab.Types$$class.lub(Types.scala:4036)
        at scala.tools.nsc.symtab.SymbolTable.lub(SymbolTable.scala:12)
        at scala.tools.nsc.symtab.Types$$class.lub(Types.scala:3954)
        at scala.tools.nsc.symtab.SymbolTable.lub(SymbolTable.scala:12)
        at scala.tools.nsc.symtab.Types$$class.solveOne$$1(Types.scala:3795)
        at scala.tools.nsc.symtab.Types$$$$anonfun$$solve$$1.apply(Types.scala:3800)
        at scala.tools.nsc.symtab.Types$$$$anonfun$$solve$$1.apply(Types.scala:3799)
        at scala.List.foreach(List.scala:827)
        at scala.tools.nsc.symtab.Types$$class.solve(Types.scala:3799)
        at scala.tools.nsc.symtab.SymbolTable.solve(SymbolTable.scala:12)
        at scala.tools.nsc.symtab.Types$$ExistentialType.withTypeVars(Types.scala:1718)
        at scala.tools.nsc.symtab.Types$$class.isSubType0(Types.scala:3617)
        at scala.tools.nsc.symtab.Types$$class.isSubType(Types.scala:3483)
        at scala.tools.nsc.symtab.SymbolTable.isSubType(SymbolTable.scala:12)
        at scala.tools.nsc.symtab.Types$$Type.$$less$$colon$$less(Types.scala:490)
        at scala.tools.nsc.matching.ParallelMatching$$RepFactory$$$$anonfun$$17.apply(ParallelMatching.scala:1098)
        at scala.tools.nsc.matching.ParallelMatching$$RepFactory$$$$anonfun$$17.apply(ParallelMatching.scala:1010)
        at scala.List.flatMap(List.scala:1118)
        at scala.tools.nsc.matching.ParallelMatching$$RepFactory.make(ParallelMatching.scala:1009)
        at scala.tools.nsc.matching.ParallelMatching$$RepFactory.make(ParallelMatching.scala:883)
        at scala.tools.nsc.matching.ParallelMatching$$class.initRep(ParallelMatching.scala:1334)
        at scala.tools.nsc.transform.ExplicitOuter.initRep(ExplicitOuter.scala:19)
        at scala.tools.nsc.matching.TransMatcher$$class.handlePattern(TransMatcher.scala:223)
        at scala.tools.nsc.transform.ExplicitOuter.handlePattern(ExplicitOuter.scala:19)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transform(ExplicitOuter.scala:473)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transform$$5.apply(Trees.scala:1295)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transform$$5.apply(Trees.scala:1294)
        at scala.tools.nsc.ast.Trees$$Transformer.atOwner(Trees.scala:1410)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:33)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:27)
        at scala.tools.nsc.ast.Trees$$Transformer.transform(Trees.scala:1293)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.transform(TypingTransformers.scala:46)
        at scala.tools.nsc.transform.ExplicitOuter$$OuterPathTransformer.transform(ExplicitOuter.scala:207)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transform(ExplicitOuter.scala:365)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transformStats$$1.apply(Trees.scala:1404)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transformStats$$1.apply(Trees.scala:1402)
        at scala.List$$.loop$$1(List.scala:293)
        at scala.List$$.mapConserve(List.scala:310)
        at scala.tools.nsc.ast.Trees$$Transformer.transformStats(Trees.scala:1402)
        at scala.tools.nsc.ast.Trees$$Transformer.transform(Trees.scala:1310)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.scala$$tools$$nsc$$transform$$TypingTransformers$$TypingTransformer$$$$super$$transform(TypingTransformers.scala:44)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer$$$$anonfun$$transform$$1.apply(TypingTransformers.scala:44)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer$$$$anonfun$$transform$$1.apply(TypingTransformers.scala:44)
        at scala.tools.nsc.ast.Trees$$Transformer.atOwner(Trees.scala:1410)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:33)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:27)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.transform(TypingTransformers.scala:44)
        at scala.tools.nsc.transform.ExplicitOuter$$OuterPathTransformer.transform(ExplicitOuter.scala:207)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transform(ExplicitOuter.scala:345)
        at scala.tools.nsc.ast.Trees$$Transformer.transformTemplate(Trees.scala:1388)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transform$$2.apply(Trees.scala:1282)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transform$$2.apply(Trees.scala:1282)
        at scala.tools.nsc.ast.Trees$$Transformer.atOwner(Trees.scala:1410)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:33)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:27)
        at scala.tools.nsc.ast.Trees$$Transformer.transform(Trees.scala:1281)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.transform(TypingTransformers.scala:46)
        at scala.tools.nsc.transform.ExplicitOuter$$OuterPathTransformer.transform(ExplicitOuter.scala:207)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transform(ExplicitOuter.scala:497)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transformStats$$1.apply(Trees.scala:1404)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transformStats$$1.apply(Trees.scala:1402)
        at scala.List$$.loop$$1(List.scala:293)
        at scala.List$$.mapConserve(List.scala:310)
        at scala.tools.nsc.ast.Trees$$Transformer.transformStats(Trees.scala:1402)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transform$$1.apply(Trees.scala:1278)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transform$$1.apply(Trees.scala:1278)
        at scala.tools.nsc.ast.Trees$$Transformer.atOwner(Trees.scala:1410)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:33)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:27)
        at scala.tools.nsc.ast.Trees$$Transformer.transform(Trees.scala:1277)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.transform(TypingTransformers.scala:46)
        at scala.tools.nsc.transform.ExplicitOuter$$OuterPathTransformer.transform(ExplicitOuter.scala:207)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transform(ExplicitOuter.scala:497)
        at scala.tools.nsc.ast.Trees$$Transformer.transformUnit(Trees.scala:1405)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.scala$$tools$$nsc$$transform$$ExplicitOuter$$ExplicitOuterTransformer$$$$super$$transformUnit(ExplicitOuter.scala:507)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer$$$$anonfun$$transformUnit$$1.apply(ExplicitOuter.scala:507)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer$$$$anonfun$$transformUnit$$1.apply(ExplicitOuter.scala:507)
        at scala.tools.nsc.symtab.SymbolTable.atPhase(SymbolTable.scala:105)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transformUnit(ExplicitOuter.scala:507)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transformUnit(ExplicitOuter.scala:276)
        at scala.tools.nsc.transform.Transform$$Phase.apply(Transform.scala:30)
        at scala.tools.nsc.Global$$GlobalPhase.applyPhase(Global.scala:257)
        at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$run$$1.apply(Global.scala:243)
        at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$run$$1.apply(Global.scala:243)
        at scala.Iterator$$class.foreach(Iterator.scala:395)
        at scala.collection.mutable.ListBuffer$$$$anon$$1.foreach(ListBuffer.scala:266)
        at scala.tools.nsc.Global$$GlobalPhase.run(Global.scala:243)
        at scala.tools.nsc.Global$$Run.compileSources(Global.scala:556)
        at scala.tools.nsc.Global$$Run.compile(Global.scala:641)
        at scala.tools.nsc.Main$$.process(Main.scala:84)
        at scala.tools.nsc.Main$$.main(Main.scala:98)
        at scala.tools.nsc.Main.main(Main.scala)
exception when transforming def f(x: Foo[List]): Nothing = x match {
  case Z.unapply(<unapply-selector>) <unapply> ((n @ _)) => scala.this.Predef.error("todo")
}
exception when transforming java.lang.Object with ScalaObject {
  def this(): object D = {
    D.super.this();
    ()
  };
  def f(x: Foo[List]): Nothing = x match {
    case Z.unapply(<unapply-selector>) <unapply> ((n @ _)) => scala.this.Predef.error("todo")
  }
}
exception when transforming final class D extends java.lang.Object with ScalaObject {
  def this(): object D = {
    D.super.this();
    ()
  };
  def f(x: Foo[List]): Nothing = x match {
    case Z.unapply(<unapply-selector>) <unapply> ((n @ _)) => scala.this.Predef.error("todo")
  }
}
exception when transforming package <empty> {
  abstract trait Foo[F[_ >: Nothing <: Any] >: [_]Nothing <: [_]Any] extends java.lang.Object;
  final class Z extends java.lang.Object with ScalaObject {
    def this(): object Z = {
      Z.super.this();
      ()
    };
    def unapply(f: Foo[T[_]] forSome { type T[_]<: ()>: Nothing <: Any }): Some[Int] = new Some[Int](7)
  };
  final class D extends java.lang.Object with ScalaObject {
    def this(): object D = {
      D.super.this();
      ()
    };
    def f(x: Foo[List]): Nothing = x match {
      case Z.unapply(<unapply-selector>) <unapply> ((n @ _)) => scala.this.Predef.error("todo")
    }
  }
}
error: fatal error: lub/glb of incompatible types: [_]()>: Nothing <: Any and List
