There isn't a problem per se with giving it an Ordering.  Although the trac ticket says "List" and the example says "Seq".  The problem is only in how deftly the request illustrates the cost of Ordering not being contravariant.

So I can give one to Seq, and the whole implementation is a glossed over identity function using the existing ordering on Iterables.
{code}
implicit def Seq[T: Ordering] : Ordering[Seq[T]] =
  Ordering[Iterable[T]] on ((xs: Seq[T]) => xs)
{code}
And then I can give one to List, and there's captain identity again.
{code}
implicit def List[T: Ordering] : Ordering[List[T]] =
  Ordering[Iterable[T]] on ((xs: List[T]) => xs)
{code}
So I can do it, but the implementation might appear to the casual viewer as a cry for help.
