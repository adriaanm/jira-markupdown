Compiler throws an error trying to compile the declaration line of a scala subclass of a java super class.
```
[ant:scalac] java.lang.Error: Unexpected tree in genLoad: DynamicBooleanProperty.super/class scala.reflect.generic.Trees$Super at: source-/Users/gorzell/dev/git/oss/archaius-gorzell/archaius-scala/src/main/scala/com/netflix/config/scala/DynamicBooleanProperty.scala,line-8,offset=105
[ant:scalac] 	at scala.tools.nsc.symtab.SymbolTable.abort(SymbolTable.scala:34)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.scala$tools$nsc$backend$icode$GenICode$ICodePhase$$genLoad(GenICode.scala:1126)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase$$anonfun$genLoadArguments$1.apply(GenICode.scala:1226)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase$$anonfun$genLoadArguments$1.apply(GenICode.scala:1224)
[ant:scalac] 	at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:111)
[ant:scalac] 	at scala.collection.immutable.List.foldLeft(List.scala:45)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.genLoadArguments(GenICode.scala:1224)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.scala$tools$nsc$backend$icode$GenICode$ICodePhase$$genLoad(GenICode.scala:924)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.genLoadQualifier(GenICode.scala:1175)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.scala$tools$nsc$backend$icode$GenICode$ICodePhase$$genLoad(GenICode.scala:921)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.scala$tools$nsc$backend$icode$GenICode$ICodePhase$$genStat(GenICode.scala:174)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase$$anonfun$genStat$1.apply(GenICode.scala:143)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase$$anonfun$genStat$1.apply(GenICode.scala:143)
[ant:scalac] 	at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:111)
[ant:scalac] 	at scala.collection.immutable.List.foldLeft(List.scala:45)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.genStat(GenICode.scala:143)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.scala$tools$nsc$backend$icode$GenICode$ICodePhase$$genLoad(GenICode.scala:1052)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.gen(GenICode.scala:114)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase$$anonfun$gen$1.apply(GenICode.scala:69)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase$$anonfun$gen$1.apply(GenICode.scala:69)
[ant:scalac] 	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)
[ant:scalac] 	at scala.collection.immutable.List.foreach(List.scala:45)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.gen(GenICode.scala:69)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.gen(GenICode.scala:136)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.gen(GenICode.scala:88)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase$$anonfun$gen$1.apply(GenICode.scala:69)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase$$anonfun$gen$1.apply(GenICode.scala:69)
[ant:scalac] 	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)
[ant:scalac] 	at scala.collection.immutable.List.foreach(List.scala:45)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.gen(GenICode.scala:69)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.gen(GenICode.scala:79)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.gen(GenICode.scala:65)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.apply(GenICode.scala:61)
[ant:scalac] 	at scala.tools.nsc.Global$GlobalPhase.applyPhase(Global.scala:329)
[ant:scalac] 	at scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:297)
[ant:scalac] 	at scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:297)
[ant:scalac] 	at scala.collection.Iterator$class.foreach(Iterator.scala:660)
[ant:scalac] 	at scala.collection.mutable.ListBuffer$$anon$1.foreach(ListBuffer.scala:316)
[ant:scalac] 	at scala.tools.nsc.Global$GlobalPhase.run(Global.scala:297)
[ant:scalac] 	at scala.tools.nsc.backend.icode.GenICode$ICodePhase.run(GenICode.scala:54)
[ant:scalac] 	at scala.tools.nsc.Global$Run.compileSources(Global.scala:953)
[ant:scalac] 	at scala.tools.nsc.Global$Run.compile(Global.scala:1038)
[ant:scalac] 	at scala.tools.ant.Scalac.executeInternal(Scalac.scala:629)
[ant:scalac] 	at scala.tools.ant.Scalac.execute(Scalac.scala:577)
```

Java Class
```java
public class DynamicStringProperty extends PropertyWrapper<String> {

    DynamicStringProperty(String propName, String defaultValue) {
        super(propName, defaultValue);
    }

    /**
     * Get the current value from the underlying DynamicProperty
     */
    public String get() {
        return prop.getString(defaultValue);
    }

    @Override
    public String getValue() {
        return get();
    }
}
```

Scala Class:
```scala
class DynamicStringProperty(property: String, defaultVal: String)
  extends com.netflix.config.DynamicStringProperty(property, defaultVal) {

  def apply(): Option[String] = Option(get())
}
```
