It's a consistent annoyance that there is no in-place (i.e. mutating) "filter" for mutable collections (or at least none that I can find!). Where one has a predicate, the best I can do is:
{code}
    shrinkable --= (shrinkable.view filter pred)
{code}

I think Shrinkable should contain one extra method:
{code}
    def shrink(p : A => Boolean) : this.type
{code}
The previous code then becomes the much cleaner and clearer:
{code}
    shrinkable shrink pred
{code}

