Indeed, there aren't perfect solution with this interface. A sensible interface for serialization when closures are involved is a hard problem â€” in fact, it's one of the problems that [~heathermiller] [~hmiller] (what's the right account?) has been working on with [spores](
http://docs.scala-lang.org/sips/pending/spores.html). Spores would solve the problem I described earlier:

> But basically, the current implementation is a view and can't be made Serializable safely, because closures as a rule can't be serialized or might be hugely expensive.

by giving the programmer control over what gets in a closure. Yes, that's annoying, but things can't be perfect.
Hence, I suspect one should just pick some (imperfect) solution here, and try to design a proper spore-based interface as a proper fix.
But now that I pointed out the connection, maybe Heather can weigh in with her opinion?

[Here's](https://github.com/heathermiller/spores) the current implementation of spores.
(Sorry I can't be bothered to relearn JIRA's link syntax).

In a perfect world, the type system could maybe distinguish between serializable and not serializable map values, depending on whether all involved closures are serializable. But this seems a follow-up research project, if it's actually plausible at all.
