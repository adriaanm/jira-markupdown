Can I reopen the ticket?

I have the same error message:

Exception "java.lang.IllegalAccessError: tried to access method scala.$$colon$$colon.hd()Ljava/lang/Object; from class org.scalacheck.Commands$$class" raised on argument generation. (scalacheckCommands.scala:9).

I am using specs-1.1, scalacheck-1.1, scala-library-2.6.1 and the following spec:
```scala
package org.specs
import org.specs.runner._
import org.specs.matcher._
import scalacheck._
import scalacheck.Prop
import org.specs.matcher.ScalacheckParameters._

// run with
// java -cp specs-1.1.jar;scalacheck-1.1.jar;scala-library-2.6.1.jar org.specs.scalacheckRunner


object scalacheckRunner extends ConsoleRunner(scalacheckCommands)
object scalacheckCommands extends Specification {
   def pass(implicit params: Parameters) = new Matcher[Prop](){
     def apply(p: => Prop) = checkProperty(p)(params)
   }
  "the scalacheck commands" should {
    "be integrated with specs" in  {
       Counter.commandsProp must pass
    } 
  } 
}

object Counter extends org.scalacheck.Commands {

  type S = Int

  private var counter: Counter = null

  protected def initialState: Int = {
    counter = new Counter(0)
    counter.n
  }

  case class Inc extends Command {
    def apply(s: Int) = counter.inc
    def nextState(s: Int) = s+1
    override def postCondition(s: Int, result: Any) = counter.n == s+1
  }

  case class Dec extends Command {
    def apply(s: Int) = counter.dec
    def nextState(s: Int) = s-1
    override def postCondition(s: Int, result: Any) = counter.n == s-1
  }

  def genCommand(s: Int) = org.scalacheck.Gen.elements(Inc, Dec)
}

class Counter(var n: Int) {
  private var i = false;
  private var x = 0;

  def inc = {
    i = true
    x = 0
    n += 1
  }

  def dec = {
    if(i) x += 1
    if(x != 5) n -= 1
  }
}
```
