It does something sensible for end users in javac.  It does not appear to do the same thing for scalac, which is why it should be hidden behind -X or -Y.

a/A.scala:
```scala
package a
trait A {
   def x: a.B
}
```

a/B.scala:
```scala
package a

class B {
        val x = 3
}
```

Run:
```scala
$ scalac -sourcepath . a/A.scala 
a/A.scala:4: error: type B is not a member of package a
	def x: a.B
                 ^
one error found
```

It doesn't find a/B.scala like javac would.  This is why the original report quoted:
```
In fact, I don't believe there is a good usecase for it, except compiling the standard library.
```
