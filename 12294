Here's another example which might be in line with [~apm]'s question,
```
scala> trait Foo ; object Foo { implicit val fi: Int = 23 }
defined trait Foo
defined object Foo

scala> type Elim[T, U] = T
defined type alias Elim

scala> type Blah = Elim[Int, Foo]
defined type alias Blah

scala> implicitly[Blah]
<console>:16: error: could not find implicit value for parameter e: Blah
       implicitly[Blah]
                 ^

scala> implicitly[Elim[Int, Foo]]
<console>:15: error: could not find implicit value for parameter e: Elim[Int,Foo]
       implicitly[Elim[Int, Foo]]
                 ^

scala>
```

I think an argument could be made that "the parts of its expansion" should bring `fi` into scope in either or both of these cases.
