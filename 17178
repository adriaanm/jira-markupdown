isModule always seems to return false:
```scala
scala> import reflect.runtime.universe._
import reflect.runtime.universe._

scala> object Foo
defined module Foo

scala> typeOf[Foo.type]
res0: reflect.runtime.universe.Type = Foo.type

scala> res0.typeSymbol.isModule
res1: Boolean = false

scala> res0.widen.typeSymbol.isModule
res2: Boolean = false

scala> res0.underlying.typeSymbol.isModule
res3: Boolean = false

scala> res0.erasure.typeSymbol.isModule
res4: Boolean = false
```

It only seems to be possible to get it to return true by reaching into the innards of the compiler:
```scala
scala> res1.getClass
res3: Class[_ <: reflect.runtime.universe.Symbol] = class scala.reflect.internal.Symbols$ModuleClassSymbol

scala> res1.isModuleClass
<console>:14: error: value isModuleClass is not a member of reflect.runtime.universe.Symbol
              res1.isModuleClass
                   ^

scala> res1.asInstanceOf[scala.tools.nsc.Global#Symbol].isModuleClass
res5: Boolean = true
```
