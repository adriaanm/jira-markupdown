Minimization of a sort:

{code}
import $line3.$read.INSTANCE.$iw.$iw.D;
val $line3$read = $line3.$read.INSTANCE;
import $line3$read.$iw.$iw.d;
val x: D = d
{code}
or
{code}
package badinterp {

  class read { case class D(i: Int) }
  object read { val instance = new read }

  object Test extends App {
    import badinterp.read.instance.D
    val instance = badinterp.read.instance
    //val instance: read.instance.type = read.instance  // works
    val x: D = instance.D(42)
    Console println x
  }
}
{code}
