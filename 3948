Replying to [comment:2 dragos]:
> I only see the crash with the current version of scalac. Unfortunately I can't find a way to reproduce it with the compiler alone. It must be some of the wrapper code/preprocessing in the REPL that confuses scalac. The immediate problem is an invalid type for the evidence parameter, but I can't make it happen outside the REPL. Paul, since you're much more familiar with that, can you please see what's the code snippet that triggers it? (I temporarily reassign this to you)

I'll take a look at it, but FYI both behaviors still exist in r22178:
```scala
[paulp@leaf 3376]$$ scalac28 a.scala 
[paulp@leaf 3376]$$ scala28
Welcome to Scala version 2.8.0.r22178-b20100606152801 (Java HotSpot(TM) 64-Bit Server VM, Java 1.6.0_20).
Type in expressions to have them evaluated.
Type :help for more information.

scala> val m = new M[Int]()
error: object M$$mcD$$sp is defined twice
error: object M$$mcF$$sp is defined twice
error: object M$$mcL$$sp is defined twice
error: object M$$mcI$$sp is defined twice
error: object M$$mcC$$sp is defined twice
error: object M$$mcS$$sp is defined twice
error: object M$$mcB$$sp is defined twice
error: object M$$mcZ$$sp is defined twice
error: object M$$mcV$$sp is defined twice

scala> val m = new M[Int]()
m: M[Int] = <function1>
```
