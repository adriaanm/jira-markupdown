First, thanks for your patch.

I am aware that thread-specific properties such as the context class loader are not correctly maintained over runs of a single actor, for the reasons that you mention.

However, I did some experiments with your patch (and variations of it), and it turns out that adding support for access control contexts has a major impact on performance: running the {{message.scala}} example (in {{docs/examples/actors}} in the dist) results in a slow-down of a factor of 2! (Running on Sun's 1.6 JVM.)

Since actors are being used for highly performance-sensitive applications, I conclude that putting the additional bookkeeping directly into [https://lampsvn.epfl.ch/trac/scala/browser/scala/branches/2.7.1/src/actors/scala/actors/Reaction.scala scala.actors.Reaction] is a bad idea. Instead, it would be better to define subclasses of {{scala.actors.Actor}} that have this additional functionality. Currently, this is difficult to do; therefore, we should have a more modular architecture that let's you customize actor executions in ways such as what you are proposing.
