Fascinating! As you know, it compiles ok on 2.11.8,.... *except* when you add `-Xprint:typer`! (In the example below I added -Ydebug for a better error message, but it's otherwise not involved.)

This indicates to me it used to compile due to a latent bug in the old handling of fields. It still doesn't explain why it compiles on Dotty. Still investigating that avenue.

{code}
âžœ  scala git:(2.12.0) ~/scala/scala-2.11.8/bin/scalac /tmp/Eval.scala -Xprint:typer -Ydebug

[...]

/tmp/Eval.scala:7: error: overriding value start in class Compute of type scala.this.Function0[<empty>.this.Eval[$anon.this.Start]];
 value start  has incompatible type;
 found   : => scala.this.Function0[<empty>.this.Eval[x2.Start]]
 required: => scala.this.Function0[<empty>.this.Eval[Compute.this.Start]]
          val start = c.start
              ^
one error found
{code}


{code}
sealed abstract class Eval[+A] {
  def flatMap[B](f: A => Eval[B]): Eval[B] =
    this match {
      case c: Eval.Compute[A] =>
        new Eval.Compute[B] {
          type Start = c.Start
          val start = c.start
        }
    }
}

object Eval {
  sealed abstract class Compute[A] extends Eval[A] {
    type Start
    val start: () => Eval[Start]
  }
}
{code}
