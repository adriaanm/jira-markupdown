When compiling the following with -Yrangepos:

{code:scala}
object Test {
  class Foo {
    def bar[A] () :Unit = ???
  }

  val foo = new Foo
  foo.bar[List[_]]() // OK
  foo bar[List[_]]() // rangepos crash
}
{code}

it blows up thusly:

{code}
======= Position error
Enclosing tree [71] does not include tree [70]
== Enclosing tree [71] of type TypeApply at [112:115]Test.scala

[L   8        ] #71     [112:115]       TypeApply  // foo

== Enclosed tree [70] of type Select at [112:119]Test.scala

[L   8        ] #70     [112:119]       Select     // bar[List


While validating #82
[L   1        ] #82     [0:150]         PackageDef // object Test {

Children:
  [L   1 P#   82] #81     [0:0]           Ident      // o
  [L   1 P#   82] #80     [0:150]         ModuleDef  // Test {
=======
{code}

As you can see in the repro case, selecting with a '.' works, but selecting with a ' ' causes the range error.
