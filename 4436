One more thing: It only happens, when the constructor of Tuple is private. In this case javac creates a package protected helper constructor which is called from the constructor of Tuppel$$1. Only then the bug is triggered. Maybe that's the edge of this case.

{code}
--- Tuppel.working.asm	2010-07-06 15:31:50.000000000 +0200
+++ Tuppel.broken.asm	2010-07-06 15:26:42.000000000 +0200
[...]
+Tuppel(Tuppel$$1);
+  Signature: (LTuppel$$1;)V
+  Code:
+   Stack=1, Locals=2, Args_size=2
+   0:	aload_0
+   1:	invokespecial	SI-1; //Method "<init>":()V
+   4:	return
+  LineNumberTable: 
+   line 2: 0
+
 
 }

--- Tuppel1.working.asm	2010-07-06 15:32:47.000000000 +0200
+++ Tuppel1.broken.asm	2010-07-06 15:32:35.000000000 +0200
[...]
 {
 Tuppel$$1();
   Signature: ()V
   Code:
-   Stack=1, Locals=1, Args_size=1
+   Stack=2, Locals=1, Args_size=1
    0:	aload_0
-   1:	invokespecial	SI-1; //Method Tuppel."<init>":()V
-   4:	return
+   1:	aconst_null
+   2:	invokespecial	SI-1; //Method Tuppel."<init>":(LTuppel$$1;)V
+   5:	return
   LineNumberTable: 
    line 6: 0
}
{code}
