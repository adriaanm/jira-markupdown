Compiling
```scala
object Test extends Application {
  val l1 = List(1, "2")
  val l2 = for (i: Int <- l1) yield i+1
}
```

yields
```scala
Test.scala:3: error: type mismatch;
 found   : (Int) => Int
 required: (Any) => ?
  val l2 = for (i: Int <- l1) yield i+1
                ^
one error found
```

The method `TypeBuilder.makeGenerator` should transform the generator `x: Int <- l1` to
```scala
x: Int <- l1.filter {case x: Int => true; case _ => false }
```
since pattern is not irrefutable for type `Any` (the list's element type).
