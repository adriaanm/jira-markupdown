In my hands that's a little faster for 50% full bitsets, but only a few percent.  It's substantially faster for nearly empty bitsets, but slower (again by a few percent) for nearly full bitsets.  Mostly I'm worried about architectures where numberOfTrailingZeros is not fast, though.  If you can supply documentation showing for which architectures it's fast (would be nice to know for ARM, Power5, and Sparc in addition to Intel) _and_ that it is/can be implemented in JavaScript approximately as efficiently as a bit shift, then I'll switch.  Otherwise you end up with approximately 6x more work to implement it via a series of bit masks.  I don't think it's advisable to adopt a solution that may have big performance problems in areas that would be nice to move into (Android, JavaScript backend, etc.).
