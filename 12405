There are four lines, see below, but the more important use case is ensime. The stack trace doesn't show lineToOffset, only offsetToLine. I'll take a look at that, too.
```scala
$ scala
Welcome to Scala 2.11.8 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_60).
Type in expressions for evaluation. Or try :help.

scala> val text =   """package com.example
     |     |object Test {
     |     |}
     |     |
     |     |""".stripMargin
text: String =
"package com.example
object Test {
}

"

scala> text.lines.length
res0: Int = 4

scala> text.split("\n")
res1: Array[String] = Array(package com.example, object Test {, })

scala> text.split("\n", -1)
res2: Array[String] = Array(package com.example, object Test {, }, "", "")

scala> "a\nb\nc\n".split("\n", -1)
res3: Array[String] = Array(a, b, c, "")
```

Position.toString wants its line number, which is based on its point, so probably the error is due to a position past EOF. ([here|https://github.com/scala/scala/blob/v2.11.8/src/reflect/scala/reflect/internal/util/Position.scala#L166])

Position has 1-based line number ([here|https://github.com/scala/scala/blob/v2.11.8/src/reflect/scala/reflect/internal/util/Position.scala#L166]), so that may be confusing. It's not obvious that you couldn't create a Position by converting a valid position's line number to an offset, without subtracting one first.
```scala
Position.offset(f, f.lineToOffset(p.line - 1))    // start of line
```
