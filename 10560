Allright I've found the culprit.

In 2.11.0-M7:
```scala
looking for macro implementation: macro method snippet
resolving macro implementation as org.specs2.execute.Snippets$.create (isBundle = false)
...
performing macro expansion QuickStart.this.snippet[Unit]({
  import org.specs2.mutable._;
  class HelloWorldSpec extends org.specs2.mutable.Specification {
    def <init>(): HelloWorldSpec = {
      HelloWorldSpec.super.<init>();
      ()
    }
  };
  ()
})(QuickStart.this.defaultSnippetParameters[Unit]) at source-/Users/xeno_by/Projects/Scala2110M7/sandbox/Test.scala,line-2,offset=115
...
original:
createSnippet(false, "{", {
  import org.specs2.mutable._;
  class HelloWorldSpec extends org.specs2.mutable.Specification {
    def <init>(): HelloWorldSpec = {
      HelloWorldSpec.super.<init>();
      ()
    }
  };
  ()
}, QuickStart.this.defaultSnippetParameters[Unit])
Apply(Ident(TermName("createSnippet")), List(Literal(Constant(false)), Literal(Constant("{")), Block(List(Import(Select(Select(Ident(org), org.specs2), org.specs2.mutable), List(ImportSelector(nme.WILDCARD, 143, null, -1))), ClassDef(Modifiers(), TypeName("HelloWorldSpec"), List(), Template(List(Select(Select(Select(Ident(org), org.specs2), org.specs2.mutable), org.specs2.mutable.Specification)), noSelfType, List(DefDef(Modifiers(), nme.CONSTRUCTOR, List(), List(List()), TypeTree(), Block(List(Apply(Select(Super(This(TypeName("HelloWorldSpec")), tpnme.EMPTY), nme.CONSTRUCTOR), List())), Literal(Constant(())))))))), Literal(Constant(()))), TypeApply(Select(This(TypeName("QuickStart")), TermName("defaultSnippetParameters")), List(TypeTree()))))
typecheck #1 (against macroPt = org.specs2.execute.Snippet[Unit]): createSnippet(false, "{", {
  import org.specs2.mutable._;
  class HelloWorldSpec extends org.specs2.mutable.Specification {
    def <init>(): HelloWorldSpec = {
      HelloWorldSpec.super.<init>();
      ()
    }
  };
  ()
}, QuickStart.this.defaultSnippetParameters[Unit])
undetParam added: type T
undetParam inferred: type T as Unit
typecheck #2 (against pt = org.specs2.specification.SpecPart): QuickStart.this.createSnippet[Unit](false, "{", {
  import org.specs2.mutable._;
  class HelloWorldSpec extends org.specs2.mutable.Specification {
    def <init>(): HelloWorldSpec = {
      HelloWorldSpec.super.<init>();
      ()
    }
  };
  ()
}, QuickStart.this.defaultSnippetParameters[Unit])
```

In 2.11.0-M8:
```scala
looking for macro implementation: macro method snippet
resolving macro implementation as org.specs2.execute.Snippets$.create (isBundle = false)
...
performing macro expansion QuickStart.this.snippet[Unit]({
  import org.specs2.mutable._;
  class HelloWorldSpec extends org.specs2.mutable.Specification {
    def <init>(): HelloWorldSpec = {
      HelloWorldSpec.super.<init>();
      ()
    }
  };
  ()
})(QuickStart.this.defaultSnippetParameters[Unit]) at source-/Users/xeno_by/Projects/Master/sandbox/Test.scala,line-2,offset=115
...
original:
createSnippet(false, "{", {
  import org.specs2.mutable._;
  class HelloWorldSpec extends org.specs2.mutable.Specification {
    def <init>(): HelloWorldSpec = {
      HelloWorldSpec.super.<init>();
      ()
    }
  };
  ()
}, QuickStart.this.defaultSnippetParameters[Unit])
Apply(Ident(TermName("createSnippet")), List(Literal(Constant(false)), Literal(Constant("{")), Block(List(Import(Select(Select(Ident(org), org.specs2), org.specs2.mutable), List(ImportSelector(nme.WILDCARD, 143, null, -1))), ClassDef(Modifiers(), TypeName("HelloWorldSpec"), List(), Template(List(Select(Select(Select(Ident(org), org.specs2), org.specs2.mutable), org.specs2.mutable.Specification)), noSelfType, List(DefDef(Modifiers(), nme.CONSTRUCTOR, List(), List(List()), TypeTree(), Block(List(Apply(Select(Super(This(TypeName("HelloWorldSpec")), tpnme.EMPTY), nme.CONSTRUCTOR), List())), Literal(Constant(())))))))), Literal(Constant(()))), TypeApply(Select(This(TypeName("QuickStart")), TermName("defaultSnippetParameters")), List(TypeTree()))))
whitebox typecheck #1 (against pt = org.specs2.specification.SpecPart): createSnippet(false, "{", {
  import org.specs2.mutable._;
  class HelloWorldSpec extends org.specs2.mutable.Specification {
    def <init>(): HelloWorldSpec = {
      HelloWorldSpec.super.<init>();
      ()
    }
  };
  ()
}, QuickStart.this.defaultSnippetParameters[Unit])
undetParam added: type T
undetParam inferred: type T as Unit
undetParam added: type T
undetParam inferred: type T as Unit
whitebox typecheck #2 (against pt = org.specs2.execute.Snippet[Unit]): QuickStart.this.snippetIsSpecPart[Unit](QuickStart.this.createSnippet[Unit](false, "{", {
  import org.specs2.mutable._;
  class HelloWorldSpec extends org.specs2.mutable.Specification {
    def <init>(): HelloWorldSpec = {
      HelloWorldSpec.super.<init>();
      ()
    }
  };
  ()
}, QuickStart.this.defaultSnippetParameters[Unit]))
whitebox typecheck #2 has failed: Vector([Type error at:source-/Users/xeno_by/Projects/Master/sandbox/Test.scala,line-2,offset=108] type mismatch;
 found   : org.specs2.specification.SpecPart
 required: org.specs2.execute.Snippet[Unit])
```
