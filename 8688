Actually, the problem is somewhere reify. I'll bet this is a duplicate of another "cannot reify ..." bug, but I can't find the one.

{noformat}
{
  final <synthetic> class $anonfun extends  {
    def <init>(): anonymous class $anonfun = {
      $anonfun.super.<init>();
      ()
    };
    final override private def applyOrElse[A1 >: Any <: Any, B1 >: Any <: Any](x$1: <error>, default: <error>): Any = x$1: @unchecked match {
      case (x @ _) => x
    };
    final private def isDefinedAt(x$1: <error>): Boolean = x$1: @unchecked match {
      case (x @ _) => true
    }
  };
  new Any()
}
{noformat}


{noformat}
{
  val $u: Test.this.cm.universe.type = Test.this.cm.universe;
  val $m: $u.Mirror = Test.this.cm.universe.runtimeMirror(this.getClass.getClassLoader);
  $u.Expr.apply[PartialFunction[Int,Int]]($m, {
    final class $treecreator1 extends TreeCreator {
      def <init>() = {
        super.<init>();
        ()
      };
      def apply[U >: Nothing <: Universe with Singleton]($m$untyped: Mirror[U]): U#Tree = {
        val $u: U = $m$untyped.universe;
        val $m: $u.Mirror = $m$untyped.asInstanceOf[$u.Mirror];
        $u.Typed($u.Typed($u.Block(scala.collection.immutable.List.apply($u.ClassDef($u.Modifiers($u.build.flagsFromBits(2097184L), $u.newTypeName(""), scala.collection.immutable.List.apply()), $u.newTypeName("$anonfun"), scala.collection.immutable.List.apply(), $u.Template(scala.collection.immutable.List.apply(), $u.build.emptyValDef, scala.collection.immutable.List.apply($u.DefDef($u.Modifiers($u.build.flagsFromBits(0L), $u.newTypeName(""), scala.collection.immutable.List.apply()), $u.newTermName("<init>"), scala.collection.immutable.List.apply(), scala.collection.immutable.List.apply(scala.collection.immutable.List.apply()), $u.TypeTree(), $u.Block(scala.collection.immutable.List.apply($u.Apply($u.Select($u.Super($u.This($u.newTypeName("")), $u.newTypeName("")), $u.newTermName("<init>")), scala.collection.immutable.List.apply())), $u.Literal($u.Constant(())))), $u.DefDef($u.Modifiers($u.build.flagsFromBits(98L), $u.newTypeName(""), scala.collection.immutable.List.apply()), $u.newTermName("applyOrElse"), scala.collection.immutable.List.apply($u.TypeDef($u.Modifiers($u.build.flagsFromBits(8208L), $u.newTypeName(""), scala.collection.immutable.List.apply()), $u.newTypeName("A1"), scala.collection.immutable.List.apply(), $u.TypeBoundsTree($u.TypeTree(), $u.TypeTree())), $u.TypeDef($u.Modifiers($u.build.flagsFromBits(8208L), $u.newTypeName(""), scala.collection.immutable.List.apply()), $u.newTypeName("B1"), scala.collection.immutable.List.apply(), $u.TypeBoundsTree($u.TypeTree(), $u.TypeTree()))), scala.collection.immutable.List.apply(scala.collection.immutable.List.apply($u.ValDef($u.Modifiers($u.build.flagsFromBits(17592188149760L), $u.newTypeName(""), scala.collection.immutable.List.apply()), $u.newTermName("x$1"), $u.TypeTree(), $u.EmptyTree), $u.ValDef($u.Modifiers($u.build.flagsFromBits(2105344L), $u.newTypeName(""), scala.collection.immutable.List.apply()), $u.newTermName("default"), $u.TypeTree(), $u.EmptyTree))), $u.TypeTree(), $u.Match($u.Annotated($u.Apply($u.Select($u.New($u.build.Ident($m.staticClass("scala.unchecked"))), $u.newTermName("<init>")), scala.collection.immutable.List.apply()), $u.Ident($u.newTermName("x$1"))), scala.collection.immutable.List.apply($u.CaseDef($u.Bind($u.newTermName("x"), $u.Ident($u.newTermName("_"))), $u.EmptyTree, $u.Ident($u.newTermName("x")))))), $u.DefDef($u.Modifiers($u.build.flagsFromBits(96L), $u.newTypeName(""), scala.collection.immutable.List.apply()), $u.newTermName("isDefinedAt"), scala.collection.immutable.List.apply(), scala.collection.immutable.List.apply(scala.collection.immutable.List.apply($u.ValDef($u.Modifiers($u.build.flagsFromBits(17592188149760L), $u.newTypeName(""), scala.collection.immutable.List.apply()), $u.newTermName("x$1"), $u.TypeTree(), $u.EmptyTree))), $u.TypeTree(), $u.Match($u.Annotated($u.Apply($u.Select($u.New($u.build.Ident($m.staticClass("scala.unchecked"))), $u.newTermName("<init>")), scala.collection.immutable.List.apply()), $u.Ident($u.newTermName("x$1"))), scala.collection.immutable.List.apply($u.CaseDef($u.Bind($u.newTermName("x"), $u.Ident($u.newTermName("_"))), $u.EmptyTree, $u.Literal($u.Constant(true)))))))))), $u.Apply($u.Select($u.New($u.TypeTree()), $u.newTermName("<init>")), scala.collection.immutable.List.apply())), $u.TypeTree()), $u.AppliedTypeTree($u.build.Ident($m.staticClass("scala.PartialFunction")), scala.collection.immutable.List.apply($u.build.Ident($m.staticClass("scala.Int")), $u.build.Ident($m.staticClass("scala.Int")))))
      }
    };
    new $treecreator1()
  })($u.TypeTag.apply[PartialFunction[Int,Int]]($m, {
    final class $typecreator2 extends TypeCreator {
      def <init>() = {
        super.<init>();
        ()
      };
      def apply[U >: Nothing <: Universe with Singleton]($m$untyped: Mirror[U]): U#Type = {
        val $u: U = $m$untyped.universe;
        val $m: $u.Mirror = $m$untyped.asInstanceOf[$u.Mirror];
        $u.TypeRef($u.ThisType($m.staticPackage("scala").asModule.moduleClass), $m.staticClass("scala.PartialFunction"), scala.collection.immutable.List.apply($m.staticClass("scala.Int").asType.toTypeConstructor, $m.staticClass("scala.Int").asType.toTypeConstructor))
      }
    };
    new $typecreator2()
  }))
}
{noformat}

