I might not know what I'm doing but the compiler should give me a more sensible error message.

With 
```scala
class Symbol(val name: String) extends (Symbol => Symbol) {
  override def toString() = name
  override def apply(that: Symbol) = new Symbol(name + " " + that.name)
}
```

I get 
```scala
scala> val hello = new Symbol("Hello")
hello: Symbol = Hello
scala> val world = new Symbol("World!")
world: Symbol = World!
scala> hello world
<console>:6: error: value world is not a member of Symbol
       hello world
```

which is in blatant contradiction to what it has just finished saying.
