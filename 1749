The above stack trace is from 2.7.3.

This is the stack trace from the most recent trunk:
```scala
jorge-ortizs-macbook-pro:scala-git jeortiz$$ /Users/jeortiz/Code/scala-git/build/quick/bin/scalac /Users/jeortiz/Code/tmp/sandbox/Typechecker.scala 
exception when typing buf.mymap, pt = ?
exception when typing buf.mymap(((x) => x.$$times(x))), pt = ?
exception when typing {
  implicit def richBuffer[T >: Nothing <: Any, B[U >: Nothing <: Any] >: [U]Nothing <: [U]scala.collection.mutable.Buffer[U]](buffer: B[T]): RichBuffer[T,B] = new RichBuffer[T, B](buffer);
  implicit val rv: scala.collection.mutable.ArrayBuffer[Int] = new ArrayBuffer[Int]();
  val buf: scala.collection.mutable.ArrayBuffer[Int] = new ArrayBuffer[Int]();
  1.to(5).foreach(((x$$1: Int) => buf.+=(x$$1)));
  buf.mymap(((x) => x.$$times(x)));
  richBuffer(buf).mymap[Int](((x) => x.$$times(x)));
  richBuffer[Int, ArrayBuffer](buf).mymap[Int](((x) => x.$$times(x)));
  mymap2(buf, ((x: Int) => x.$$times(x)));
  mymap2[Int, ArrayBuffer, Int](buf, ((x: Int) => x.$$times(x)));
  mymap3(buf, ((x) => x.$$times(x)));
  mymap3(buf, ((x: Int) => x.$$times(x)))
}, pt = Unit
exception when typing def main(args: Array[String]): Unit = {
  implicit def richBuffer[T >: Nothing <: Any, B[U >: Nothing <: Any] >: [U]Nothing <: [U]scala.collection.mutable.Buffer[U]](buffer: B[T]): RichBuffer[T,B] = new RichBuffer[T, B](buffer);
  implicit val rv: scala.collection.mutable.ArrayBuffer[Int] = new ArrayBuffer[Int]();
  val buf: scala.collection.mutable.ArrayBuffer[Int] = new ArrayBuffer[Int]();
  1.to(5).foreach(((x$$1: Int) => buf.+=(x$$1)));
  buf.mymap(((x) => x.$$times(x)));
  richBuffer(buf).mymap[Int](((x) => x.$$times(x)));
  richBuffer[Int, ArrayBuffer](buf).mymap[Int](((x) => x.$$times(x)));
  mymap2(buf, ((x: Int) => x.$$times(x)));
  mymap2[Int, ArrayBuffer, Int](buf, ((x: Int) => x.$$times(x)));
  mymap3(buf, ((x) => x.$$times(x)));
  mymap3(buf, ((x: Int) => x.$$times(x)))
}, pt = ?
exception when typing final object Application extends scala.ScalaObject {
  def this(): object Application = {
    Application.super.this();
    ()
  };
  def mymap2[T >: Nothing <: Any, B[U >: Nothing <: Any] >: [U]Nothing <: [U]scala.collection.mutable.Buffer[U], S >: Nothing <: Any](buffer: B[T], f: scala.Function1[T, S])(implicit rv: B[S]): B[S] = {
    buffer.foreach(((e: T) => rv.+=(f(e))));
    rv
  };
  def mymap3[T >: Nothing <: Any, B >: Nothing <: scala.collection.mutable.Buffer[T], S >: Nothing <: Any](buffer: B, f: scala.Function1[T, T])(implicit rv: B): B = {
    buffer.foreach(((e: T) => rv.+=(f(e))));
    rv
  };
  def main(args: Array[String]): Unit = {
    implicit def richBuffer[T >: Nothing <: Any, B[U >: Nothing <: Any] >: [U]Nothing <: [U]scala.collection.mutable.Buffer[U]](buffer: B[T]): RichBuffer[T,B] = new RichBuffer[T, B](buffer);
    implicit val rv: scala.collection.mutable.ArrayBuffer[Int] = new ArrayBuffer[Int]();
    val buf: scala.collection.mutable.ArrayBuffer[Int] = new ArrayBuffer[Int]();
    1.to(5).foreach(((x$$1: Int) => buf.+=(x$$1)));
    buf.mymap(((x) => x.$$times(x)));
    richBuffer(buf).mymap[Int](((x) => x.$$times(x)));
    richBuffer[Int, ArrayBuffer](buf).mymap[Int](((x) => x.$$times(x)));
    mymap2(buf, ((x: Int) => x.$$times(x)));
    mymap2[Int, ArrayBuffer, Int](buf, ((x: Int) => x.$$times(x)));
    mymap3(buf, ((x) => x.$$times(x)));
    mymap3(buf, ((x: Int) => x.$$times(x)))
  }
}, pt = ?
exception when typing package <empty> {
  import scala.collection.mutable.{Buffer, ArrayBuffer};
  class RichBuffer[T >: Nothing <: Any, B[U >: Nothing <: Any] >: [U]Nothing <: [U]scala.collection.mutable.Buffer[U]] extends scala.ScalaObject {
    <paramaccessor> private[this] val buffer: scala.collection.mutable.Buffer[T] = _;
    def this(buffer: Buffer[T]): RichBuffer[T,B] = {
      RichBuffer.super.this();
      ()
    };
    def mymap[S >: Nothing <: Any](f: scala.Function1[T, S])(implicit rv: B[S]): B[S] = {
      buffer.foreach(((e: T) => rv.+=(f(e))));
      rv
    }
  };
  final object Application extends scala.ScalaObject {
    def this(): object Application = {
      Application.super.this();
      ()
    };
    def mymap2[T >: Nothing <: Any, B[U >: Nothing <: Any] >: [U]Nothing <: [U]scala.collection.mutable.Buffer[U], S >: Nothing <: Any](buffer: B[T], f: scala.Function1[T, S])(implicit rv: B[S]): B[S] = {
      buffer.foreach(((e: T) => rv.+=(f(e))));
      rv
    };
    def mymap3[T >: Nothing <: Any, B >: Nothing <: scala.collection.mutable.Buffer[T], S >: Nothing <: Any](buffer: B, f: scala.Function1[T, T])(implicit rv: B): B = {
      buffer.foreach(((e: T) => rv.+=(f(e))));
      rv
    };
    def main(args: Array[String]): Unit = {
      implicit def richBuffer[T >: Nothing <: Any, B[U >: Nothing <: Any] >: [U]Nothing <: [U]scala.collection.mutable.Buffer[U]](buffer: B[T]): RichBuffer[T,B] = new RichBuffer[T, B](buffer);
      implicit val rv: scala.collection.mutable.ArrayBuffer[Int] = new ArrayBuffer[Int]();
      val buf: scala.collection.mutable.ArrayBuffer[Int] = new ArrayBuffer[Int]();
      1.to(5).foreach(((x$$1: Int) => buf.+=(x$$1)));
      buf.mymap(((x) => x.$$times(x)));
      richBuffer(buf).mymap[Int](((x) => x.$$times(x)));
      richBuffer[Int, ArrayBuffer](buf).mymap[Int](((x) => x.$$times(x)));
      mymap2(buf, ((x: Int) => x.$$times(x)));
      mymap2[Int, ArrayBuffer, Int](buf, ((x: Int) => x.$$times(x)));
      mymap3(buf, ((x) => x.$$times(x)));
      mymap3(buf, ((x: Int) => x.$$times(x)))
    }
  }
}, pt = ?
Exception in thread "main" java.lang.Error: ?
	at scala.tools.nsc.symtab.Types$$class.appliedType(Types.scala:2181)
	at scala.tools.nsc.symtab.SymbolTable.appliedType(SymbolTable.scala:12)
	at scala.tools.nsc.symtab.Types$$AsSeenFromMap.instParam$$1(Types.scala:2772)
	at scala.tools.nsc.symtab.Types$$AsSeenFromMap.toInstance$$1(Types.scala:2780)
	at scala.tools.nsc.symtab.Types$$AsSeenFromMap.apply(Types.scala:2796)
	at scala.tools.nsc.symtab.Types$$AsSeenFromMap.apply(Types.scala:2665)
	at scala.List$$.loop$$1(List.scala:301)
	at scala.List$$.mapConserve(List.scala:318)
	at scala.tools.nsc.symtab.Types$$TypeMap.mapOver(Types.scala:2420)
	at scala.tools.nsc.symtab.Types$$AsSeenFromMap.apply(Types.scala:2798)
	at scala.tools.nsc.symtab.Types$$AsSeenFromMap.apply(Types.scala:2665)
	at scala.tools.nsc.symtab.Types$$TypeMap.mapOver(Types.scala:2422)
	at scala.tools.nsc.symtab.Types$$AsSeenFromMap.apply(Types.scala:2798)
	at scala.tools.nsc.symtab.Types$$AsSeenFromMap.apply(Types.scala:2665)
	at scala.tools.nsc.symtab.Types$$TypeMap.mapOver(Types.scala:2429)
	at scala.tools.nsc.symtab.Types$$AsSeenFromMap.apply(Types.scala:2798)
	at scala.tools.nsc.symtab.Types$$Type.asSeenFrom(Types.scala:412)
	at scala.tools.nsc.symtab.Types$$Type.memberInfo(Types.scala:419)
	at scala.tools.nsc.symtab.Types$$class.scala$$tools$$nsc$$symtab$$Types$$$$specializesSym(Types.scala:3803)
	at scala.tools.nsc.symtab.Types$$$$anonfun$$specializesSym$$1.apply(Types.scala:3797)
	at scala.tools.nsc.symtab.Types$$$$anonfun$$specializesSym$$1.apply(Types.scala:3797)
	at scala.List.exists(List.scala:1040)
	at scala.tools.nsc.symtab.Types$$class.specializesSym(Types.scala:3796)
	at scala.tools.nsc.symtab.SymbolTable.specializesSym(SymbolTable.scala:12)
	at scala.tools.nsc.symtab.Types$$Type.specializes(Types.scala:526)
	at scala.tools.nsc.symtab.Types$$$$anonfun$$isSubType0$$3.apply(Types.scala:3735)
	at scala.tools.nsc.symtab.Types$$$$anonfun$$isSubType0$$3.apply(Types.scala:3735)
	at scala.List.forall(List.scala:1024)
	at scala.tools.nsc.symtab.Types$$class.isSubType0(Types.scala:3735)
	at scala.tools.nsc.symtab.Types$$class.isSubType(Types.scala:3600)
	at scala.tools.nsc.symtab.SymbolTable.isSubType(SymbolTable.scala:12)
	at scala.tools.nsc.symtab.Types$$Type.$$less$$colon$$less(Types.scala:509)
		at scala.tools.nsc.symtab.Types$$class.isSubArgs$$1(Types.scala:3663)
	at scala.tools.nsc.symtab.Types$$class.isSubArgs$$1(Types.scala:3664)
	at scala.tools.nsc.symtab.Types$$class.isSubType0(Types.scala:3668)
	at scala.tools.nsc.symtab.Types$$class.isSubType(Types.scala:3600)
	at scala.tools.nsc.symtab.SymbolTable.isSubType(SymbolTable.scala:12)
	at scala.tools.nsc.symtab.Types$$Type.$$less$$colon$$less(Types.scala:509)
	at scala.tools.nsc.typechecker.Infer$$Inferencer.isCompatible(Infer.scala:427)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch.typedImplicit0(Implicits.scala:292)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch.typedImplicit(Implicits.scala:254)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch.tryImplicit$$1(Implicits.scala:424)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch$$$$anonfun$$applicableInfos$$1$$1.apply(Implicits.scala:436)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch$$$$anonfun$$applicableInfos$$1$$1.apply(Implicits.scala:433)
	at scala.List.foreach(List.scala:849)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch.applicableInfos$$1(Implicits.scala:433)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch$$$$anonfun$$3.apply(Implicits.scala:446)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch$$$$anonfun$$3.apply(Implicits.scala:446)
	at scala.List.map(List.scala:819)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch.searchImplicit(Implicits.scala:446)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch.<init>(Implicits.scala:593)
	at scala.tools.nsc.typechecker.Implicits$$class.inferImplicit(Implicits.scala:50)
	at scala.tools.nsc.Global$$analyzer$$.inferImplicit(Global.scala:285)
	at scala.tools.nsc.typechecker.Typers$$Typer.wrapImplicit$$1(Typers.scala:213)
	at scala.tools.nsc.typechecker.Typers$$Typer.inferView(Typers.scala:217)
	at scala.tools.nsc.typechecker.Typers$$Typer.inferView(Typers.scala:235)
	at scala.tools.nsc.typechecker.Typers$$Typer.adaptToMember(Typers.scala:958)
	at scala.tools.nsc.typechecker.Typers$$Typer.adaptToName(Typers.scala:967)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedSelect$$1(Typers.scala:2930)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:3397)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3478)
	at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$typedApply$$1$$1.apply(Typers.scala:2751)
	at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$typedApply$$1$$1.apply(Typers.scala:2751)
	at scala.tools.nsc.typechecker.Typers$$Typer.silent(Typers.scala:673)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedApply$$1(Typers.scala:2751)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:3373)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3478)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3519)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedStat$$1(Typers.scala:1695)
	at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$21.apply(Typers.scala:1740)
	at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$21.apply(Typers.scala:1740)
	at scala.List$$.loop$$1(List.scala:301)
	at scala.List$$.mapConserve(List.scala:318)
	at scala.List$$.loop$$1(List.scala:305)
	at scala.List$$.mapConserve(List.scala:318)
	at scala.List$$.loop$$1(List.scala:305)
	at scala.List$$.mapConserve(List.scala:318)
	at scala.List$$.loop$$1(List.scala:305)
	at scala.List$$.mapConserve(List.scala:318)
	at scala.List$$.loop$$1(List.scala:305)
	at scala.List$$.mapConserve(List.scala:318)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedStats(Typers.scala:1740)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedBlock(Typers.scala:1524)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:3237)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3478)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3530)
	at scala.tools.nsc.typechecker.Typers$$Typer.transformedOrTyped(Typers.scala:3588)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedDefDef(Typers.scala:1462)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:3213)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3478)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3519)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedStat$$1(Typers.scala:1695)
	at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$21.apply(Typers.scala:1740)
	at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$21.apply(Typers.scala:1740)
	at scala.List$$.loop$$1(List.scala:301)
	at scala.List$$.mapConserve(List.scala:318)
	at scala.List$$.loop$$1(List.scala:305)
	at scala.List$$.mapConserve(List.scala:318)
	at scala.List$$.loop$$1(List.scala:305)
	at scala.List$$.mapConserve(List.scala:318)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedStats(Typers.scala:1740)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedTemplate(Typers.scala:1304)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedModuleDef(Typers.scala:1197)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:3207)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3478)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3519)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedStat$$1(Typers.scala:1695)
	at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$21.apply(Typers.scala:1740)
	at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$21.apply(Typers.scala:1740)
	at scala.List$$.loop$$1(List.scala:301)
	at scala.List$$.mapConserve(List.scala:318)
	at scala.List$$.loop$$1(List.scala:305)
	at scala.List$$.mapConserve(List.scala:318)
	at scala.List$$.loop$$1(List.scala:305)
	at scala.List$$.mapConserve(List.scala:318)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedStats(Typers.scala:1740)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:3200)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3478)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3519)
	at scala.tools.nsc.typechecker.Analyzer$$typerFactory$$$$anon$$2.apply(Analyzer.scala:47)
	at scala.tools.nsc.Global$$GlobalPhase.applyPhase(Global.scala:268)
	at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$run$$1.apply(Global.scala:247)
	at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$run$$1.apply(Global.scala:247)
	at scala.Iterator$$class.foreach(Iterator.scala:427)
	at scala.collection.mutable.ListBuffer$$$$anon$$1.foreach(ListBuffer.scala:266)
	at scala.tools.nsc.Global$$GlobalPhase.run(Global.scala:247)
	at scala.tools.nsc.Global$$Run.compileSources(Global.scala:694)
	at scala.tools.nsc.Global$$Run.compile(Global.scala:790)
	at scala.tools.nsc.Main$$.process(Main.scala:73)
	at scala.tools.nsc.Main$$.main(Main.scala:87)
	at scala.tools.nsc.Main.main(Main.scala)
```
