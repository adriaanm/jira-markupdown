```scala
java.lang.AssertionError: assertion failed: strange Apply
        at scala.Predef$$.assert(Predef.scala:92)
        at scala.tools.nsc.matching.ParallelMatching$$MixTypes.subpatterns(ParallelMatching.scala:692)
        at scala.tools.nsc.matching.ParallelMatching$$MixTypes.<init>(ParallelMatching.scala:747)
        at scala.tools.nsc.matching.ParallelMatching$$class.MixtureRule(ParallelMatching.scala:99)
        at scala.tools.nsc.transform.ExplicitOuter.MixtureRule(ExplicitOuter.scala:19)
        at scala.tools.nsc.matching.ParallelMatching$$Rep.applyRule(ParallelMatching.scala:1289)
        at scala.tools.nsc.matching.ParallelMatching$$class.repToTree(ParallelMatching.scala:849)
        at scala.tools.nsc.transform.ExplicitOuter.repToTree(ExplicitOuter.scala:19)
        at scala.tools.nsc.matching.TransMatcher$$class.handlePattern(TransMatcher.scala:227)
        at scala.tools.nsc.transform.ExplicitOuter.handlePattern(ExplicitOuter.scala:19)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transform(ExplicitOuter.scala:473)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transformTrees$$1.apply(Trees.scala:1385)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transformTrees$$1.apply(Trees.scala:1385)
        at scala.List$$.loop$$1(List.scala:293)
        at scala.List$$.mapConserve(List.scala:310)
        at scala.tools.nsc.ast.Trees$$Transformer.transformTrees(Trees.scala:1385)
        at scala.tools.nsc.ast.Trees$$Transformer.transform(Trees.scala:1349)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.transform(TypingTransformers.scala:46)
        at scala.tools.nsc.transform.ExplicitOuter$$OuterPathTransformer.transform(ExplicitOuter.scala:207)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transform(ExplicitOuter.scala:497)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transformTrees$$1.apply(Trees.scala:1385)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transformTrees$$1.apply(Trees.scala:1385)
        at scala.List$$.loop$$1(List.scala:293)
        at scala.List$$.mapConserve(List.scala:310)
        at scala.tools.nsc.ast.Trees$$Transformer.transformTrees(Trees.scala:1385)
        at scala.tools.nsc.ast.Trees$$Transformer.transform(Trees.scala:1349)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.transform(TypingTransformers.scala:46)
        at scala.tools.nsc.transform.ExplicitOuter$$OuterPathTransformer.transform(ExplicitOuter.scala:207)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transform(ExplicitOuter.scala:497)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transform$$5.apply(Trees.scala:1294)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transform$$5.apply(Trees.scala:1293)
        at scala.tools.nsc.ast.Trees$$Transformer.atOwner(Trees.scala:1409)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:33)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:27)
        at scala.tools.nsc.ast.Trees$$Transformer.transform(Trees.scala:1292)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.transform(TypingTransformers.scala:46)
        at scala.tools.nsc.transform.ExplicitOuter$$OuterPathTransformer.transform(ExplicitOuter.scala:207)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transform(ExplicitOuter.scala:365)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transformStats$$1.apply(Trees.scala:1403)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transformStats$$1.apply(Trees.scala:1401)
        at scala.List$$.loop$$1(List.scala:293)
        at scala.List$$.mapConserve(List.scala:310)
        at scala.tools.nsc.ast.Trees$$Transformer.transformStats(Trees.scala:1401)
        at scala.tools.nsc.ast.Trees$$Transformer.transform(Trees.scala:1309)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.scala$$tools$$nsc$$transform$$TypingTransformers$$T
ypingTransformer$$$$super$$transform(TypingTransformers.scala:44)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer$$$$anonfun$$transform$$1.apply(TypingTransformers.
scala:44)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer$$$$anonfun$$transform$$1.apply(TypingTransformers.
scala:44)
        at scala.tools.nsc.ast.Trees$$Transformer.atOwner(Trees.scala:1409)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:33)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:27)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.transform(TypingTransformers.scala:44)
        at scala.tools.nsc.transform.ExplicitOuter$$OuterPathTransformer.transform(ExplicitOuter.scala:207)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transform(ExplicitOuter.scala:345)
        at scala.tools.nsc.ast.Trees$$Transformer.transformTemplate(Trees.scala:1387)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transform$$2.apply(Trees.scala:1281)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transform$$2.apply(Trees.scala:1281)
        at scala.tools.nsc.ast.Trees$$Transformer.atOwner(Trees.scala:1409)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:33)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:27)
        at scala.tools.nsc.ast.Trees$$Transformer.transform(Trees.scala:1280)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.transform(TypingTransformers.scala:46)
        at scala.tools.nsc.transform.ExplicitOuter$$OuterPathTransformer.transform(ExplicitOuter.scala:207)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transform(ExplicitOuter.scala:497)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transformStats$$1.apply(Trees.scala:1403)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transformStats$$1.apply(Trees.scala:1401)
        at scala.List$$.loop$$1(List.scala:293)
        at scala.List$$.mapConserve(List.scala:310)
        at scala.tools.nsc.ast.Trees$$Transformer.transformStats(Trees.scala:1401)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transform$$1.apply(Trees.scala:1277)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transform$$1.apply(Trees.scala:1277)
        at scala.tools.nsc.ast.Trees$$Transformer.atOwner(Trees.scala:1409)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:33)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:27)
        at scala.tools.nsc.ast.Trees$$Transformer.transform(Trees.scala:1276)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.transform(TypingTransformers.scala:46)
        at scala.tools.nsc.transform.ExplicitOuter$$OuterPathTransformer.transform(ExplicitOuter.scala:207)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transform(ExplicitOuter.scala:497)
        at scala.tools.nsc.ast.Trees$$Transformer.transformUnit(Trees.scala:1404)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.scala$$tools$$nsc$$transform$$ExplicitOuter$$Expl
icitOuterTransformer$$$$super$$transformUnit(ExplicitOuter.scala:507)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer$$$$anonfun$$transformUnit$$1.apply(ExplicitOuter
.scala:507)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer$$$$anonfun$$transformUnit$$1.apply(ExplicitOuter
.scala:507)
        at scala.tools.nsc.symtab.SymbolTable.atPhase(SymbolTable.scala:105)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transformUnit(ExplicitOuter.scala:507)
        at scala.tools.nsc.transform.ExplicitOuter$$ExplicitOuterTransformer.transformUnit(ExplicitOuter.scala:276)
        at scala.tools.nsc.transform.Transform$$Phase.apply(Transform.scala:30)
        at scala.tools.nsc.Global$$GlobalPhase.applyPhase(Global.scala:257)
        at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$run$$1.apply(Global.scala:243)
        at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$run$$1.apply(Global.scala:243)
        at scala.Iterator$$class.foreach(Iterator.scala:395)
        at scala.collection.mutable.ListBuffer$$$$anon$$1.foreach(ListBuffer.scala:266)
        at scala.tools.nsc.Global$$GlobalPhase.run(Global.scala:243)
        at scala.tools.nsc.Global$$Run.compileSources(Global.scala:555)
        at scala.tools.nsc.Global$$Run.compile(Global.scala:640)
        at scala.tools.nsc.Main$$.process(Main.scala:84)
        at scala.tools.nsc.Main$$.main(Main.scala:98)
        at scala.tools.nsc.Main.main(Main.scala)
exception when transforming A.this.eq(x$$1).||(x$$1 match {
  case (Int)A((a$$1 @ _)) if x$$1.==(a()) => true
  case _ => false
})
exception when transforming x$$1.isInstanceOf[java.lang.Object]().&&(A.this.eq(x$$1).||(x$$1 match {
  case (Int)A((a$$1 @ _)) if x$$1.==(a()) => true
  case _ => false
}))
exception when transforming override def equals(x$$1: Any): Boolean = x$$1.isInstanceOf[java.lang.Object]().&&(A.this.eq(x
$$1).||(x$$1 match {
  case (Int)A((a$$1 @ _)) if x$$1.==(a()) => true
  case _ => false
}))
exception when transforming java.lang.Object with ScalaObject with Product {
  <caseaccessor> <paramaccessor> private[this] val a: Int = _;
  <stable> <caseaccessor> <accessor> <paramaccessor> def a(): Int = A.this.a;
  <paramaccessor> private[this] val b: Int = _;
  <paramaccessor> private[this] val c: Int = _;
  def this(a: Int, b: Int, c: Int): A = {
    A.super.this();
    ()
  };
  override def $$tag(): Int = 65;
  override def hashCode(): Int = ScalaRunTime.this._hashCode(A.this);
  override def toString(): java.lang.String = ScalaRunTime.this._toString(A.this);
  override def equals(x$$1: Any): Boolean = x$$1.isInstanceOf[java.lang.Object]().&&(A.this.eq(x$$1).||(x$$1 match {
    case (Int)A((a$$1 @ _)) if x$$1.==(a()) => true
    case _ => false
  }));
  override def productPrefix(): java.lang.String = "A";
  override def productArity(): Int = 1;
  override def productElement(x$$1: Int): Any = x$$1 match {
    case 0 => a()
    case _ => throw new java.lang.IndexOutOfBoundsException(x$$1.toString())
  }
}
exception when transforming @serializable case class A extends java.lang.Object with ScalaObject with Product {
  <caseaccessor> <paramaccessor> private[this] val a: Int = _;
  <stable> <caseaccessor> <accessor> <paramaccessor> def a(): Int = A.this.a;
  <paramaccessor> private[this] val b: Int = _;
  <paramaccessor> private[this] val c: Int = _;
  def this(a: Int, b: Int, c: Int): A = {
    A.super.this();
    ()
  };
  override def $$tag(): Int = 65;
  override def hashCode(): Int = ScalaRunTime.this._hashCode(A.this);
  override def toString(): java.lang.String = ScalaRunTime.this._toString(A.this);
  override def equals(x$$1: Any): Boolean = x$$1.isInstanceOf[java.lang.Object]().&&(A.this.eq(x$$1).||(x$$1 match {
    case (Int)A((a$$1 @ _)) if x$$1.==(a()) => true
    case _ => false
  }));
  override def productPrefix(): java.lang.String = "A";
  override def productArity(): Int = 1;
  override def productElement(x$$1: Int): Any = x$$1 match {
    case 0 => a()
    case _ => throw new java.lang.IndexOutOfBoundsException(x$$1.toString())
  }
}
exception when transforming package <empty> {
  @serializable case class A extends java.lang.Object with ScalaObject with Product {
    <caseaccessor> <paramaccessor> private[this] val a: Int = _;
    <stable> <caseaccessor> <accessor> <paramaccessor> def a(): Int = A.this.a;
    <paramaccessor> private[this] val b: Int = _;
    <paramaccessor> private[this] val c: Int = _;
    def this(a: Int, b: Int, c: Int): A = {
      A.super.this();
      ()
    };
    override def $$tag(): Int = 65;
    override def hashCode(): Int = ScalaRunTime.this._hashCode(A.this);
    override def toString(): java.lang.String = ScalaRunTime.this._toString(A.this);
    override def equals(x$$1: Any): Boolean = x$$1.isInstanceOf[java.lang.Object]().&&(A.this.eq(x$$1).||(x$$1 match {
      case (Int)A((a$$1 @ _)) if x$$1.==(a()) => true
      case _ => false
    }));
    override def productPrefix(): java.lang.String = "A";
    override def productArity(): Int = 1;
    override def productElement(x$$1: Int): Any = x$$1 match {
      case 0 => a()
      case _ => throw new java.lang.IndexOutOfBoundsException(x$$1.toString())
    }
  };
  final <synthetic> class A extends java.lang.Object with ScalaObject {
    def this(): object A = {
      A.super.this();
      ()
    };
    case <synthetic> def unapply(x$$0: A): Some[Int] = new Some[Int](x$$0.a());
    case <synthetic> def apply(a: Int, b: Int, c: Int): A = new A(a, b, c)
  }
}
error: fatal error: assertion failed: strange Apply
```
