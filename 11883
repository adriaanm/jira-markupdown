Contrasting these two variations shows that the types in the crashy version are not formed with the `o2.type` prefix. Understanding the difference might lead to a fix.

See also SI-9123 / https://github.com/scala/scala/pull/4274

{code}
//     case o: Outer => 
//      val i = new o.Inner
{
      case <synthetic> val x1: Outer = Test.this{Test.type}.o1{Outer};
      case5(){
        if (x1.ne{(x$1: AnyRef)Boolean}(null{Null(null)}){Boolean})
          {
            <synthetic> val x2: Outer = x1{Outer};
            matchEnd4{(x: Unit)Unit}({
              val i: x2.Inner = new x2.Inner{x2.Inner}{()x2.Inner}(){x2.Inner};
              (){Unit}
            }{Unit}){Unit}
          }{Unit}
        else
          case6{()Unit}(){Unit}{Unit}
      }{Unit};
      case6(){
        matchEnd4{(x: Unit)Unit}(throw new MatchError{MatchError}{(obj: Any)MatchError}(x1{Outer}){MatchError}{Nothing}){Unit}
      }{Unit};
      matchEnd4(x: Unit){
        x{Unit}
      }{Unit}
    }{Unit}
{code}


vs

{code}
//     case o @ Outer(_) => 
//      val i = new o.Inner
{
      case <synthetic> val x1: Outer = Test.this{Test.type}.o1{Outer};
      case5(){
        if (x1.ne{(x$1: AnyRef)Boolean}(null{Null(null)}){Boolean})
          matchEnd4{(x: Unit)Unit}({
            val i: Outer#Inner = new x1.Inner{Outer#Inner}{()Outer#Inner}(){Outer#Inner};
            (){Unit}
          }{Unit}){Unit}
        else
          case6{()Unit}(){Unit}{Unit}
      }{Unit};
      case6(){
        matchEnd4{(x: Unit)Unit}(throw new MatchError{MatchError}{(obj: Any)MatchError}(x1{Outer}){MatchError}{Nothing}){Unit}
      }{Unit};
      matchEnd4(x: Unit){
        x{Unit}
      }{Unit}
    }{Unit}
{code}
