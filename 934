For the record, I can also compile the original example. Also, I have tested the virtual pattern matcher against the regex example with the code below, and it passes. So, not only it doesn't crash, but it matches correctly so far.  Thanks, Adriaan!
```scala
object TokeniserTest extends Properties("Tokeniser") {                                                          
  val hexDigit = Gen oneOf (('0' to '9') ++ ('a' to 'f'))                                                       
  val identifier = Gen listOfN (8, hexDigit) map (_.mkString)                                                   
  val command0 = Gen oneOf ("status", "reset") map (_ + "=0")                                                   
  val command01 = for {                                                                                         
    cmd <- Gen oneOf ("motor", "side", "stream")                                                                
    digit <- Gen oneOf ("0", "1")                                                                               
  } yield cmd + "=" + digit                                                                                     
  val commandX = Gen oneOf ('0' to '9') map ("density="+_)                                                      
  val commandN = for {                                                                                          
    cmd <- Gen oneOf ("min_track", "max_track", "track")                                                        
    number <- Gen.numStr suchThat (_.size > 0)                                                                  
  } yield cmd + "=" + number                                                                                    
  val textGen = for {                                                                                           
    i <- id                                                                                                     
    cmd <- Gen oneOf (command0, command01, commandX, commandN)                                                  
  } yield i + ": " + cmd                                                                                        
                                                                                                                
                                                                                                                
  property("Parsing") = forAllNoShrink(textGen) ( text => Tokeniser.go(text)                                    
    matches """(status|reset|density \d+|(min |max )?track \d+|(motor|stream) (on|off)|side \d+)""" )           
}
```
