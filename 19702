```
Even without considering indy-stringconcat, we could consider changing the desugaring of Scala’s String.+ to directly use Java’s StringBuilder, rather than collection.mutable.StringBuilder (which is just a wrapper for the former.)
This would save allocating the wrapper as well as the underlying builder, and, more importantly, present byte code more directly amenable to HotSpot’s StringBuilder optimizations.
If HotSpot could inline s.c.m.StringBuilder away, there is a chance those optimizations would kick in, but it seems we’re making things needlessly hard.
Does anyone know the history of our + desugaring?
@dragos Do you remember the motivation for switching to scala.StringBuilder in scala/scala@bee89ec ?
```
