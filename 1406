I agree there is a parser problem, but as I described above there is also a general issue for the interpreter.  Currently, the interpreter asks the parser to parse a whole template statement sequence, including a possible this alias.  At the very least this is a fragile arrangement, because no top-level code entered at the interpreter prompt will be a this alias.  For things to work correctly, we are relying on the parser trying but always failing to parse a this alias.

Here's a problem related to the initial one given above:
{code}
  scala> a : Int => println("hello")
{code}
Without a patch, the interpreter will attempt to parse something analogous to this:
{code}
  object wrapper { a : Int => println("hello") }
{code}
This will parse in a different way than intended.  At the least that looks fragile.  It should make the interpreter more robust if it didn't even try to parse such a construction, which is why I suggested putting in a semicolon.  If there is a better way to eliminate the possibility of a this alias than a semicolon, that would also be great.

