When doing reflection over Scala types, this sometimes causes a NullPointerException. For example using:
```xml
<dependency>
  <groupId>com.typesafe.akka</groupId>
  <artifactId>akka-http-core_2.11</artifactId>
  <version>2.4.11</version>
</dependency>
```

and running:
```java
Class<?> type = Class.forName("akka.stream.scaladsl.Sink$$anon$1");
Field field = type.getDeclaredField("akka$stream$scaladsl$Sink$$anon$$in");
Type fieldType = field.getGenericType();
System.out.println(fieldType);
```

results in a NullPointerException.

This is a problem for code that processes types in a generic fashion. Looking at the class file, it seems like scalac declares the field to be of a generic type T without declaring such a type variable within the scope of this type. This results in a nullpointerexception when the reflection API attempts to resolve the declaration site of the type variable.
