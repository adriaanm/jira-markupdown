I was going to suggest [A View to a Shill|http://scalapuzzlers.com/#pzzlr-037] but I see you might also be interested in [Captured by Closures|http://scalapuzzlers.com/#pzzlr-008].

If it were somehow desirable to do it this way, you could:
{code}
  lazy val percents: Map[Int, Int] = prettifyPercents {
    val total = results.valuesIterator.sum
    for ((key, value) <- results) yield key -> Try(math.round(value * 100.0 / total).toInt).getOrElse(0)
  }.view.force //.iterator.toMap
{code}
