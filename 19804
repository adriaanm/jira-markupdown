The column pointer will fall out of alignment with what it's supposed to be pointing to if the cli environment differs from scalac's expectations in one of two ways:
1: Tab width is not equivalent to 4 spaces
2: Something is prefixed to scalac's output for which prefix.length is not a multiple of 4
For instance,
{noformat}
[ant:scalac] /home/mako/programming/ ... /Code.scala:289: error: type mismatch;
[ant:scalac]  found   : Double
[ant:scalac]  required: Float
[ant:scalac] 				if(dt < 1) f(Math.pow(2, 10 * (dt - 1) - 1))
[ant:scalac]                                                      ^
{noformat}
In my terminals, comes out looking roughly like
{noformat}
[ant:scalac]                         if(dt < 1) f(Math.pow(2, 10 * (dt - 1) - 1))
[ant:scalac]                                                                ^
{noformat}
making it much harder to tell where the error is.

Easy fix, I think. For an error being reported against line:Int, column:Int, scalac's output for the pointer line should be 
{code}
codeAtLine(line).slice(0,column).map{ case '\t' => '\t'; case c:Char => ' ' }+'^'
{code}
This will always put the ^ in the right place.
