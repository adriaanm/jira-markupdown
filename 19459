{code}
def spec[@specialized T : Integral](t: T) = {
  def inner(default: T = t): T = t
  inner()
}

{code}

error: Concrete method has no definition: final <synthetic> private[this] def inner$default$1$3: Object
error: Concrete method has no definition: final <synthetic> private[this] def inner$default$1$5: Object
error: Concrete method has no definition: final <synthetic> private[this] def inner$default$1$7: Object
error: Concrete method has no definition: final <synthetic> private[this] def inner$default$1$9: Object
error: Concrete method has no definition: final <synthetic> private[this] def inner$default$1$11: Object
error: Concrete method has no definition: final <synthetic> private[this] def inner$default$1$13: Object
error: Concrete method has no definition: final <synthetic> private[this] def inner$default$1$15: Object
error: Concrete method has no definition: final <synthetic> private[this] def inner$default$1$17: Object
error: Concrete method has no definition: final <synthetic> private[this] def inner$default$1$19: Object
