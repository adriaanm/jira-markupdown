A slightly simpler version of the bug is:

{code}
class A

class B[X <: B[X]]

class B0 extends B[B0]

class F[X]

implicit def a = new F[A]()

implicit def b[X <: B[X]](implicit mx: Manifest[X]) = new F[X]()

def f(implicit aa: F[A]) = println(aa)

f
{code}

The key seems to be the implicit parameter on b,
since the following compiles:

{code}
class A

class B[X <: B[X]]

class B0 extends B[B0]

class F[X]

implicit def a = new F[A]()

implicit def b[X <: B[X]] = new F[X]()

def f(implicit aa: F[A]) = println(aa)

f
{code}
