Workaround is to annotate the `window` field, `val window: Int = options.window`.

A variant on "is it an assignment or a named arg?"

Edit: with -Ytyper-debug, error unless options also has explicit type.
{noformat}
|    |    |-- parser.parse(args, Options()) EXPRmode-POLYmode-QUALmode (site: value options  in Test) 
|    |    |    |-- parser.parse BYVALmode-EXPRmode-FUNmode-POLYmode (silent: value options  in Test) 
|    |    |    |    |-- parser EXPRmode-POLYmode-QUALmode (silent: value options  in Test) 
|    |    |    |    |    \-> trial.Test.parser.type (with underlying type scopt.OptionParser[trial.Options])
|    |    |    |    \-> (args: Seq[String], init: trial.Options)Option[trial.Options] <and> (args: Seq[String])(implicit ev: scopt.Zero[trial.Options])Boolean
|    |    |    caught scala.reflect.internal.Symbols$CyclicReference: illegal cyclic reference involving value options: while typing parser.parse(args, Options())

error] /home/apm/tmp/trial/src/main/scala/Trial.scala:15: recursive value options needs type
[error]   val options = parser.parse(args, Options()).get
[error]                             ^
{noformat}
