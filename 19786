```
% scala -nowarn
Welcome to Scala version 2.11.6 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_51).
Type in expressions to have them evaluated.
Type :help for more information.

scala> import scala.tools.reflect.ToolBox; val m = reflect.runtime.currentMirror; val u = m.universe; import u._; val tb = m.mkToolBox();
import scala.tools.reflect.ToolBox
...
scala> val typed = tb.typecheck(q"trait C { val a: Object; type aa = a.type }");  typed.collect { case tt @ TypeTree() if tt.original.isInstanceOf[SingletonTypeTree] => (tt.original, tt.tpe) }
typed: tb.u.Tree =
abstract trait C extends scala.AnyRef {
  <stable> <accessor> def a: Object;
  type aa = C.this.a.type
}
res0: List[(u.Tree, u.Type)] = List((a.type,C.this.a.type))

scala> val typed = tb.typecheck(q"trait C { val a: Object {}; type aa = a.type }");  typed.collect { case tt @ TypeTree() if tt.original.isInstanceOf[SingletonTypeTree] => (tt.original, tt.tpe) }
typed: tb.u.Tree =
abstract trait C extends scala.AnyRef {
  <stable> <accessor> def a: Object;
  type aa = <expression-owner>.C.<refinement>.type
}
res1: List[(u.Tree, u.Type)] = List((a.type,<expression-owner>.C.<refinement>.type))
```
