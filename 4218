Tiark -- in case it should be useful, I call your attention to the recently rendered usable tree checker output.  It is displeased that val tmp1's owner is not who it expects.
{code}
% scalac  -Ycheck-debug -Ycheck:all  -P:continuations:enable a.scala  
Created [REF(type AnyRef)]
[Not checkable: parser]
[Not checkable: namer]
[Not checkable: packageobjects]
[Now checking: typer]
[check: typer] 19 new symbols.
unhandled impoprt: import scala.util.continuations._ in a.scala
[Now checking: superaccessors]
unhandled impoprt: import scala.util.continuations._ in a.scala
[Now checking: pickler]
unhandled impoprt: import scala.util.continuations._ in a.scala
[Now checking: refchecks]
[Now checking: selectiveanf]
[check: selectiveanf] 4 new symbols.
[check: selectiveanf] a.scala:8: Expected owner method while$$1, found method loop: scala.reflect.generic.Trees$$ValDef / @scala.util.continuations.cpsSym <synthetic> val tmp1: Unit = {
  @scala.util.continuations.cpsSym val y: Int = Test.this.capture();
  val s: Int = y;
  ()
}
[Now checking: liftcode]
[check: liftcode] a.scala:8: Expected owner method while$$1, found method loop: scala.reflect.generic.Trees$$ValDef / @scala.util.continuations.cpsSym <synthetic> val tmp1: Unit = {
  @scala.util.continuations.cpsSym val y: Int = Test.this.capture();
  val s: Int = y;
  ()
}
[Now checking: selectivecps]
[check: selectivecps] 12 new symbols.
[check: selectivecps] a.scala:10: Expected owner method while$$1, found method loop: scala.reflect.generic.Trees$$ValDef / val s: Int = y
[...]
{code}
