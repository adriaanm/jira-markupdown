If I compile Reactor.scala like so, either all by itself or in concert with other files:
```scala
% scalac -d out1 src/actors/scala/actors/Reactor.scala
% scalac -d out2 src/actors/scala/actors/*.scala
```
Then I find the following difference in the bytecode for scala.actors.Reactor$$$$anonfun$$2.
```scala
< const SI-39 = Asciz	(Lscala/actors/Reactor<TMsg;>;)V;
---
> const SI-39 = Asciz	(Lscala/actors/Reactor$$class;)V;
```
Of less importance (I think) are these differences in scala.actors.Reactor.  I expect a certain amount of skew in the compilation products is unavoidable, but this looks avoidable.
```scala
<    public final SI-97 of SI-99; //class scala/actors/Reactor$$$$anon$$2 of class scala/actors/Reactor
<    public final SI-101 of SI-99; //class scala/actors/Reactor$$$$anon$$1 of class scala/actors/Reactor
---
>    public final SI-97 of SI-99; //class scala/actors/Reactor$$$$anon$$1 of class scala/actors/Reactor
>    public final SI-101 of SI-99; //class scala/actors/Reactor$$$$anon$$2 of class scala/actors/Reactor
119,120c119,120
< const SI-96 = Asciz	scala/actors/Reactor$$$$anon$$2;
< const SI-97 = class	SI-96;	//  scala/actors/Reactor$$$$anon$$2
---
> const SI-96 = Asciz	scala/actors/Reactor$$$$anon$$1;
> const SI-97 = class	SI-96;	//  scala/actors/Reactor$$$$anon$$1
123,124c123,124
< const SI-100 = Asciz	scala/actors/Reactor$$$$anon$$1;
< const SI-101 = class	SI-100;	//  scala/actors/Reactor$$$$anon$$1
---
> const SI-100 = Asciz	scala/actors/Reactor$$$$anon$$2;
> const SI-101 = class	SI-100;	//  scala/actors/Reactor$$$$anon$$2
```
