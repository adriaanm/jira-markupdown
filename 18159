The following code:
```
import scala.math.Fractional
class Prob[N](val toN: N) extends AnyVal
object Prob {
  implicit def ProbOrdering[N](implicit N: Fractional[N]): Ordering[Prob[N]] = N.on[Prob[N]](_.toN)
}
```

generates the error:
```
bridge generated for member method apply: (x$1: org.ptflame.probability.Prob[N])x$1.toN.type forSome { val x$1: org.ptflame.probability.Prob[N] } in anonymous class $anonfun which overrides method apply: (v1: T1)R in trait Function1 clashes with definition of the member itself; both have erased type (v1: Object)Object
```

This code should work in the obvious fashion.  If `extends AnyVal` is removed, the error disappears.
