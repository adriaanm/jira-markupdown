```scala
scala> val c = { class C; new C { def foo = 1 } }
<console>:5: error: type mismatch;
 found   : $$anon(in value c) where type $$anon(in value c) <: C{def foo: Int}
 required: $$anon(in value c) forSome { type $$anon(in value c) <: C{def foo: Int}; type C <: java.lang.Object with ScalaObject }
       val c = { class C; new C { def foo = 1 } }
           ^
```

or without an anonymous class:
```scala

scala> val a = { class B; class C extends B; new C }
<console>:6: error: type mismatch;
 found   : C(in value a) where type C(in value a) <: B with ScalaObject
 required: C(in value a) forSome { type C(in value a) <: B with ScalaObject; type B <: java.lang.Object with ScalaObject }
       val a = { class B; class C extends B; new C }
           ^
```
