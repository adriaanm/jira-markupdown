The following code compiles fine, but throws a type error at run time:
```scala
case class Foo(s: String, n: Int)

def foo[A, B, C](unapply: A => Option[(B, C)], v: A) = {
  unapply(v) match {
    case Some((fst, snd)) => println("first: " + fst, " second: " + snd)
    case _ => println(":(")
  }
}

foo(Foo.unapply, Foo("this might be fun", 10)) 
```
Here's what I get (tested with RC2):
```scala
Caused by: java.lang.ClassCastException: Main$$Foo
        at Main$$$$anonfun$$foo$$1.apply(unnaplies.scala:4)
        at Main$$$$anonfun$$foo$$1.apply(unnaplies.scala:4)
        at Main$$.<init>(unnaplies.scala:10)
        at Main$$.<clinit>(unnaplies.scala)
        ... 10 more
```
