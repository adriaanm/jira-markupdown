The following code runs on Scala 2.11.8, but throws an exception in Scala 2.12.1:

{code}
trait Unwrapper[@specialized(Byte) P] {
  def unwrap: P = 0L.asInstanceOf[P]
}

object UnwrapperTest extends App {
  val u = new Unwrapper[Byte] {}
  println(u.unwrap)
}
{code}

The expected result is: 0

The exception is:

{code}
Exception in thread "main" java.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.Byte
	at scala.runtime.BoxesRunTime.unboxToByte(BoxesRunTime.java:93)
	at variant.Unwrapper.unwrap$mcB$sp(Unwrapper.scala:4)
	at variant.Unwrapper.unwrap$mcB$sp$(Unwrapper.scala:4)
	at variant.UnwrapperTest$$anon$1.unwrap$mcB$sp(UnwrapperTest.scala:5)
	at variant.UnwrapperTest$.delayedEndpoint$variant$UnwrapperTest$1(UnwrapperTest.scala:6)
	at variant.UnwrapperTest$delayedInit$body.apply(UnwrapperTest.scala:3)
	at scala.Function0.apply$mcV$sp(Function0.scala:34)
	at scala.Function0.apply$mcV$sp$(Function0.scala:34)
	at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12)
	at scala.App.$anonfun$main$1$adapted(App.scala:76)
	at scala.collection.immutable.List.foreach(List.scala:378)
	at scala.App.main(App.scala:76)
	at scala.App.main$(App.scala:74)
	at variant.UnwrapperTest$.main(UnwrapperTest.scala:3)
	at variant.UnwrapperTest.main(UnwrapperTest.scala)
{code}

This seems to be an issue with specializing: when removing the @specialized annotation the code works as expected.

Looking at the bytecode

{code}
Compiled from "Unwrapper.scala"
public interface variant.Unwrapper{
public static java.lang.Object unwrap$(variant.Unwrapper);
  Code:
   0:   aload_0
   1:   invokespecial   #16; //InterfaceMethod unwrap:()Ljava/lang/Object;
   4:   areturn

public java.lang.Object unwrap();
  Code:
   0:   lconst_0
   1:   invokestatic    #23; //Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
   4:   areturn

public static byte unwrap$mcB$sp$(variant.Unwrapper);
  Code:
   0:   aload_0
   1:   invokespecial   #30; //InterfaceMethod unwrap$mcB$sp:()B
   4:   ireturn

public byte unwrap$mcB$sp();
  Code:
   0:   aload_0
   1:   invokeinterface #16,  1; //InterfaceMethod unwrap:()Ljava/lang/Object;
   6:   invokestatic    #34; //Method scala/runtime/BoxesRunTime.unboxToByte:(Ljava/lang/Object;)B
   9:   ireturn

public static void $init$(variant.Unwrapper);
  Code:
   0:   return

}
{code}

the problem seems to be that the unwrap method returns a boxed long and the unwrap$mcB$sp() method tries to unbox the boxed long to a byte which throws a ClassCastException because BoxesRunTime.unboxToByte expects a boxed byte, not a boxed long.
