Defining an Array with 10 million elements crashes the REPL:
```scala
Welcome to Scala version 2.8.0.final (Java HotSpot(TM) 64-Bit Server VM, Java 1.6.0_20).

scala> Array.ofDim[Int](10000000)              
java.lang.OutOfMemoryError: Java heap space
	at java.lang.Integer.toString(Integer.java:310)
	at java.lang.Integer.toString(Integer.java:118)
	at java.lang.String.valueOf(String.java:2931)
	at java.lang.Integer.toString(Integer.java:722)
	at scala.runtime.ScalaRunTime$$.inner$$1(ScalaRunTime.scala:256)
	at scala.runtime.ScalaRunTime$$$$anonfun$$inner$$1$$1.apply(ScalaRunTime.scala:247)
	at scala.runtime.ScalaRunTime$$$$anonfun$$inner$$1$$1.apply(ScalaRunTime.scala:247)
	at scala.collection.TraversableLike$$$$anonfun$$map$$1.apply(TraversableLike.scala:206)
	at scala.collection.TraversableLike$$$$anonfun$$map$$1.apply(TraversableLike.scala:206)
	at scala.collection.IndexedSeqOptimized$$class.foreach(IndexedSeqOptimized.scala:34)
	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:32)
	at sca...
```

The problem seems to be the display / toString of the array:
```scala
scala> Array.ofDim[Int](10000000); "foo"
```

which does not produce output, runs fine.

There was a similar problem with ranges, which was fixed a while ago
(SI-3391).


System informarion:
```scala
$$ java -version
java version "1.6.0_20"
Java(TM) SE Runtime Environment (build 1.6.0_20-b02)
Java HotSpot(TM) 64-Bit Server VM (build 16.3-b01, mixed mode)

$$ uname -a
Linux host 2.6.31-22-generic SI-63-Ubuntu SMP Thu Aug 19 00:23:50 UTC 2010 x86_64 GNU/Linux
```
