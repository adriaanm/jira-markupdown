Actor cannot be restarted anymore (after finish, exit, kill, crash, ...)
since at least 2.8.0.RC2. This used to work with 2.7.7 and
2.8.0.Beta1.

I think this is a critical regression, since it makes actor supervision
and restart pretty much impossible.


Demo (works in REPL or script mode):

{code}
import scala.actors._

val a = new Actor { var c = 0; def act() = { c += 1; println("A: started: " + c) } }
a.start()
Thread.sleep(1000)
a.start()
Thread.sleep(1000)
a.start()
{code}

Output with 2.7.7.final and 2.8.0.Beta1-prerelease:

{code}
A: started: 1
A: started: 2
A: started: 3
{code}

Output with 2.8.0.RC2 and 2.8.0.r22016 (current snapshot):
{code}
A: started: 1
{code}


System information:
{code}
$$ java -version
java version "1.6.0_20"
Java(TM) SE Runtime Environment (build 1.6.0_20-b02)
Java HotSpot(TM) 64-Bit Server VM (build 16.3-b01, mixed mode)

$$ uname -a
Linux host 2.6.31-21-generic SI-59-Ubuntu SMP Wed Mar 24 07:28:27 UTC 2010 x86_64 GNU/Linux

$$ lsb_release -d -s
Ubuntu 9.10
{code}

