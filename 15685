REPL prints only first several lines of stacktrace. Important thing is that is does not print exception cause:
```scala
scala> def f() = throw new Exception("original important exception")   
f: ()Nothing

scala> def g() = try { f() } catch { case e => throw new Exception("wrapped exception", e) }
g: ()Nothing

scala> g()                                                                                  
java.lang.Exception: wrapped exception
        at .g(<console>:6)
        at .<init>(<console>:8)
        at .<clinit>(<console>)
        at RequestResult$$.<init>(<console>:9)
        at RequestResult$$.<clinit>(<console>)
        at RequestResult$$scala_repl_result(<console>)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:616)
        at scala.tools.nsc.Interpreter$$Request$$$$anonfun$$loadAndRun$$1$$$$anonfun$$apply$$18.apply(Interpreter.scala:981)
        at scala.tools.nsc.Interpreter$$Request$$$$anonfun$$loadAndRun$$1$$$$anonfun$$apply$$18.apply(Interpreter.scala:981)
        at scala.util.control.Exception$$Catch.apply(Exception.s...

scala> try { g() } catch { case e => e.printStackTrace() }                                  
java.lang.Exception: wrapped exception
        at line7$$object$$$$iw$$$$iw$$.g(<console>:6)
        at line10$$object$$$$iw$$$$iw$$.liftedTree1$$1(<console>:8)
        at line10$$object$$$$iw$$$$iw$$.<init>(<console>:8)
        at line10$$object$$$$iw$$$$iw$$.<clinit>(<console>)
        at RequestResult$$line10$$object$$.<init>(<console>:9)
        at RequestResult$$line10$$object$$.<clinit>(<console>)
        at RequestResult$$line10$$object.scala_repl_result(<console>)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:616)
        at scala.tools.nsc.Interpreter$$Request$$$$anonfun$$loadAndRun$$1$$$$anonfun$$apply$$18.apply(Interpreter.scala:981)
        at scala.tools.nsc.Interpreter$$Request$$$$anonfun$$loadAndRun$$1$$$$anonfun$$apply$$18.apply(Interpreter.scala:981)
        at scala.util.control.Exception$$Catch.apply(Exception.scala:79)
        at scala.tools.nsc.Interpreter$$Request$$$$anonfun$$loadAndRun$$1.apply(Interpreter.scala:980)
        at scala.tools.nsc.Interpreter$$Request$$$$anonfun$$loadAndRun$$1.apply(Interpreter.scala:980)
        at scala.util.control.Exception$$Catch.apply(Exception.scala:79)
        at scala.tools.nsc.Interpreter$$Request.loadAndRun(Interpreter.scala:979)
        at scala.tools.nsc.Interpreter.loadAndRunReq$$1(Interpreter.scala:578)
        at scala.tools.nsc.Interpreter.interpret(Interpreter.scala:597)
        at scala.tools.nsc.Interpreter.interpret(Interpreter.scala:575)
        at scala.tools.nsc.InterpreterLoop.reallyInterpret$$1(InterpreterLoop.scala:471)
        at scala.tools.nsc.InterpreterLoop.interpretStartingWith(InterpreterLoop.scala:514)
        at scala.tools.nsc.InterpreterLoop.command(InterpreterLoop.scala:361)
        at scala.tools.nsc.InterpreterLoop.processLine$$1(InterpreterLoop.scala:242)
        at scala.tools.nsc.InterpreterLoop.repl(InterpreterLoop.scala:248)
        at scala.tools.nsc.InterpreterLoop.main(InterpreterLoop.scala:558)
        at scala.tools.nsc.MainGenericRunner$$.main(MainGenericRunner.scala:72)
        at scala.tools.nsc.MainGenericRunner.main(MainGenericRunner.scala)
Caused by: java.lang.Exception: original important exception
        at line6$$object$$$$iw$$$$iw$$.f(<console>:5)
        ... 29 more
```
