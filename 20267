scalac-2.12 crashes with the following code.
It also affects 2.11 but 2.9 is fine.
```scala
$ scalac -version
Scala compiler version 2.12.0-20161028-204919-0666377 -- Copyright 2002-2016, LAMP/EPFL and Lightbend, Inc.

$ scalac abc.scala
exception when typing scala.reflect.`package`.classTag()/class scala.reflect.internal.Trees$ApplyToImplicitArgs
not enough arguments for method classTag: (ctag: scala.reflect.ClassTag)scala.reflect.ClassTag.
Unspecified value parameter ctag. in file abc.scala
scala.reflect.internal.Types$TypeError: not enough arguments for method classTag: (ctag: scala.reflect.ClassTag)scala.reflect.ClassTag.
Unspecified value parameter ctag.
        at scala.tools.nsc.typechecker.Contexts$ThrowingReporter.handleError(Contexts.scala:1374)
        at scala.tools.nsc.typechecker.Contexts$ContextReporter.issue(Contexts.scala:1226)
        at scala.tools.nsc.typechecker.Contexts$Context.issue(Contexts.scala:575)
        at scala.tools.nsc.typechecker.Typers$Typer.duplErrorTree$1(Typers.scala:3255)
        at scala.tools.nsc.typechecker.Typers$Typer.$anonfun$doTypedApply$26(Typers.scala:3522)
        at scala.reflect.internal.Trees$TreeContextApiImpl.orElse(Trees.scala:104)
        at scala.tools.nsc.typechecker.Typers$Typer.tryNamesDefaults$1(Typers.scala:3522)
        at scala.tools.nsc.typechecker.Typers$Typer.doTypedApply(Typers.scala:3533)
        at scala.tools.nsc.typechecker.Typers$Typer.normalTypedApply$1(Typers.scala:4652)
        at scala.tools.nsc.typechecker.Typers$Typer.typedApply$1(Typers.scala:4686)
        at scala.tools.nsc.typechecker.Typers$Typer.typedInAnyMode$1(Typers.scala:5452)
    <snipped>
error: unrecoverable error
exception when typing class Test extends Object {
  def <init>(): Test = {
    Test.super.<init>();
    ()
  };
  scala.reflect.`package`.classTag();
  def testMethodInvocation(instance: Object): Unit = ();
  def testNestedClass(name: String): Unit = ();
  Test.this.testNestedClass("B1");
  def testNestedModule(name: String): Unit = ();
  Test.this.testNestedModule("B6")
}
exception when typing package <empty> {
  class Test extends Object {
    def <init>(): Test = {
      Test.super.<init>();
      ()
    };
    scala.reflect.`package`.classTag();
    def testMethodInvocation(instance: Object): Unit = ();
    def testNestedClass(name: String): Unit = ();
    Test.this.testNestedClass("B1");
    def testNestedModule(name: String): Unit = ();
    Test.this.testNestedModule("B6")
  }
}
<snipped>


$ cat abc.scala
import reflect.runtime.{currentMirror => cm}
import reflect.{classTag}
class Test {
  (classTag[testMethodInvocation.type])
  def testMethodInvocation(instance: Any) {}
  def testNestedClass(name: String) {}
  testNestedClass("B1")
  def testNestedModule(name: String) {}
  testNestedModule("B6")
}
```
