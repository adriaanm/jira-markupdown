Similar settings here (now):
```scala
-vmargs
-Xdock:icon=../Resources/Eclipse.icns
-XstartOnFirstThread
-Xms256m
-Xmx784m
-Xss1m
-XX:MaxPermSize=256m
```

(Note that, strictly speaking, we don't know for sure that 1m is an increased stack size, since the default is a platform-dependent secret, and Google's information is stale.  But it is at the upper limit of "default stack sizes" on all the platforms for which I could find information.)

This did not change the two timeouts on startup.  I poked around Eclipse's many preferences, and discovered that someone-not-me had disabled Content Assist (this is not something you would do accidentally).  Was this a side-effect of the stack overflow that I saw (once)?  I did check to be sure that this did not come from some setting file that might have inadvertently been checked in to the repository, and that appeared to not be the cause (it is an Eclipse option, not a Project option, so this is a consistent discovery).

To change Content Assist (on MacOS):

Eclipse -> Preferences -> Java -> Editor -> Content Assist -> Advanced

And when I click "Restore Defaults", the settings change, and then I have my content assist back.  I will watch for any changes.

The restored defaults do survive shutdown and startup, including the two initialization timeouts reported above.
