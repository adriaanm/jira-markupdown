I did not mention it explicitely but replacing `transformTree` with:
```scala
  def transformTree(tree: Tree): Any = tree match {
    case Node1(_) => ???
  }
```

Also produces the warnings you'd expect:
```scala
test2.scala:14: warning: match may not be exhaustive.
It would fail on the following input: Node2()
  def transformTree(tree: Tree): Any = tree match {
                                       ^
one warning found
```
Which is why I'm saying that having `unapplySeq` without `unapply` somehow silences even unrelated exhaustivity warnings
