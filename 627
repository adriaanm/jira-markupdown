Adding support for writing actors using `Responder`s has been discussed for a long time now. (See for example http://article.gmane.org/gmane.comp.lang.scala.user/1350/.)

In r14801 I committed initial support for that. It generalizes the proposals discussed in the mailing list thread referenced above by introducing the `async` method (not sure whether the name is ideal). This method can be used to make methods like `react` usable inside `Responder`s. I attach the source code for some examples that demonstrates the usage.

For convenience there is also a `reactor` factory method for creating `Responder`-based actors. It takes a `Responder` as argument.

An idea that I like is to make `Future`s into `Responder`s. Note that this makes the `!%` method that you propose obsolete: your above example can be written as follows:
```scala
val a = reactor {
  for {
    x <- adder !! Add(1, 2);
    y <- adder !! Add(3, 4);
    z <- adder !! Add(x.asInstanceOf[Int], y.asInstanceOf[Int]);
    if   exec(println("Sum is: " + z))
  } yield {}
}
```

I invite people to try out this extension, and give feedback on the mailing lists.

I close this ticket now.
