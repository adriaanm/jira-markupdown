simplified

{code}
object T {
  case class N[A](val n: A)
  implicit def anyToN[A](a: A): N[A] = N(a)

  def foo[A](a: N[A]*) = 0
  def foo[A](s: String)(a: N[A]*) = 1

  foo(Seq(1, 2): _*)
}
{code}

the invocation is transformed by the typer to

{code}
foo[Int](T.this.anyToN[Int]((collection.this.Seq.apply[Int](1, 2): _*)))
{code}
