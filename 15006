I'm seeing auto-complete weirdness in r20833.

This:

{code}
class B {
  def a(i: Int) = i;
  def b() = {
    println(a(1).toString) // a(1)
    List(1, 2).foreach { i =>
      println(a(i).toString) // a(i)
    }
  }
}
{code}

As it currently is, if I remove `a(i).toString` and retype `a(i).`, nothing pops up. "tree not found" happens in the console. If I type `a(i).t<Ctrl-Space>`, the list pops up.

As it currently is, if I remove `a(1).toString`, and retype `a(1).`, nothing pops up. "tree not found" happens in the console. If I type `a(1).t<Ctrl-Space>`, this list then pops up.

Even stranger, if I comment out the for loop, and just have `def b()` be one line of `a(1).` /then/ it pops up right away.

Something about having the foreach in there is messing up auto completion not only within the foreach, but outside of it too. At least from what I can tell.
