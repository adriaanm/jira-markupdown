I took a quick look at this.  The stack trace when it hangs is:
```scala
        at scala.tools.nsc.util.package$$$$anonfun$$waitingForThreads$$1.apply(package.scala:30)
        at scala.tools.nsc.util.package$$$$anonfun$$waitingForThreads$$1.apply(package.scala:30)
        at scala.collection.immutable.Set$$Set2.foreach(Set.scala:101)
        at scala.tools.nsc.util.package$$.waitingForThreads(package.scala:30)
        at scala.tools.nsc.ScriptRunner.withCompiledScript(ScriptRunner.scala:186)
        at scala.tools.nsc.ScriptRunner.runCommand(ScriptRunner.scala:274)
        at scala.tools.nsc.MainGenericRunner$$.process(MainGenericRunner.scala:71)
        at scala.tools.nsc.MainGenericRunner$$.main(MainGenericRunner.scala:32)
        at scala.tools.nsc.MainGenericRunner.main(MainGenericRunner.scala)
```

and there are two threads reading the output of the forked fsc.  This might be why it doesn't exit.  In fact, it looks like fsc shuts down when you do a ctrl+C on the first command.  The reason `fsc -reset` works might be that it starts up an fsc instance separately.

Perhaps the switch to using sys.process is the problem and not something related to a resident compiler instance?
