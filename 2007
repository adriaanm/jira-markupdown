Reopening since I'm still seeing errors for 
```scala
public interface A<T> {
    T get();
}

public abstract class B implements A {}

object D {
  type Q = X forSome { type X; }
}

class C extends B {
  this: A[D.Q] =>
  def get = "hello world"
}

object Test extends Application {
  val c = new C
}
```

With Scala compiler version 2.8.0.r18604-b20090830020201 this results in 
```scala
Exception in thread "main" java.lang.AssertionError: assertion failed: michid.iterator.A[T]
at scala.Predef$$.assert(Predef.scala:107)
at scala.tools.nsc.symtab.Types$$TypeRef.transform(Types.scala:1417)
at scala.tools.nsc.symtab.Types$$TypeRef$$$$anonfun$$baseTypeSeq$$3.apply(Types.scala:1588)
at scala.tools.nsc.symtab.Types$$TypeRef$$$$anonfun$$baseTypeSeq$$3.apply(Types.scala:1588)
at scala.tools.nsc.symtab.BaseTypeSeqs$$BaseTypeSeq.map(BaseTypeSeqs.scala:114)
...
```

With Scala compiler version 2.7.5.final this results in
```scala
Exception in thread "main" java.lang.NullPointerException
at scala.tools.nsc.symtab.Types$$SimpleTypeProxy$$class.isHigherKinded(Types.scala:141)
at scala.tools.nsc.symtab.Types$$SingletonType.isHigherKinded(Types.scala:853)
at scala.tools.nsc.symtab.Types$$class.gd43$$1(Types.scala:3685)
at scala.tools.nsc.symtab.Types$$class.isSubType0(Types.scala:3605)
at scala.tools.nsc.symtab.Types$$class.isSubType(Types.scala:3571)
at scala.tools.nsc.symtab.SymbolTable.isSubType(SymbolTable.scala:12)
at scala.tools.nsc.symtab.Types$$Type.$$less$$colon$$less(Types.scala:502)
...
```
