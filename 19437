I guess this feature never left LAMP discussion room as I cannot find any announcement or reference to it, only code that should implement it. So marking as Minor :-)
{code}class A extends Product1[Int] {
	def _1 = 1
	def isEmpty = false // used by scalac
	def isDefined = !isEmpty // used by dotty
	def canEqual(a: Any) = true
}

object d{
  def unapply(a: Any) = new A
  val p: Any = ???
  val f = p match {case d(1) => true; case _ => false}
}{code}
{code}
NBmatching.scala:11: error: type mismatch;
 found   : Int(1)
 required: <notype>
  val f = p match {case d(1) => true; case _ => false}
                          ^
one error found
{code}
This is valid code for dotty and actually shares implementation with matching based on case classes(which are Products in dotty)
