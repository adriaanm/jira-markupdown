It's not entirely done yet, but I can see you're not using trunk, because you can use Long:
```scala
scala> (Math.MAX_INT.toLong << 20) to ((Math.MAX_INT.toLong << 20) + 100) by 10
res16: GenericRange.Inclusive[Long] = 2251799812636672, 2251799812636682, 
2251799812636692, 2251799812636702, 2251799812636712, 2251799812636722,
2251799812636732, 2251799812636742, 2251799812636752, 2251799812636762, 
2251799812636772
```

Or for that matter, BigInt...
```scala
scala> (BigInt(Math.MAX_INT) << 100) to ((BigInt(Math.MAX_INT) << 100) + 5)
res17: GenericRange.Inclusive[BigInt] = 
2722258934099857107478767457957442486272,
2722258934099857107478767457957442486273, 
2722258934099857107478767457957442486274, 
2722258934099857107478767457957442486275, 
2722258934099857107478767457957442486276, 
2722258934099857107478767457957442486277
```
Or even Double:
```scala
scala> 0.0 to 1.0 by 0.025
res21: GenericRange.Inclusive[Double] = GenericRange.Inclusive(start=0.0, end=1.0, step=0.025)

scala> res21 sum
res22: Double = 20.5
```
