Thank you for responding my sudden request.

XORing with random values seems good.
Instead of using a random value, we could choose the value that makes the improved hash code of the element added first time to be 0xc0000000 (or some higher value):
```scala
protected var mask: Int = _

def addEntry(elem: A) : Boolean = {
  if (tableSize == 0) {
    mask = ...
    // improve(mask ^ elem.hashCode) == 0xc0000000
  }

  ...
}
```

This guarantee the element to be placed at the third quater of the table, ensureing the value changes every time.
