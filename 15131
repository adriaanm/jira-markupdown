These should generate the same bytecode now that we have language-defined that nothing can be equal to null but null.
```scala
object o {
  def f1(x: AnyRef) = if (x ne null) 1 else 2
  def f2(x: AnyRef) = if (x != null) 1 else 2
}
```
Right now instead we get this:
```scala
public int f1(java.lang.Object);
  Code:
   Stack=1, Locals=2, Args_size=2
   0:	aload_1
   1:	ifnull	8
   4:	iconst_1
   5:	goto	9
   8:	iconst_2
   9:	ireturn

public int f2(java.lang.Object);
  Code:
   Stack=2, Locals=3, Args_size=2
   0:	aload_1
   1:	dup
   2:	astore_2
   3:	ifnull	14
   6:	aload_2
   7:	aconst_null
   8:	invokevirtual	SI-27; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   11:	ifeq	18
   14:	iconst_2
   15:	goto	19
   18:	iconst_1
   19:	ireturn
```
Even under -optimise it calls equals.
