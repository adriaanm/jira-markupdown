How about
{code}
f[Int](5)
{code}
That's what "first of all this happens trying to infer the type parameters" means, or implies, or it's what we infer from that.  It's inferences all the way down.

You, the caller, can help by specifying type params and types of value args.  See his examples.

The rule of as-specificity, or as-specific-asness, or as-specific-asidity, is just to apply each method to the arg types of the other method.  If one applies but the other doesn't, that method is more general and the other is more specific.  This is easy to see in a case of m(A) and m(B), B <: A, but it's the same rule that applies in arcane cases.

Friday afternoon is the best time for this sort of thing, before family and religious obligations take over, or, if you prefer, after enough beer to understand the spec and before enough beer no longer to understand the spec.

