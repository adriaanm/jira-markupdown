The error message is similar to SI-4365, but this is not code or file order dependent that I have determined.
{code}
class Num[T] {
  def mkOps = new Ops
  class Ops { def +++(rhs: T) = () }
}

class A {
  implicit def infixOps[T, CC[X] <: Num[X]](lhs: T)(implicit num: CC[T]) = num.mkOps
  implicit val n1 = new Num[Int] { }
  println(5 +++ 5)
}
{code}
{noformat}
T in class Num cannot be instantiated from ?CC
	at scala.reflect.internal.SymbolTable.abort(SymbolTable.scala:43)
	at scala.tools.nsc.Global.abort(Global.scala:225)
	at scala.reflect.internal.Types$AsSeenFromMap.throwError$1(Types.scala:4318)
	at scala.reflect.internal.Types$AsSeenFromMap.toInstance$1(Types.scala:4372)
	at scala.reflect.internal.Types$AsSeenFromMap.apply(Types.scala:4376)
	at scala.reflect.internal.Types$TypeMap$$anonfun$noChangeToSymbols$2.apply(Types.scala:4011)
	at scala.reflect.internal.Types$TypeMap$$anonfun$noChangeToSymbols$2.apply(Types.scala:4011)
	at scala.collection.LinearSeqOptimized$class.forall(LinearSeqOptimized.scala:69)
{noformat}
