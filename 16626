{{immutable.Range.foreach()}} invokes its argument's {{apply()}} twice. When compiling with -optimize, that leads to inlining twice "the loop body" (if it gets inlined at all, for the max size threshold might be surpassed due to the duplicate inlining). 

A formulation of {{immutable.Range.foreach()}} invoking its argument's {{apply()}} just once is: 

{noformat}
if (length > 0) {
  val sentinel = last
  var closuVar = start
  var loopCond = true
  while ( loopCond ) {
    f(closuVar)
    if(closuVar == sentinel) loopCond = false
    else closuVar += step
  }
}
{noformat}

There can be other places in the collections library that exhibit a similar pattern. 

