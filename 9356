I've just switched to Scala 2.11 and just realized that {{NotNull}} has been deprecated. In fact, it appears that it has been more than deprecated, since it's no longer possible to specify {{-Ynotnull}} as a compiler option. Thanks for the discussion and heads-up! ;-)

I understand and appreciate that this feature was experimental and never fully implemented. Nevertheless, I found it extremely valuable: the ability to enforce non-*null* references for certain types is something Scala can and should support. I don't particularly want to either trap *null* references, nor do I want to accommodate {{NullPointerException}} exceptions being thrown all over the place, so having base classes extend {{NotNull}} was a simpler, neater alternative - assuming that it actually worked, of course. Instead, a compile-time error that you cannot initialize a {{NotNull}} instance with *null* is elegant, simple and straightforward.

So, given that {{NotNull}} has been nuked, is there any proposed alternative that doesn't involve either utilizing a ton of _check-not-null_ boilerplate or {{NullPointerException}} handling - including all the cumbersome overhead of extra unit tests to guarantee that null references are being handled correctly?
