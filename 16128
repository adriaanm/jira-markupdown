=== What steps will reproduce the problem (please be specific and use wikiformatting)? ===
The following code:
```scala
object Flatten {

  def gen(depth: Int, span: Int): Iterator[Int] = {
    if (depth == 0) {
      (1 to span).iterator
    } else {
      ((1 to span) map { _ => gen(depth - 1, span) }).iterator.flatten
    }
  }

  def main(args: Array[String]) {
    printf("%d\n", gen(1, 1024).length)
  }

}
```

takes about 4 seconds to run on Scala 2.8.1.  On 2.9.0 it takes a little over 11 minutes.  Behavior is similar for small numbers instead of the '1024' for span.

A stack trace shows a large chain of calls through the Iterator made by `++.next` and `hasNext`.
