I've noticed on my Windows 7 64 bits box that the issue is intermittent/not deterministic. It can manifest once then it works fine for many runs. It makes it difficult to bisect for when the problem originated. When it does happen I can get a stack trace and memory dump. The only semi suspicious thing I can find is 
{noformat}
"pool-2-thread-1" prio=6 tid=0x000000001be03000 nid=0xdac waiting on condition [0x000000001c37f000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x000000000a633618> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:619)

   Locked ownable synchronizers:
	- None
{noformat}
Using the Eclipse Memory Analyzer, it seems this pool executor has no task queued up and its {{LinkedBlockingQueue}} is empty. All the threads are showing only {{java.lang}} or {{java.util}} method calls. 
