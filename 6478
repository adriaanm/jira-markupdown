Surprisingly, this bug seems to be a mirage.  It's only due to their being in the empty package, and whether bug or not, empty package classes aren't visible through definitions.getClass.  If I put them both in the same package there's no warning and I can see it inlined:
```scala
public void baz();
  Code:
   Stack=2, Locals=2, Args_size=1
   0:	new	#7; //class bip/A
   3:	dup
   4:	invokespecial	#11; //Method bip/A."<init>":()V
   7:	astore_1
   8:	aload_1
   9:	invokevirtual	#15; //Method bip/A.inner:()Lbip/A$Inner;
   12:	pop
   13:	getstatic	#21; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   16:	bipush	7
   18:	invokestatic	#27; //Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   21:	invokevirtual	#31; //Method scala/Predef$.println:(Ljava/lang/Object;)V
   24:	return
```
So I'm closing this, but if there is still an issue which is being obscured by the empty package thing let me know.
