@Yuvi I understand that there a different notions of type safety, but in the context of a statically typed language such as Java or Scala it is pretty common to view unexpected runtime type errors as type safety violations.  

Semantics aside (I'm more concerned with the issue than with the title), the problem with these constructs is that there is no clue in the syntax that unchecked matching is going on and that a runtime error may arise. Furthermore, there is no reason that unchecked matching *should be* going on (in the very common, specific cases considered here, such as tuples and case classes). 

Having a match error occur in what appears to be a perfectly safe assignment is similar to having something like a MissingMethodError occur on a method call when it is known at compile time that the method is not a member of the target object's type.
