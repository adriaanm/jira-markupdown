I can define this object Test without getting an error:
```scala
  object Test {
    def f(x: Integer)(y: Boolean) = ???
    def f(x: Integer)(y: String) = ???
  }
```

However, when I want to use the functions, I can't:
```scala
  Test.f(3)(true)     // Error: ambiguous reference to overloaded definition
  Test.f(3)("hello")  // Error: ambiguous reference to overloaded definition
```

It makes sense for me that this is impossible, but I would like to get an error already when I define f, not only when I want to use it.

Btw this happened in RxScala: There, this method:

https://github.com/Netflix/RxJava/blob/13cd6a9b1813c5dbe5fdd538f18a5f3a2e31e46f/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Scheduler.scala#L122

clashes with this one:

https://github.com/Netflix/RxJava/blob/13cd6a9b1813c5dbe5fdd538f18a5f3a2e31e46f/language-adaptors/rxjava-scala/src/main/scala/rx/lang/scala/Scheduler.scala#L158 

and no error was emitted.
