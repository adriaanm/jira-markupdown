```scala
object Test {
  trait T1[-A <: AnyRef]
  trait T2[-A >: AnyRef]
  trait T3[ A <: AnyRef]
  trait T4[ A >: AnyRef]
  trait T5[+A <: AnyRef]
  trait T6[+A >: AnyRef]
  
  def f1(x: T1[_]) = x
  def f2(x: T2[_]) = x
  def f3(x: T3[_]) = x
  def f4(x: T4[_]) = x
  def f5(x: T5[_]) = x
  def f6(x: T6[_]) = x
  
  // Only f5 fails to compile:
  //   ./a.scala:13: error: type arguments [Any] do not conform to trait T5's type parameter bounds [+A <: AnyRef]
  //     def f5(x: T5[_]) = x
  //         ^
  //   one error found
}
```
