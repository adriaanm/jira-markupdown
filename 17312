While this is fine:
```scala
scala> val res = scala.util.Success(1).flatMap(x => throw new Exception)
res: scala.util.Try[Nothing] = Failure(java.lang.Exception)
```

The documentation seems to suggest that this is not expected (the exception should be thrown instead):
```scala
scala> val res = scala.util.Success(1).flatMap(x => throw new ThreadDeath)
res: scala.util.Try[Nothing] = Failure(java.lang.ThreadDeath)
```

Docs say that:
 * ''Note'': only non-fatal exceptions are caught by the combinators on `Try` (see [[scala.util.control.NonFatal]]).
 * Serious system errors, on the other hand, will be thrown.

Within class `Success`, the bug seems to be here (comment added):
```scala
  def flatMap[U](f: T => Try[U]): Try[U] =
    try f(value)
    catch {
      case e => Failure(e) //XXX This should be case NonFatal(e)!
    }
```
