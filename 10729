note the "solving: type G" (undet_s printing context.underparams) that appears in the -Ytyper-debug output for a successful run, but not for the failing one:
```diff
+|    |    |    |-- convertGenTraversableOnceToCombinable BYVALmode-EXPRmode-FUNmode-POLYmode (silent: value <local OrSpec> in OrSpec) implicits disabled
+|    |    |    |    [adapt] [G, ERR, TRAVONCE[+e] <: scala.collection.GenTraversableO... adapted to [G, ERR, TRAVONCE[+e] <: scala.collection.GenTraversableO...
+|    |    |    |    \-> (xs: TRAVONCE[Or[G,Every[ERR]]])(implicit cbf: scala.collection.generic.CanBuildFrom[TRAVONCE[Or[G,Every[ERR]]],G,TRAVONCE[G]])Combinable[G,ERR,TRAVONCE]
+|    |    |    solving for (G: ?G, ERR: ?ERR, TRAVONCE: ?TRAVONCE)
 |    |    |    |-- convertGenSetToCombinable BYVALmode-EXPRmode-FUNmode-POLYmode (silent: value <local OrSpec> in OrSpec) implicits disabled
 |    |    |    |    [adapt] [G, ERR, X, SET[e] <: scala.collection.GenSet[e]](xs: SET... adapted to [G, ERR, X, SET[e] <: scala.collection.GenSet[e]](xs: SET...
 |    |    |    |    \-> (xs: SET[X with Or[G,Every[ERR]]])(implicit cbf: scala.collection.generic.CanBuildFrom[SET[X with Or[G,Every[ERR]]],G,SET[G]])Combinable[G,ERR,SET]
@@ -50,22 +40,28 @@
 |    |    |    [adapt] [A]=> scala.collection.generic.CanBuildFrom[scala.collect... adapted to [A]=> scala.collection.generic.CanBuildFrom[scala.collect... based on pt scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[Bad[Nothing,One[String]] with Or[G,Every[String]]],G,scala.collection.immutable.Set[G]]
 |    |    |    solving for (G: ?G)
 |    |    |    [adapt] convertGenSetToCombinable adapted to [G, ERR, X, SET[e] <: scala.collection.GenSet[e]](xs: SET... based on pt scala.collection.immutable.Set[Bad[Nothing,One[String]]] => ?{def combined: ?}
-|    |    |    solving for (G: ?G, ERR: ?ERR, TRAVONCE: ?TRAVONCE)
-|    |    |    solving for (G: ?G, ERR: ?ERR, X: ?X, SET: ?SET)
-|    |    |    |-- convertGenTraversableOnceToCombinable BYVALmode-EXPRmode-FUNmode-POLYmode (silent solving: type G: value <local OrSpec> in OrSpec) implicits disabled
-|    |    |    |    [adapt] [G, ERR, TRAVONCE[+e] <: scala.collection.GenTraversableO... adapted to [G, ERR, TRAVONCE[+e] <: scala.collection.GenTraversableO...
-|    |    |    |    \-> (xs: TRAVONCE[Or[G,Every[ERR]]])(implicit cbf: scala.collection.generic.CanBuildFrom[TRAVONCE[Or[G,Every[ERR]]],G,TRAVONCE[G]])Combinable[G,ERR,TRAVONCE]
-|    |    |    solving for (G: ?G, G: ?G, ERR: ?ERR, TRAVONCE: ?TRAVONCE)
-|    |    |    |-- [G, ERR, X, SET[e] <: scala.collection.GenSet[e]](xs: SET... EXPRmode-POLYmode-QUALmode (silent: value <local OrSpec> in OrSpec) 
+|    |    |    |-- [G, ERR, X, SET[e] <: scala.collection.GenSet[e]](xs: SET... EXPRmode-POLYmode-QUALmode (silent solving: type G: value <local OrSpec> in OrSpec) 
+|    |    |    |    solving for (G: ?G)
+|    |    |    |    solving for (G: ?G)
 |    |    |    |    solving for (A: ?A)
 |    |    |    |    [adapt] [A]=> scala.collection.generic.CanBuildFrom[scala.collect... adapted to [A]=> scala.collection.generic.CanBuildFrom[scala.collect... based on pt scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[Bad[Nothing,One[String]] with Or[G,Every[String]]],G,scala.collection.immutable.Set[G]]
-|    |    |    |    |-- [G, ERR, X, SET[e] <: scala.collection.GenSet[e]](xs: SET... EXPRmode-POLYmode-QUALmode (silent: value <local OrSpec> in OrSpec) 
+|    |    |    |    solving for (G: ?G)
+|    |    |    |    |-- [G, ERR, X, SET[e] <: scala.collection.GenSet[e]](xs: SET... EXPRmode-POLYmode-QUALmode (silent solving: type G: value <local OrSpec> in OrSpec) 
+|    |    |    |    |    solving for (G: ?G)
 |    |    |    |    |    \-> Combinable[G,String,scala.collection.immutable.Set]
 |    |    |    |    [adapt] [G, ERR, X, SET[e] <: scala.collection.GenSet[e]](xs: SET... adapted to [G, ERR, X, SET[e] <: scala.collection.GenSet[e]](xs: SET...
 |    |    |    |    \-> Combinable[G,String,scala.collection.immutable.Set]
-|    |    |    |-- OrSpec.this.convertGenSetToCombinable[G, String, Bad[Noth... BYVALmode-EXPRmode (site: value <local OrSpec> in OrSpec) 
-|    |    |    |    \-> Or[scala.collection.immutable.Set[G],Every[String]]
-|    |    |    \-> Or[scala.collection.immutable.Set[G],Every[String]]
+/Users/adriaan/Desktop/bugs/t8341_nok.scala:43: error: type mismatch;
+ found   : scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set.Coll,Nothing,scala.collection.immutable.Set[Nothing]]
+    (which expands to)  scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[_],Nothing,scala.collection.immutable.Set[Nothing]]
+ required: scala.collection.generic.CanBuildFrom[scala.collection.immutable.Set[Bad[Nothing,One[String]] with Or[G,Every[String]]],G,scala.collection.immutable.Set[G]]
+    Set(Bad(One("oops"))).combined
+       ^
+/Users/adriaan/Desktop/bugs/t8341_nok.scala:43: error: value combined is not a member of scala.collection.immutable.Set[Bad[Nothing,One[String]]]
+    Set(Bad(One("oops"))).combined
+                          ^
+|    |    |    solving for (G: ?G)
+|    |    |    \-> <error>
```
