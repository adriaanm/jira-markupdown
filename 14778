The eclipse plug-in currently folds import blocks wrong, in that it spans the folded part from the toplevel imports to any further nested import. For example:

import _root_.java.awt.{ BorderLayout, Color, FlowLayout, Graphics, Graphics2D,
	GridLayout }
import _root_.java.awt.event.{ ActionEvent, ActionListener, MouseAdapter, MouseEvent }
import _root_.javax.swing.{ Box, JButton, JCheckBox, JComponent, JFrame, JLabel, JPanel, JTextField }

object Test {
	def main( args : Array[ String ]) : Unit = {
       	java.awt.EventQueue.invokeLater( new Runnable {
       		def run = {
       			testSelection
       		}
       	})
	}
	
	def testSelection {
		val frame		= new JFrame( "Tests" )
		val cp			= frame.getContentPane
		
		val tests : List[ Tuple2[ String, () => Unit ]] =
			List( "Lexicographic Tree" -> (() => lexiTest),
			      "R-Tree" -> (() => rtreeTest),
			      "Confluent R-Tree" -> (() => crtreeTest),
			      "Confluent Linked List" -> (() => FatTest2.perform)
			       )

		cp.setLayout( new GridLayout( tests.size, 1 ))
			      
		tests.foreach( (tuple) => {
			val (name, func) = tuple
			val ggButton = new JButton( name )
			ggButton.addActionListener( new ActionListener {
				def actionPerformed( e: ActionEvent ) = func.apply
			})
			cp.add( ggButton )
		})
		
		frame.pack
		frame.setResizable( false )
		frame.setLocationRelativeTo( null )
		frame.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE )
		frame.setVisible( true )
	}
	
	def rtreeTest {
		import Implicits._
                // ...
        }
}

wrongly folds up to import Implicits._. Expected behaviour: just fold the initial imports up to just before "object Test" begins.
