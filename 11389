{code}
scala> def foo(a: Int, b: Int, c: Int) = a + b +c
foo: (a: Int, b: Int, c: Int)Int

scala> {(a, b, c) => foo(a, b, c)}
res5: (Int, Int, Int) => Int = <function3>

scala> {(a, b, c) => foo(a, b, 0)}
<console>:9: error: missing parameter type
              {(a, b, c) => foo(a, b, 0)}
                ^
<console>:9: error: missing parameter type
              {(a, b, c) => foo(a, b, 0)}
                   ^
<console>:9: error: missing parameter type
              {(a, b, c) => foo(a, b, 0)}
                      ^
{code}

Relevant code in the typer that makes the first case work:

https://github.com/scala/scala/blob/v2.11.2/src/compiler/scala/tools/nsc/typechecker/Typers.scala#L2875-L2895

Note that this behaviour is not specified, one would actually expect `(a, b, c) => foo(a, b ,c)` to fail uniformly.
