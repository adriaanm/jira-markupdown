{noformat}
cat sandbox/t6288.scala && squalac -Xprint-pos -Xprint:patmat sandbox/t6288.scala 
object Case3 {
  def unapply(z: Any): Option[Int] = Some(-1)
}

object Test extends App {
  def test(x: Any) {
    x match {
      case Case3(nr) => ()
    }
  }

  test(0)
}
[[syntax trees at end of                    patmat]] // t6288.scala
[7]package [7]<empty> {
  [7]object Case3 extends [13][64]scala.AnyRef {
    [64]def <init>(): [13]Case3.type = [64]{
      [64][64][64]Case3.super.<init>();
      [13]()
    };
    [21]def unapply([29]z: [32]<type: [32]scala.Any>): [21]Option[Int] = [56][52][52]scala.Some.apply[[52]Int]([58]-1)
  };
  [71]object Test extends [76][84]Object with [84]<type: [84]scala.App> {
    [84]def <init>(): [76]Test.type = [84]{
      [84][84][84]Test.super.<init>();
      [76]()
    };
    [96]def test([101]x: [104]<type: [104]scala.Any>): [96]Unit = [115]{
      [115]case <synthetic> val x1: [115]Any = [115]x;
      [115]case5()[136]{
        [136]<synthetic> val o7: [136]Option[Int] = [136][136]Case3.unapply([115]x1);
        [136]if ([136]o7.isEmpty.unary_!)
          [136]{
            [142]val nr: [142]Int = [115]o7.get;
            [149][149]matchEnd4([149]())
          }
        else
          [136][136]case6()
      };
      [115]case6(){
        [115][115]matchEnd4([115]throw [115][115][115]new [115]MatchError([115]x1))
      };
      [115]matchEnd4(x: [NoPosition]Unit){
        [115]x
      }
    };
    [169][165][165]Test.this.test([170]0)
  }
}
{noformat}

Looks like dereferencing the scrutinee is wrongly positioned: {noformat}[136][136]Case3.unapply([115]x1);{noformat}
