As another test case, here's another common signature from Java annotations.

As discussed: http://stackoverflow.com/questions/2294598/how-to-get-an-java-lang-class-of-a-scala-object-for-an-annotation-argument

{code}
~/code/scratch/annotation: cat Remote.java 
package test;

@interface Remote {
  Class<?>[] value();
}
 ~/code/scratch/annotation: cat RemoteRaw.java 

package test;

@interface RemoteRaw {
  Class[] value();
}

 ~/code/scratch/annotation: cat UseRemote.scala 
package test

trait T

@Remote(value = Array(classOf[T])) // works
@RemoteRaw(value = Array(classOf[T])) // fails
class UseRemote 

~/code/scratch/annotation: scalac -d out Remote.java RemoteRaw.java UseRemote.scala 
UseRemote.scala:6: error: type mismatch;
 found   : java.lang.Class[test.T](classOf[test.T])
 required: java.lang.Class
@RemoteRaw(value = Array(classOf[T])) // fails
                                ^
one error found
{code}
