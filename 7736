"Yep, this is by design, since you might want to reify a complex type that has a teeny-tiny reference to an unresolved type parameter. In that case this behaviour is useful."

Do we not see that the audience for reifying unresolved type parameters is such a small fraction of the audience for reifying the actual explicit type argument that it is lost in the noise.  To have a trap like this in place, in the default scope, on the basis that it's useful for that tiny audience... it is emblematic of the most common criticism of scala.
