I propose the following rewrite of that method as a fix:
```scala
  def transform(ns: Seq[Node]): Seq[Node] = {
    val xs = ns.toStream map transform
    val (xs1, xs2) = xs zip ns span { case (x, n) => unchanged(n, x) }
    
    if (xs2.isEmpty) ns
    else (xs1 map (_._2)) ++ xs2.head._1 ++ transform(ns drop (xs1.length + 1))
  }
```

I considered modifying `unchanged`, but, as a protected method, it is part of the API. Also, `ns take xs1.length` might be better than `xs1 map (_._2)`. This whole method could probably be made more efficient with a carefully constructed while loop, I think, but this, at least, solves the complexity problem.

