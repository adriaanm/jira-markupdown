The following code does not compile
```scala
trait A[@specialized(Int) T] {
  def value: T
  def getWith[@specialized(Int) Z](f: T => Z) = f(value)
}
class C extends A[Int] {
  var value = 10
  override def getWith[@specialized(Int) Z](f: Int => Z) = f(value)
}
```
yielding the error
```scala
<console>:8: error: double definition:
method getWith:[Z](f: (Int) => Z)Z and
method getWith:[Z](f: (Int) => Z)Z at line 8
have same type
         override def getWith[@specialized(Int) Z](f: Int => Z) = f(value)
                      ^
```

If I remove either of the specialized annotations from the declaration of the trait A (either on T or Z), it works.

Tested against RC2 and r21862-b20100508020139
