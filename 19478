Implementing the Ordered trait gives us the mathematical operators such as less than. I believe it should also allow us to have a "max" and "min" function and as this trait gives us the ability to order, it gives us the ability to extract the max or min of two values.

This would match the behaviour given to us by RichInt's and as such could just be added to the Ordered trait;
{code}
/** Returns `this` if it is greater or equal to `that` otherwise `that`
  */
def max(that: A): A = if (this >= that) this else that

/** Returns `this` if it is less or equal to `that` otherwise `that`
  */
def min(that: A): A = if (this <= that) this else that
{code}

Another option would be to add a generic version to the math object;
{code}
def max[A](x: Ordered[A], y: Ordered[A]): A = ???
{code}
