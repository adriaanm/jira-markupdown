The following code crashes the pickler:
```scala
object Test extends Application {
  
  trait C[T] {
    def t: T
  }
  
  def b: Option[C[_]] = null
  
  def c = b match {
    case Some(b) => b.t
  }
  
}
```

It seems that type inference does not calculate a valid type for `c` (it has type `?`) which confuses the pickler.

Stack trace is as follows:
```scala
scala.tools.nsc.FatalError: bad type: ?(class scala.tools.nsc.symtab.Types$$WildcardType$$)
	at scala.tools.nsc.symtab.classfile.Pickler$$Pickle.scala$$tools$$nsc$$symtab$$classfile$$Pickler$$Pickle$$$$putType(Pickler.scala:196)
	at scala.tools.nsc.symtab.classfile.Pickler$$Pickle.scala$$tools$$nsc$$symtab$$classfile$$Pickler$$Pickle$$$$putType(Pickler.scala:189)
	at scala.tools.nsc.symtab.classfile.Pickler$$Pickle.putSymbol(Pickler.scala:132)
	at scala.tools.nsc.symtab.classfile.Pickler$$Pickle$$$$anonfun$$putSymbols$$1.apply(Pickler.scala:159)
	at scala.tools.nsc.symtab.classfile.Pickler$$Pickle$$$$anonfun$$putSymbols$$1.apply(Pickler.scala:159)
	at scala.collection.generic.LinearSequenceTemplate$$class.foreach(LinearSequenceTemplate.scala:81)
	at scala.collection.immutable.List.foreach(List.scala:26)
	at scala.tools.nsc.symtab.classfile.Pickler$$Pickle.putSymbols(Pickler.scala:159)
	at scala.tools.nsc.symtab.classfile.Pickler$$Pickle.scala$$tools$$nsc$$symtab$$classfile$$Pickler$$Pickle$$$$putType(Pickler.scala:185)
	at scala.tools.nsc.symtab.classfile.Pickler$$Pickle.putSymbol(Pickler.scala:132)
	at scala.tools.nsc.symtab.classfile.Pickler$$Pickle.scala$$tools$$nsc$$symtab$$classfile$$Pickler$$Pickle$$$$putType(Pickler.scala:176)
	at scala.tools.nsc.symtab.classfile.Pickler$$Pickle.putSymbol(Pickler.scala:132)
	at scala.tools.nsc.symtab.classfile.Pickler$$PicklePhase.add$$1(Pickler.scala:38)
	at scala.tools.nsc.symtab.classfile.Pickler$$PicklePhase.pickle$$1(Pickler.scala:49)
	at scala.tools.nsc.symtab.classfile.Pickler$$PicklePhase$$$$anonfun$$pickle$$1$$1.apply(Pickler.scala:45)
	at scala.tools.nsc.symtab.classfile.Pickler$$PicklePhase$$$$anonfun$$pickle$$1$$1.apply(Pickler.scala:45)
	at scala.collection.generic.LinearSequenceTemplate$$class.foreach(LinearSequenceTemplate.scala:81)
	at scala.collection.immutable.List.foreach(List.scala:26)
	at scala.tools.nsc.symtab.classfile.Pickler$$PicklePhase.pickle$$1(Pickler.scala:45)
	at scala.tools.nsc.symtab.classfile.Pickler$$PicklePhase.apply(Pickler.scala:63)
	at scala.tools.nsc.Global$$GlobalPhase.applyPhase(Global.scala:301)
        ...
```

And printing the compilation tree after typer yields the following:
```scala
package <empty> {
  final object Test extends java.lang.Object with Application with ScalaObject {
    def this(): object Test = {
      Test.super.this();
      ()
    };
    abstract trait C[T >: Nothing <: Any] extends scala.AnyRef {
      def t: T
    };
    def b: Option[Test.C[_]] = null;
    def c: ? = Test.this.b match {
      case (Test.C[_])Some[Test.C[_]]((b @ _)) => b.t
    }
  }
}
```

**Original report** edited.

Using a shell:
```scala
Welcome to Scala version 2.7.2.final (Java HotSpot(TM) Client VM, Java 1.5.0_16).
Type in expressions to have them evaluated.
Type :help for more information.

scala> val cls = classOf[java.io.File]
scala> val stringConst = cls.getConstructors.find{ c => 
     |   val p = c.getParameterTypes()
     |   p.length > 0 && p(0) == classOf[String]
     | }
scala> val f = stringConst match {                           
     |    case Some(c) => c.newInstance("/tmp/test")              
     |    case None => java.io.File.createTempFile("test", "")    
     | }                                                           
Exception in thread "main" scala.tools.nsc.FatalError: bad type: ?(class scala.tools.nsc.symtab.Types$$WildcardType$$)
```
It error out and then exited the shell!
