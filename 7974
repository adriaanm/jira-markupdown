Some observations about {{Context}} 's {{enterScope()}} and {{exitScope()}} in GenICode:
- {{enterScope()}} doesn't insert {{SCOPE_ENTER}} s, they result only from {{ValDef}} s found during {{genLoad()}}
- on the other hand, the only place where {{SCOPE_EXIT}} s are added is {{exitScope()}} :
{noformat}
      def exitScope() {
        if (bb.nonEmpty) {
          scope.locals foreach { lv => bb.emit(SCOPE_EXIT(lv)) }
        }
        scope = scope.outer
      }

{noformat}
- {{enterScope()}} is called upon visiting a {{Block}} or a {{DefDef}}. In the latter case, via {{enterMethod()}}.
- {{exitScope()}} is called upon leaving a {{Block}}.

Proposed fix: Looks like {{exitScope()}} should also be called upon leaving a {{DefDef}}, unless it was already called for the outermost {{Block}} of that {{DefDef}}. Otherwise we would end up adding duplicate {{SCOPE_EXIT}} s.

Comments from [~dragos] are welcome:
# about the proposed fix
# {{exitScope()}} will add no {{SCOPE_EXIT}} s for an empty basic block (irrespective of how many locals have been queued). Why?

