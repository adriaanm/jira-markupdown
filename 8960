An alternative that doesn't break binary compatibility is
```scala
var x = try{...}catch{...}
```

transforms to
```scala
val temp$ = try {...}catch{...}
var x = temp$
```

which, when x is captured, turns turns into 
```scala
... instructions loading initialValue
STORE temp$
NEW ObjectRef
DUP
LOAD temp$
INVOKESPECIAL scala.runtime.ObjectRef.<init>(initialValue)
```

It wastes a variable slot in cases when var is not captured, though (unless we're smarter about optimizing away variables than I think we are), so we'd want to replace it with the cleaner static factory version in 2.11.
