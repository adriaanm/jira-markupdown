Removing them might be a tough sell, given that all three of the reasons to remove them are scala bugs. I think removing them would be a devastating blow to scala on android.  And it was something like 1.4 megabytes savings, which people have presumably normalized, so removing them would amount to donating that much to the library in preference to doing something about those bugs.

I don't know, I'm not the guy to weigh those tradeoffs. I think removing them entirely is probably unwise, but I doubt there are any hail marys coming to fix any of the issues before 2.11. I'll send a PR removing the access limitations.

In case anyone is thinking they don't want to make those classes public because it increases the binary compatibility surface area, I have some bad news: thanks to the leaking of those supposed-to-be-internal types, they're already in the footprint.
{code}
object Test {
  def f[A, CC[X]](xs: CC[A]) = xs
  def g = f(scala.collection.immutable.BitSet(1))
}
// public <A extends java/lang/Object, CC extends java/lang/Object> CC f(CC);
//   Signature: (Ljava/lang/Object;)Ljava/lang/Object;

// public scala.collection.AbstractSet<java.lang.Object> g();
//   Signature: ()Lscala/collection/AbstractSet;
{code}

In other words there is no such thing as a private type.
