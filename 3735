Marking as a duplicate of scala/bug#5333 based on these tests:
```
  ~/code/scala tail test/files/pos/t3236/*
==> test/files/pos/t3236/Field_1.java <==
public class Field_1 {
    public static final int DESCRIPTION_LENGTH = 256;
}

==> test/files/pos/t3236/Length_1.java <==
import java.lang.annotation.*;

@Retention(value=RetentionPolicy.RUNTIME)
public @interface Length_1 {
	int max();
}

==> test/files/pos/t3236/Use_2.scala <==
// Separate compilation.
class FieldData {
  @Length_1(max = Field_1.DESCRIPTION_LENGTH)
  var description: String = _
}
  ~/code/scala pt test/files/pos/t3236
Selected 1 tests drawn from specified tests

# starting 1 test in pos
ok 1 - pos/t3236

1/1 passed (elapsed time: 00:00:02)
Test Run PASSED
```

Joint compilation fails; as described in scala/bug#5333
```
% tail test/files/pos/t3236b/*
==> test/files/pos/t3236b/Field_1.java <==
public class Field_1 {
    public static final int DESCRIPTION_LENGTH = 256;
}

==> test/files/pos/t3236b/Length_1.java <==
import java.lang.annotation.*;

@Retention(value=RetentionPolicy.RUNTIME)
public @interface Length_1 {
	int max();
}

==> test/files/pos/t3236b/Use_1.scala <==
// Joint compilation.
class FieldData {
  @Length_1(max = Field_1.DESCRIPTION_LENGTH)
  var description: String = _
}

% pt --verbose test/files/pos/t3236b

##### Transcripts from failed tests #####

# partest test/files/pos/t3236b
% scalac t3236b/Field_1.java t3236b/Length_1.java t3236b/Use_1.scala
Use_1.scala:3: error: annotation argument needs to be a constant; found: Field_1.DESCRIPTION_LENGTH
  @Length_1(max = Field_1.DESCRIPTION_LENGTH)
                          ^
warning: no valid targets for annotation on variable description - it is discarded unused. You may specify targets with meta-annotations, e.g. @(<error> @getter)
one warning found
one error found


# Failed test paths (this command will update checkfiles)
test/partest --update-check \
  test/files/pos/t3236b

0/1 passed, 1 failed (elapsed time: 00:00:01)
Test Run FAILED
```
