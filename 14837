I know the jcl package is going away in 2.8 so I'm not sure if bug reportss are still being entertained...

Buffer.addAll violates the contract of java.util.List.addAll, which throws "IndexOutOfBoundsException - if the index is out of range (index < 0 || index > size())." Index == 0 is always a legal value. It should be possible to append to an empty list using addAll.

Buffer.addAll will throw NoSuchElementException if it is empty and index == 0.
```scala
scala> val l = new scala.collection.jcl.LinkedList[Int]
l: scala.collection.jcl.LinkedList[Int] = []

scala> l.addAll(0, List(1,2,3))
java.util.NoSuchElementException
        at java.util.LinkedList$$ListItr.next(LinkedList.java:698)
        at scala.collection.jcl.MutableIterator$$Wrapper.next(MutableIterator.scala:16)
        at scala.collection.jcl.SeqIterator$$class.seek(SeqIterator.scala:34)
        at scala.collection.jcl.BufferWrapper$$IteratorWrapper.seek(BufferWrapper.scala:43)
        at scala.collection.jcl.Buffer$$class.addAll(Buffer.scala:109...
```
