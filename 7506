I use scala 2.9.2:
```scala
# scala -version
Scala code runner version 2.9.2 -- Copyright 2002-2011, LAMP/EPFL
```

In scala API doc at Range page there is an use case of union (http://www.scala-lang.org/api/current/scala/collection/immutable/Range.html)
The use case says :
```scala
def union(that: Seq[Int]): Range[A] 
```

Then when I use union, Range union produces IndexedSeq.
```scala
scala> Range(1,5).union(Range(4,8))
res0: scala.collection.immutable.IndexedSeq[Int] = Vector(1, 2, 3, 4, 4, 5, 6, 7)

Range(1,5).union(Seq(4,3,2))
res1: scala.collection.immutable.IndexedSeq[Int] = Vector(1, 2, 3, 4, 4, 3, 2)
```

The doc explains :
```scala
def union[B >: Int, That](that: GenSeq[B])(implicit bf: CanBuildFrom[IndexedSeq[Int], B, That]): That 
```
But it's more difficult to read and possibly not corroborating with the usecase.


