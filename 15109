(Below is copy of a post the forum. Will attach a maven project shortly)

In trying to implement a very simple camel route in scala and have run into a dead-end. First consider this java version:
{code}
public class CamelJavaTyperTest {

    private DefaultCamelContext camel = new DefaultCamelContext();

    private Processor p1 = new Processor() {
        @Override public void process(Exchange exchange) throws Exception { }
    };
    private Processor p2 = new Processor() {
        @Override public void process(Exchange exchange) throws Exception { }
    };

    public void init() throws Exception {
        camel.addRoutes(new RouteBuilder() {
            @Override
            public void configure() throws Exception {
                from("somewhere")
                        .process(p1)
                        .process(p2)
                        .to("nowhere");
            }
        });
    }
}
{code}
This compiles fine. Now consider this seemingly identical scala version:
{code}
class CamelScalaTyperTest {

  val camel = new DefaultCamelContext

  val p1 = new Processor { def process(exchange: Exchange) = {} }
  val p2 = new Processor { def process(exchange: Exchange) = {} }

  camel addRoutes new RouteBuilder { override def configure() {
    from ("somwhere")
      .process(p1)
      .process(p2)
      .to("nowhere")
  }}
}
{code}
The scala version results in this compiler error:
{code}
error: something is wrong (wrong class file?): class ProcessorDefinition with type parameters [Type] gets applied to arguments [], phase = typer
.to ("jms:topic:__placeholder__")
{code}
