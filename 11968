Boiling this down a little:

{code}
scala> implicitly[{type F[X] = { type Self = Iterable[X] }}](impl)
<console>:9: error: kinds of the type arguments (Iterable[X]) do not conform to the expected kinds of the type parameters (type I).
Iterable[X]'s type parameters do not match type I's expected parameters:
type Iterable has one type parameter, but type I has one
              implicitly[{type F[X] = { type Self = Iterable[X] }}](impl)
                                                                    ^
scala> impl : {type F[X] = { type Self = Iterable[X] }}
<console>:9: error: kinds of the type arguments (Iterable[X]) do not conform to the expected kinds of the type parameters (type I).
Iterable[X]'s type parameters do not match type I's expected parameters:
type Iterable has one type parameter, but type I has one
              impl : {type F[X] = { type Self = Iterable[X] }}
              ^

scala> impl[Iterable] : {type F[X] = { type Self = Iterable[X] }}
scala.NotImplementedError: an implementation is missing
  at scala.Predef$.$qmark$qmark$qmark(Predef.scala:225)
{code}
