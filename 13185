The following code warns that the expression will always evaluate to false. The expression promptly proceeds to evaluate to true. 
```scala
scala> val foo = new java.util.HashMap[Int, Int]
foo: java.util.HashMap[Int,Int] = {}

scala> foo.get(0) == null
<console>:6: warning: comparing values of types Int and Null using `==' will always yield false
       foo.get(0) == null
                  ^
res0: Boolean = true
```

This needs either fixed semantics or a fixed warning. I'd prefer the latter, as "fixing" the semantics would make Java collections very hard to use correctly on Scala primitives (I was very annoyed by the fact that I couldn't usefully use them on Scala primitives until I discovered the compiler was lying to me)
