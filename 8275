You don't have to give me any credit, if I don't get it.

The example is isInstanceOf, not asInstanceOf.

For the case of asInstanceOf, there is no extra checkcast.  Let's give intraprocedural analysis some respect.

For the lack of a warning, SI-1558.  So on that basis, I'll never asInstanceOf, because I'll never presume to tell the type system I know what I'm doing. Except maybe null.asInstanceOf.

For the case of isInstanceOf, maybe the question is, should instanceof be optimized away.

If you issue the instanceof, should you still warn?  And if you must warn, is there a way to selectively turn off warnings?  (Hopefully eventually?)
