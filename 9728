Jason,

I'll be asking more questions as I feel this is rather fundamental issue and I'd like to understand it very well.

Let me share my understanding of Symbol. I always thought of Symbols as objects uniquely representing terms and types. For example, there would be only one symbol for particular `def` defined. If that's the case then pointer equality of symbols should work just fine. Now, if  you consider symbol cloning you should have two situations:

1. You clone a symbol but it's still corresponds to the same term/type as original symbol
2. You clone a symbol but it corresponds to a new term/type that you derived from original symbol by some kind of transformation

I believe what you describe in this ticket is instance of 1. Am I correct? If so, why would we ever want to do 1.?
