{code}
scala> import reflect.runtime.universe._
import reflect.runtime.universe._

scala> trait Foo; trait Bar
defined trait Foo
defined trait Bar

scala> val fooName = TypeName("Foo"); val barName = TypeName("Bar")
fooName: reflect.runtime.universe.TypeName = Foo
barName: reflect.runtime.universe.TypeName = Bar

scala> q"class Derived1 extends $fooName with $barName"
res0: reflect.runtime.universe.ClassDef = 
class Derived1 extends Foo with Bar {
  def <init>() = {
    super.<init>();
    ()
  }
}

scala> val parents = List(fooName, barName)
parents: List[reflect.runtime.universe.TypeName] = List(Foo, Bar)

scala> q"class Derived2 extends ..$parents"
error: exception during macro expansion: 
java.lang.Exception: Name expected but List[reflect.runtime.universe.TypeName] found [$quasiquote$1:(parents,..)]
	at scala.tools.reflect.quasiquotes.ApplyReifier.reifyName(ApplyReifier.scala:89)

{code}
