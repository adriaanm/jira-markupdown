As Jason suggested, I think you'll have to work around this in your code by defining an ordering.
The example below works for me. I think SI-3346 is pretty nice to have fixed, so I'd rather not give it up for this.

I'm sorry, but we're out of time for 2.11. I'll leave it open for a couple more days, but, unless I'm missing something, I think we should anticipate closing this as won't fix.

{code}
trait E1[T] {
  def f(that: T) = ()
}
 
class E2[R, C] extends E1[E2[R, C]]

trait Lower {
  implicit def int2string(value: Int): String = ???
} 

object MyApp extends Lower{
  implicit def coef2rf[D, R, C](value: D)(implicit ev: D => C): E1[E2[R, C]] = ???
 
  def test: Unit = {
 
    val y: E2[E1[String], String] = ???
    val i: Int = 0
    i.f(y)
    i.f(y) // chokes on the second occurence only (!)
    ()
  }
}
{code}
