This has been fixed in trunk. Since `File` is `Comparable` a low priority ordering implicit gets picked to provide an `Ordering` for a `Comparable` object. The correct builder factory found in the `TreeMap` companion (which takes the `Ordering` implicit parameter) is then picked, and a `TreeMap` is produced:

{code}
scala> TreeMap(1 -> new File("."), 2 -> new File("."), 3 -> new File("."), 4 -> new File("."), 10 -> new File(".")).zipWithIndex
res10: scala.collection.immutable.TreeMap[(Int, java.io.File),Int] = Map((1,.) -> 0, (2,.) -> 1, (3,.) -> 2, (4,.) -> 3, (10,.) -> 4)
{code}
