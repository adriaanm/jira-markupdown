{code}
class Casey(a: Int) { def isEmpty = false; def get = this }
object Casey { def unapply(a: Casey) = a }

object Test {
  def main(args: Array[String]) {
    val Casey(x) = new Casey(1)
    assert(x == 1, x)
  }
}

/*
     val x: Int = {
        case <synthetic> val x1: Casey = (new Casey(1): Casey @unchecked);
        case5(){
          <synthetic> val o7: Casey = Casey.unapply(x1);
          if (o7.isEmpty.unary_!)
            {
              val x: Casey = o7.get;
              matchEnd4(x)
            }
          else
            case6()
        };
        case6(){
          matchEnd4(throw new MatchError(x1))
        };
        matchEnd4(x: Int){
          x
        }
*/
{code}

ClassCastException ensues.
