I think it is likely you are correct about the cause, as even mixing nearby versions of scala is liable to induce such troubles, so 2.7.2 and recent trunk is pretty much guaranteed to fail.  On that basis I'm closing this as invalid.

I just wrote the code below to explore the idea of version checking, but I'm not sure about where I'd put it where it would be helpful when one wanted help but not when one didn't.  Here it is for posterity at least, and I'll see if we can find a useful integration point.  It highlights at least one other issue which needs fixing, as no mention of 'scala' appears in either the path to the properties files or the property key.
{code}
val loader = ClassLoader.getSystemClassLoader

def getProperty(file: String, key: String): Option[String] = {
  val props = new java.util.Properties()
  val in = loader.getResourceAsStream(file)
  props load in
  val res = props get key
  if (res == null) None else Some(res.asInstanceOf[String])
}

def verifyVersionsMatch(): Boolean = {
  val c = getProperty("compiler.properties", "version.number") getOrElse (return true)
  val l = getProperty("library.properties", "version.number") getOrElse (return true)
  
  assert(c == l, "compiler/library version mismatch %s vs %s".format(c, l))
  true
}
{code}
