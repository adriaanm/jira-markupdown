Just ran into another example that gives the same exception:

This (syntax incorrect) function causes the exception:

  def snippet(row: SqlRow, classifier: Learner)(implicit c : ReqContext) = {
    val mode = snipVoteMode(row.str("state"))
    val pagetext = row.str("articlebody")
    if(pagetext == null || pagetext == ""){
    	PageContext.backgroundFetchSnippet(row)
    }
    val thetext = if(pagetext == null || pagetext == "") row.str("abstract") else pagetext
    <div class={"snippet togglebox state-"+mode}>
	<div class="boxcontent snippettext">
		<div class="text">
			{selectableSentences(thetext,row.str("picktext"))}
		</div></div>
		<div class='pagetext'>{pagetext}</div>
	   <input type="hidden" class="resultid" value={""+row("id")}/>
	     <div class="yesnobox">
		   <a class="yes" onclick="doAdd(this)">mark</a>
		   <a class="no" onclick="doIgnore(this)">ignore</a>
		   </div>
	   }  // remove this line and it is fine
	   {if(row("username") != null && mode == "yes"){
	     userref(row.int("user_id"), row.str("username"), "marked by") 
	   }else if(row("username") != null && mode == "no"){
		 userref(row.int("user_id"), row.str("username"), "ignored by") 		      
	    }else{          
	    }
	   }       
	   {if(classifier != null){
		    val roboscore = (classifier.classify(row.str("abstract")) * 100).toInt
		   <div class={if(roboscore > 60) "roboscore-yes" else if(roboscore < 40) "roboscore-no" else "roboscore-maybe"}>
		   {roboscore+"%"}
		   </div>
	   }}
	</div>     
  }


BUT remove the bad line and it works fine.
