To replicate the "object Foo" version, simply compile the object and observe that the compilation succeeds.  To replicate the interpreter version, you need to build from trunk instead of using 2.7.0-final.  You will see that it also compiles.  Then look at the script version you tried, and observe that it does NOT compile.  Further, you will also see that it fails to compile for the object Foo and the interpreter versions if you add parentheses around the expression.  Why such inconsistency about such a simple expression?

I think that the expression should fail to parse in all of these contexts.  If the language lawyers disagree, and there is a reason the expression should work, then the interpreter needs to be updated, perhaps by adding a semicolon at the beginning of the object wrapper it makes:
{code}
  object Foo { ;
    println "Hello, world"
  }
{code}

Before this issue is closed, one of the two should happen: the expression should be rejected in all contexts, or the interpreter should be updated.

To give some context, this matters because the expression in the subject line is one of the first things people try when they download Scala.  It would be good if the Scala tools give sensible output to this common input.
