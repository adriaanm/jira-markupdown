The following (erroneous) code crashes scalac as shown.  The crash appears very sensitive to all the elements - commenting out any line, annotating the type of the lazy val, removing the companion class, etc. will all avoid the crash.

{code}
class Jars(jar: Jar)

object Jars {  
  import scala.util.Properties.javaClassPath

  lazy val scala = fromClasspathString(javaClassPath) 
    
  def fromClasspathString(s: String): Jars = null
}
{code}

{code}
[paulp@jon new]$$ scalac a.scala 
a.scala:2: error: not found: type Jar
class Jars(jar: Jar)
                ^
a.scala:9: error: illegal cyclic reference involving value <import>
  def fromClasspathString(s: String): Jars = null
                                      ^
Exception in thread "main" java.lang.NullPointerException
	at scala.tools.nsc.typechecker.Contexts$$ImportInfo.importedSymbol(Contexts.scala:568)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedIdent$$1(Typers.scala:3598)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:4012)
	at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:4086)
	at scala.tools.nsc.typechecker.Typers$$Typer.typedArg(Typers.scala:2173)
	at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$typedArgs$$2.apply(Typers.scala:2183)
...
{code}
