{code}
import scala.reflect.runtime.universe._
import scala.reflect.runtime.{currentMirror => cm}
import scala.tools.reflect.ToolBox

case class C[T](i: T)

object Test extends App {
  calculate(C(2))
  def calculate(c: C[_]): Unit = {
    val tree = q"${reify(c).tree}.i"
    cm.mkToolBox().eval(tree)
  }
}
{code}

{code}
...
	at scala.reflect.internal.Symbols$Symbol.orElse(Symbols.scala:2498)
	at scala.reflect.internal.Importers$StandardImporter.recreateOrRelink$1(Importers.scala:193)
	at scala.reflect.internal.Importers$StandardImporter.importSymbol(Importers.scala:210)
	at scala.reflect.internal.Importers$StandardImporter.recreateOrRelink$1(Importers.scala:166)
	at scala.reflect.internal.Importers$StandardImporter.importSymbol(Importers.scala:210)
	at scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateType$6.apply(Importers.scala:253)
	at scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateType$6.apply(Importers.scala:253)
	at scala.collection.immutable.List.map(List.scala:272)
	at scala.reflect.internal.Importers$StandardImporter.recreateType(Importers.scala:253)
	at scala.reflect.internal.Importers$StandardImporter.importType(Importers.scala:284)
	at scala.reflect.internal.Importers$StandardImporter.recreateSymbol(Importers.scala:107)
	at scala.reflect.internal.Importers$StandardImporter.scala$reflect$internal$Importers$StandardImporter$$cachedRecreateSymbol$1(Importers.scala:145)
	at scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateOrRelink$1$1.apply(Importers.scala:194)
	at scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateOrRelink$1$1.apply(Importers.scala:193)
	at scala.reflect.internal.Symbols$Symbol.orElse(Symbols.scala:2498)
	at scala.reflect.internal.Importers$StandardImporter.recreateOrRelink$1(Importers.scala:193)
	at scala.reflect.internal.Importers$StandardImporter.importSymbol(Importers.scala:210)
	at scala.reflect.internal.Importers$StandardImporter.recreateOrRelink$1(Importers.scala:166)
	at scala.reflect.internal.Importers$StandardImporter.importSymbol(Importers.scala:210)
	at scala.reflect.internal.Importers$StandardImporter$$anonfun$recreateType$6.apply(Importers.scala:253)
...
{code}
