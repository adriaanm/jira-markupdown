Um, not so fast.

Since the source codes for `HashSet` and `HashMap` are almost perfect duplicates, fixing the bug in `HashSet` alone leaves this bug intact:

{code}
object MapBug {

  import scala.collection.immutable.{ Map => ImmutMap }
  import scala.collection.mutable.{ Map => MutMap }

  case class IH (i: Int, h: Int) {
    override def hashCode: Int = h
  }

  def main (args: Array[String]) {
    var im = ImmutMap.empty[IH,IH]
    var mm = MutMap.empty[IH,IH]
    for (ih <- List(IH(2,0),IH(0,0),IH(4,4),IH(6,4),IH(-8,1520786080))) {
      im = im + ((ih,ih))
      mm = mm + ((ih,ih))
    }
    println("ImmutMap: " + im)
    println("MutMap: " + mm)
    println("Maps are equal: " + (im == mm))
    val x = IH(6,4)
    im = im - x
    mm = mm - x
    println("Removed " + x)
    println("ImmutMap: " + im)
    println("MutMap: " + mm)
    println("Maps are equal: " + (im == mm))
  }

}
{code}
