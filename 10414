This is not REPL-specific.
{code}
object Foreacher {
  val n = 0
  val m = List(1).par.foreach(_ => n)
  def main(args: Array[String]): Unit = println("Hello, all")
}
{code}
I guess the foreach is kicked off from the static initializer of the class and blocks on the par result, which is blocked in turn because it references the static module.

Of course, the REPL-specific part is the code wrapper.  Put it in braces to localize it.
