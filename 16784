*reproduce code:*
{code}
object TestQueryable extends App{
  ({
    case other => println(null.asInstanceOf[Any].tableName) 
  } : Any => Unit)(null)
}
{code}

*expected result (as in Scala 2.9.1)*
{noformat}
D:\work\slick>scalac src\test\scala\collection\slick\TestQueryable.scala
src\test\scala\collection\slick\TestQueryable.scala:4: error: value tableName is not a member of Any
    case other => println(null.asInstanceOf[Any].tableName)
                                                 ^
one error found
{noformat}

*actual result:*
{noformat}
D:\work\slick>..\scala\build\pack\bin\scalac src\test\scala\collection\slick\TestQueryable.scala
src\test\scala\collection\slick\TestQueryable.scala:4: error: erroneous or inaccessible type
    case other => println(null.asInstanceOf[Any].tableName)
         ^
one error found
{noformat}

This is serious since it makes it very hard to find the compile errors. Here the error is obvious, but I have this error in more complex code, where I am wondering if it really shouldn't compile.
