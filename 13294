Behold as the following code deadlocks:
```scala
import scala.concurrent.ops._;

object Blocks extends Application{
  val foo = "foo";
  val willBeFoo = future(foo);
  println(willBeFoo());
}
```

Whereas the following works fine:
```scala
import scala.concurrent.ops._;
object Blocks{
  def main(args : Array[String]) = {
    val foo = "foo";
    val willBeFoo = future(foo);
    println(willBeFoo());
  }
}
```

The reason is that fields of the object are not visible to a new thread until after the construction has finished. This is an inherent problem with the concept of Application. 
