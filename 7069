@odersky. The problem is with our brand new implementation of resetAllAttrs/resetLocalAttrs. Here's how the AST looks after resetLocalAttrs:

{code}
cleaned up: final <module> object __wrapper$1 extends lang#120.this.Object#129 {
  def <init>() = {
    super{<null>}.<init>{<null>}(){<null>};
    (){<null>}
  }{<null>};
  <method> def wrapper(): scala#7.this.Int#144 = {
  final class $anon extends scala#6.AnyRef#656 {
    def <init>() = {
      super{<null>}.this#649{<null>}(){<null>};
      (){<null>}
    }{<null>};
    def x: scala#7.this.Int#144 = 2{<null>}
  };
  new $anon{<null>}.<init>{<null>}(){<null>}
}{<null>}.x#2776{<null>}
}
{code}

See this x#2776? It should've been erased, but it wasn't. The problem is that the definition of x is in a block that we don't recur into. I believe, we need a separate run that collects local symbols - that would be more robust. Is the imposed performance cost acceptable?

Suggested fix is implemented in my repo: https://github.com/scalamacros/kepler/commits/topic/reify
