I feel like it probably should? Maybe it's not possible.

{code}

scala> case class Cognate(w: String, lang: String);
defined class Cognate

scala> val m = List(Cognate("a","a"), Cognate("b","a") ).groupBy(_.lang);
m: scala.collection.Map[String,List[Cognate]] = Map(a -> List(Cognate(a,a), Cognate(b,a)))

scala> m map { case (k,_) => (k,k) }
res2: Iterable[(String, String)] = List((a,a))
{code}
