Typechecker.scala no longer crashes the compiler. I think it can be added to the test suite and the ticket closed.
```scala
Typechecker.scala:34: error: value mymap is not a member of scala.collection.mutable.ArrayBuffer[Int]
    buf.mymap(x => x*x)                                       // crashes compiler
        ^
Typechecker.scala:35: error: inferred kinds of the type arguments (T,scala.collection.mutable.ArrayBuffer[Int]) do not conform to the expected kinds of the type parameters (type T,type B).
scala.collection.mutable.ArrayBuffer[Int]'s type parameters do not match type B's expected parameters: class ArrayBuffer has one type parameter, but type B has one
    richBuffer(buf).mymap[Int](x => x*x)                      // compiler error
    ^
Typechecker.scala:37: error: inferred kinds of the type arguments (Nothing,scala.collection.mutable.ArrayBuffer[Int],Int) do not conform to the expected kinds of the type parameters (type T,type B,type S).
scala.collection.mutable.ArrayBuffer[Int]'s type parameters do not match type B's expected parameters: class ArrayBuffer has one type parameter, but type B has one
    mymap2(buf, (x: Int) => x*x)                              // compiler error
    ^
Typechecker.scala:37: error: type mismatch;
 found   : scala.collection.mutable.ArrayBuffer[Int]
 required: scala.collection.mutable.ArrayBuffer[Nothing]
    mymap2(buf, (x: Int) => x*x)                              // compiler error
           ^
Typechecker.scala:39: error: missing parameter type
    mymap3(buf, x => x*x)                                     // compiler error
                ^
Typechecker.scala:39: error: inferred type arguments [Nothing,scala.collection.mutable.ArrayBuffer[Int],Nothing] do not conform to method mymap3's type parameter bounds [T,B <: scala.collection.mutable.Buffer[T],S]
    mymap3(buf, x => x*x)                                     // compiler error
    ^
6 errors found
```
