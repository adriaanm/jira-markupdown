That's not going through a normal implicit search; it's a type tag specific code path.

{code}
  // [Eugene to Martin] this is the crux of the interaction between
  // implicits and reifiers here we need to turn a (supposedly
  // path-dependent) type into a tree that will be used as a prefix I'm
  // not sure if I've done this right - please, review
  case SingleType(prePre, preSym) =>
    gen.mkAttributedRef(prePre, preSym) setType pre
{code}
