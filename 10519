This comes from:
```scala
val symbolicCases = approx.approximateMatch(cases, approx.onUnknown { tm =>
        approx.fullRewrite.applyOrElse[TreeMaker, Prop](tm, {
          case BodyTreeMaker(_, _) => True // irrelevant -- will be discarded by symbolCase later
          case _ => // debug.patmat("backing off due to "+ tm)
            backoff = true
            False
        })
      }) map caseWithoutBodyToProp
```

bailing out when encountering the `ProductExtractorTreeMaker` representing the null and length test.
```
P(x2,x2.a.!=(null).&&(x2.a.lengthCompare(1).==(0)),Substitution((p3,x2.a(0))))
```
