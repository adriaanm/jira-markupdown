Here is some more information on this issue, to add to the information already provided:

I see two problems here in the generated class-files:
 * Incorrect !InnerClasses attributes
 * Incorrect Method Signature attributes involving Scala.Nothing and Scala.Null

More details below:

== Problem 1 - Incorrect !InnerClasses attributes ==
This code demonstrates the problem:
```scala
object OneLevelOuter {
    def bar = List(1,2).map(_*2)
}

object TwoLevelOuter {
  object Outer {
    def bar = List(1,2).map(_*2)
  }
}  
```

Here, !OneLevelOuter$$.class has an !InnerClasses attribute with the following information:[[BR]]
inner_class_info: !OneLevelOuter$$$$anonfun$$bar$$1[[BR]]
outer_class_info: !OneLevelOuter. This looks incorrect. It should be: !OneLevelOuter$$. In this case, !OneLevelOuter actually does exist, so outer_class_info points to the wrong class.

!TwoLevelOuter$$Outer$$.class has an !InnerClasses attribute with the following information:[[BR]]
inner_class_info: !TwoLevelOuter$$Outer$$$$anonfun$$bar$$2[[BR]]
outer_class_info: !TwoLevelOuter$$Outer. This looks incorrect. It should be: !TwoLevelOuter$$Outer$$. In this case, !TwoLevelOuter$$Outer does not exist, so outer_class_info points to a non-existant class.

== Problem 2 - Incorrect Method Signature attributes involving Scala.Nothing and Scala.Null ==

This code demonstrates the problem:
```scala
object MethodSig {
  val Empty = new collection.immutable.Stack[Nothing]
  def m1: Nothing = {
    throw new RuntimeException()
  }
}
```

This translates to the following in the classfile for !MethodSig$$:

A method called Empty with:[[BR]]
Descriptor: ()Lscala/collection/immutable/Stack;[[BR]]
Signature: ()Lscala/collection/immutable/Stack<Lscala/Nothing;>;[[BR]]

A method called m1 with:[[BR]]
Descriptor: ()Lscala/runtime/Nothing$$;[[BR]]
Signature: none, because this is not a generic method.

As you can see, Nothing is referenced correctly in the Descriptor for m1, but not in the Signature for Empty.





