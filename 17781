{code}
scala> val argss = List(List(Literal(Constant(2))), List(Literal(Constant(3))))
argss: List[List[reflect.runtime.universe.Literal]] = List(List(2), List(3))

scala> q"foo(...$argss)"
<console>:31: error: overloaded method value Apply with alternatives:
  (sym: $u.Symbol,args: $u.Tree*)$u.Tree <and>
  => $u.ApplyExtractor
 cannot be applied to ($u.Ident, List[List[List[reflect.runtime.universe.Literal]]])
              q"foo(...$argss)"
              ^
{code}
