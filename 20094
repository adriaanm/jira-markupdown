The last completion is different; a member precedes the completion of interest.

Also the symbolic names in the verbose message should be decoded.
```scala
Welcome to Scala 2.12.0-M4 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_60).
Type in expressions for evaluation. Or try :help.

scala> object X { def +++ (other: Any) = 42 }
defined object X

scala> X.+
+   +++

scala> X.+++
<console>:13: error: missing argument list for method +++ in object X
Unapplied methods are only converted to functions when a function type is expected.
You can make this conversion explicit by writing `$plus$plus$plus _` or `$plus$plus$plus(_)` instead of `$plus$plus$plus`.
       X.+++
         ^

scala> object X { def +++ (other: Any) = 42 ; def f = () }
defined object X

scala> X.+
+   +++

scala> object X { def f = () ; def +++ (other: Any) = 42 }
defined object X

scala> X.+
   def +(other: String): String
```
Also possible I don't know how it's supposed to work.

Edit: Actually, it just remembers the last completion and sees the second completion request as double tab; the redefinition doesn't change the behavior.
