It was stated on the meeting that the implicit should not be triggered. Perhaps I'm missing something with this ticket, but I do not think so - according to the spec:
```scala
7.3 Views
...
Views are applied in two situations:
1. If an expression e is of type T , and T does not conform to the expression’s
expected type pt. In this case an implicit v is searched which is applicable to
e and whose result type conforms to pt. The search proceeds as in the case of
implicit parameters, where the implicit scope is the one of T => pt. If such a
view is found, the expression e is converted to v (e ).
```

In our case, the `T => pt` is `Function0[String] => _1.Bar`, that is `Function1[Function0[String], _1.Bar]`, where `_1: Foo`. Now, in section on implicit parameters, about how the search proceeds:
```scala
The implicit scope of a type T consists of all companion modules (�5.4) of classes
that are associated with the implicit parameter’s type. Here, we say a class C is asso-
ciated with a type T , if it is a base class (�5.1.2) of some part of T . The parts of a type
T are:
...
* if T is a parameterized type S [T1 , . . . , Tn ], the union of the parts of S and
T1 , . . . , Tn ,
...
```

The implicit scope `T` above is `Function1[Function0[String], _1.Bar]`, so `T2 = _1.Bar`, making its companion module eligible for the implicit search.

I've shown this and talked to two more people from the lab, and they think this should be put back to the meeting.
