Amusingly this has found a way to get worse. It now throws an "Option()" in with the others.
{code}
scala> def f[T](x: Option[T]) = x match { case Some(Some(5)) => true }
<console>:7: warning: match may not be exhaustive.
It would fail on the following inputs: None, Option(), Some((x: T forSome x not in Some[?])), Some(Some((x: Any forSome x not in 5))), Some(_)
       def f[T](x: Option[T]) = x match { case Some(Some(5)) => true }
                                ^
f: [T](x: Option[T])Boolean
{code}
