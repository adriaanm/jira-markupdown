The [scaladoc](http://www.scala-lang.org/api/2.11.7/index.html#scala.collection.immutable.Range@toString():String) is also funky.

It's not like the max value for printing is some arbitrary value.
```scala
private[immutable] val MAX_PRINT = 512  // some arbitrary value
```
The question is why does it use JAVA_CONVENTIONS.

You don't get any help from stringOf, where you can specify max, because
```scala
    // When doing our own iteration is dangerous
    def useOwnToString(x: Any) = x match {
      // Range/NumericRange have a custom toString to avoid walking a gazillion elements
      case _: Range | _: NumericRange[_] => true
```
The irony is that the REPL thinks a million elements is also too much, and inserts its own ellipsis.
```scala
scala> 1123 to 273645 by 261
res1: scala.collection.immutable.Range = Range(1123, 1384, [snip] 29833, 30094, 3...
```
If only there were a type class for this sort of thing... Call it the TrailingEllipsis type class...
