Will do something about this.  In the meantime, and I realize it's not exactly documented, the last exception is always available in magic variable lastException.
{code}
scala> g()                          
java.lang.Exception: wrapped exception
	at .g(<console>:6)
	at .<init>(<console>:8)
	at .<clinit>(<console>)
	at RequestResult$$.<init>(<console>:9)
	at RequestResult$$.<clinit>(<console>)
	at RequestResult$$scala_repl_result(<console>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at scala.tools.nsc.Interpreter$$Request$$$$anonfun$$loadAndRun$$1$$$$anonfun$$apply$$18.apply(Interpreter.scala:981)
	at scala.tools.nsc.Interpreter$$Request$$$$anonfun$$loadAndRun$$1$$$$anonfun$$apply$$18.apply(Interpreter.scala:981)
	at scala.util.control.Exception$$Catch.apply(Exception.s...
scala> lastException.printStackTrace
java.lang.Exception: wrapped exception
	at line2$$object$$$$iw$$$$iw$$.g(<console>:6)
	at line9$$object$$$$iw$$$$iw$$.<init>(<console>:8)
	at line9$$object$$$$iw$$$$iw$$.<clinit>(<console>)
	at RequestResult$$line9$$object$$.<init>(<console>:9)
	at RequestResult$$line9$$object$$.<clinit>(<console>)
	at RequestResult$$line9$$object.scala_repl_result(<console>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at scala.tools.nsc.Interpreter$$Request$$$$anonfun$$loadAndRun$$1$$$$anonfun$$apply$$18.apply(Interpreter.scala:981)
	at scala.tools.nsc.Interpreter$$Request$$$$anonfun$$loadAndRun$$1$$$$anonfun$$apply$$18.apply(Interpreter.scala:981)
	at scala.util.control.Exception$$Catch.apply(Exception.scala:79)
	at scala.tools.nsc.Interpreter$$Request$$$$anonfun$$loadAndRun$$1.apply(Interpreter.scala:980)
	at scala.tools.nsc.Interpreter$$Request$$$$anonfun$$loadAndRun$$1.apply(Interpreter.scala:980)
	at scala.util.control.Exception$$Catch.apply(Exception.scala:79)
	at scala.tools.nsc.Interpreter$$Request.loadAndRun(Interpreter.scala:979)
	at scala.tools.nsc.Interpreter.loadAndRunReq$$1(Interpreter.scala:578)
	at scala.tools.nsc.Interpreter.interpret(Interpreter.scala:597)
	at scala.tools.nsc.Interpreter.interpret(Interpreter.scala:575)
	at scala.tools.nsc.InterpreterLoop.reallyInterpret$$1(InterpreterLoop.scala:471)
	at scala.tools.nsc.InterpreterLoop.interpretStartingWith(InterpreterLoop.scala:514)
	at scala.tools.nsc.InterpreterLoop.command(InterpreterLoop.scala:361)
	at scala.tools.nsc.InterpreterLoop.processLine$$1(InterpreterLoop.scala:242)
	at scala.tools.nsc.InterpreterLoop.repl(InterpreterLoop.scala:248)
	at scala.tools.nsc.InterpreterLoop.main(InterpreterLoop.scala:558)
	at scala.tools.nsc.MainGenericRunner$$.main(MainGenericRunner.scala:72)
	at scala.tools.nsc.MainGenericRunner.main(MainGenericRunner.scala)
Caused by: java.lang.Exception: original important exception
	at line0$$object$$$$iw$$$$iw$$.f(<console>:5)
	... 28 more

{code}
