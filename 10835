This is possible with macros, which can issue arbitrary warnings.
```scala
scala> import language.experimental.macros
import language.experimental.macros

scala> import reflect.macros.Context
import reflect.macros.Context

scala> def warnImpl(c: Context)(msg: c.Expr[String]): c.Expr[Unit] = {
     |   import c.universe._
     |   val Literal(Constant(msgString: String)) = msg.tree
     |   c.warning(c.macroApplication.pos, msgString)
     |   c.literalUnit
     | }
warning: there were 2 deprecation warning(s); re-run with -deprecation for details
warnImpl: (c: reflect.macros.Context)(msg: c.Expr[String])c.Expr[Unit]

scala> def warn(msg: String): Unit = macro warnImpl
defined term macro warn: (msg: String)Unit

scala> warn("Achtung!")
<console>:12: warning: Achtung!
              warn("Achtung!")
                  ^
```

Given that this is possible, I'm closing this ticket as "out of scope". Please comment if there is a use case this doesn't cover.
