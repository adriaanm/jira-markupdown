This is in line with the language spec.

{code}
object Test {
  def foo {
   val foo: Any = foo
   val bar: Any = () = bar
  }
}
{code}

You can make `maxLatency` a lazy val to make this allowed.

{quote}
 The scope of a name introduced by a declaration or definition is the whole statement
 sequence containing the binding. However, there is a restriction on forward references in blocks: 
  In a statement sequence s1 . . . sn making up a block, if a simple name in si refers to an entity
  defined by s j where j >= i , then for all sk between and including si and sj,
    * sk cannot be a variable definition.
    * If sk is a value definition, it must be lazy.
{quote}
