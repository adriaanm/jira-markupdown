Another example:

{code}
trait Order {
   sealed trait EntryOption
   case object EmptyEntry extends EntryOption
   sealed trait Entry extends EntryOption
   private final class EntryImpl extends Entry
       
   def isEmpty( a: EntryOption ) : Boolean = a match {
      case EmptyEntry => true
//    case _: Entry   => false
   }
}
{code}

This code above _does_ emit the warning. But the following variation not:

{code}
trait Order {
   sealed trait EntryOption
   case object EmptyEntry extends EntryOption
   sealed trait Entry extends EntryOption
       
   def isEmpty( a: EntryOption ) : Boolean = a match {
      case EmptyEntry => true
//    case _: Entry   => false
   }
}

trait OrderImpl extends Order {
   private final class EntryImpl extends Entry
}
{code}

