Cross-references in lazy vals initialization is not detected by compiler as a compilation error and leads to stack overflow while executing the code.

Here is a small script example:
```scala
class Test2 {
  lazy val lazy1: Int = 2 * lazy2
  lazy val lazy2: Int = 3 * lazy1
}

val test2 = new Test2()
println(test2.lazy1)
```

And here is the script execution output:
```scala
java.lang.StackOverflowError
        at Main$$$$anon$$1$$Test2.lazy2((virtual file):8)
        at Main$$$$anon$$1$$Test2.lazy1((virtual file):7)
        at Main$$$$anon$$1$$Test2.lazy2((virtual file):8)
        at Main$$$$anon$$1$$Test2.lazy1((virtual file):7)
        ...
```
