As discussed on this thread: http://scala-programming-language.1934581.n4.nabble.com/Infinite-recursion-appending-Iterators-td2324148.html#a2324148

The following code causes a stack overflow at Iterator.scala line 387:
```scala
var x = Iterator(4)
x = Iterator(5) ++ x
x.toList
//java.lang.StackOverflowError 
```





The reason is that the ++ method's parameter is by-name; x has been reassigned by the time it is evaluated.  While this is "correct" behaviour according to the semantics of by-name parameters and vars, I submit that this is an unreasonably surprising trap for such a simple use case.

Perhaps the parameter of Iterator.++ could become by-value?
