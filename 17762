This is really confusing behavior.
{code}
scala> import scala.reflect.runtime.universe._
import scala.reflect.runtime.universe._

scala> typeOf[List[_]].typeSymbol.asType.toType
res0: reflect.runtime.universe.Type = List

scala> typeOf[List[_]].typeSymbol.asType.toType
res1: reflect.runtime.universe.Type = List[A]

scala> typeOf[Function1[_,_]].typeSymbol.asType.toType
res2: reflect.runtime.universe.Type = Function1

scala> typeOf[Function1[_,_]].typeSymbol.asType.toType
res3: reflect.runtime.universe.Type = T1 => R
{code}
