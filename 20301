First of all, I'm sorry if the title of the issue is not helpful or if this is a known issue, but I really don't know how to describe or analyze it more thoroughly. Consider the following minimal project:

*test/package.scala*
```scala
package object test {
  type Validated[+R, +A] = Either[R, A]
}
```

*test/Validated.scala*
```scala
package test

object Validated {
  object VSuccess {
    def apply[R, A](a: A) = Right(a)
  }
}
```

*test/Main.scala*
```scala
package test

import test.Validated._

object Main extends App {
  val succ: Validated[Exception, String] = VSuccess("yey")
  ///val fail2: Validated[Exception, String] = VFailure(new Exception("error"))
}
```

It compiles successfully in Scala 2.11.8. However, when I try to compile it with Scala 2.12.0, I get the following exception:
```
> compile
[info] Compiling 1 Scala source to /Users/rui/Downloads/scala-test/target/scala-2.12/classes...
java.lang.AssertionError: assertion failed:
  Cannot create ClassBType from non-class symbol type Validated
     while compiling: /Users/rui/Downloads/scala-test/src/main/scala/test/Main.scala
        during phase: jvm
     library version: version 2.12.0
    compiler version: version 2.12.0
  reconstructed args: -classpath /Users/rui/Downloads/scala-test/target/scala-2.12/classes -bootclasspath /Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/classes:/Users/rui/.coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.12.0/scala-library-2.12.0.jar

  last tree to typer: TypeTree(class ListBuffer)
       tree position: line 5 of /Users/rui/Downloads/scala-test/src/main/scala/test/Main.scala
            tree tpe: scala.collection.mutable.ListBuffer[() => Unit]
              symbol: final class ListBuffer in package mutable
   symbol definition: final class ListBuffer extends AbstractBuffer with Buffer with GenericTraversableTemplate with BufferLike with ReusableBuilder with SeqForwarder with Serializable (a ClassSymbol)
      symbol package: scala.collection.mutable
       symbol owners: class ListBuffer
           call site: constructor Main$delayedInit$body in class Main$delayedInit$body in package test

== Source file context for tree position ==

     2 import test.Validated._
     3
     4 object Main extends App {
     5   val succ2: Validated[Exception, String] = VSuccess("yey")
     6   ///val fail2: Validated[Exception, String] = VFailure(new Exception("error"))
     7 }
  at scala.tools.nsc.backend.jvm.BTypesFromSymbols.classBTypeFromSymbol(BTypesFromSymbols.scala:110)
  at scala.tools.nsc.backend.jvm.BTypesFromSymbols.buildNestedInfo(BTypesFromSymbols.scala:486)
  at scala.tools.nsc.backend.jvm.BTypesFromSymbols.setClassInfo(BTypesFromSymbols.scala:442)
  at scala.tools.nsc.backend.jvm.BTypesFromSymbols.$anonfun$classBTypeFromSymbol$5(BTypesFromSymbols.scala:126)
  at scala.collection.concurrent.TrieMap.getOrElse(TrieMap.scala:631)
  at scala.tools.nsc.backend.jvm.BTypesFromSymbols.classBTypeFromSymbol(BTypesFromSymbols.scala:118)
  at scala.tools.nsc.backend.jvm.BTypesFromSymbols.$anonfun$typeToBType$1(BTypesFromSymbols.scala:177)
  at scala.collection.AbstractMap.getOrElse(Map.scala:59)
  at scala.tools.nsc.backend.jvm.BTypesFromSymbols.primitiveOrClassToBType$1(BTypesFromSymbols.scala:177)
  at scala.tools.nsc.backend.jvm.BTypesFromSymbols.typeToBType(BTypesFromSymbols.scala:192)
  at scala.tools.nsc.backend.jvm.BCodeSkelBuilder$PlainSkelBuilder.tpeTK(BCodeSkelBuilder.scala:79)
  at scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.genLoad(BCodeBodyBuilder.scala:251)
  at scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.genLoadQualifier(BCodeBodyBuilder.scala:905)
  at scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.genApply(BCodeBodyBuilder.scala:669)
  at scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.genLoad(BCodeBodyBuilder.scala:298)
  at scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.genStat(BCodeBodyBuilder.scala:68)
  at scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.$anonfun$genBlock$1(BCodeBodyBuilder.scala:817)
  at scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.genBlock(BCodeBodyBuilder.scala:817)
  at scala.tools.nsc.backend.jvm.BCodeBodyBuilder$PlainBodyBuilder.genLoad(BCodeBodyBuilder.scala:364)
  at scala.tools.nsc.backend.jvm.BCodeSkelBuilder$PlainSkelBuilder.emitNormalMethodBody$1(BCodeSkelBuilder.scala:604)
  at scala.tools.nsc.backend.jvm.BCodeSkelBuilder$PlainSkelBuilder.genDefDef(BCodeSkelBuilder.scala:636)
  at scala.tools.nsc.backend.jvm.BCodeSkelBuilder$PlainSkelBuilder.gen(BCodeSkelBuilder.scala:510)
  at scala.tools.nsc.backend.jvm.BCodeSkelBuilder$PlainSkelBuilder.$anonfun$gen$7(BCodeSkelBuilder.scala:512)
  at scala.tools.nsc.backend.jvm.BCodeSkelBuilder$PlainSkelBuilder.gen(BCodeSkelBuilder.scala:512)
  at scala.tools.nsc.backend.jvm.BCodeSkelBuilder$PlainSkelBuilder.genPlainClass(BCodeSkelBuilder.scala:113)
  at scala.tools.nsc.backend.jvm.GenBCode$BCodePhase$Worker1.visit(GenBCode.scala:190)
  at scala.tools.nsc.backend.jvm.GenBCode$BCodePhase$Worker1.$anonfun$run$1(GenBCode.scala:139)
  at scala.tools.nsc.backend.jvm.GenBCode$BCodePhase$Worker1.run(GenBCode.scala:139)
  at scala.tools.nsc.backend.jvm.GenBCode$BCodePhase.buildAndSendToDisk(GenBCode.scala:381)
  at scala.tools.nsc.backend.jvm.GenBCode$BCodePhase.run(GenBCode.scala:350)
  at scala.tools.nsc.Global$Run.compileUnitsInternal(Global.scala:1404)
  at scala.tools.nsc.Global$Run.compileUnits(Global.scala:1389)
  at scala.tools.nsc.Global$Run.compileSources(Global.scala:1384)
  at scala.tools.nsc.Global$Run.compile(Global.scala:1478)
  at xsbt.CachedCompiler0.run(CompilerInterface.scala:116)
  at xsbt.CachedCompiler0.run(CompilerInterface.scala:95)
  at xsbt.CompilerInterface.run(CompilerInterface.scala:26)
  at sun.reflect.GeneratedMethodAccessor18.invoke(Unknown Source)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  at java.lang.reflect.Method.invoke(Method.java:498)
  at sbt.compiler.AnalyzingCompiler.call(AnalyzingCompiler.scala:107)
  at sbt.compiler.AnalyzingCompiler.compile(AnalyzingCompiler.scala:53)
  at sbt.compiler.AnalyzingCompiler.compile(AnalyzingCompiler.scala:47)
  at sbt.compiler.MixedAnalyzingCompiler$$anonfun$compileScala$1$1.apply$mcV$sp(MixedAnalyzingCompiler.scala:50)
  at sbt.compiler.MixedAnalyzingCompiler$$anonfun$compileScala$1$1.apply(MixedAnalyzingCompiler.scala:50)
  at sbt.compiler.MixedAnalyzingCompiler$$anonfun$compileScala$1$1.apply(MixedAnalyzingCompiler.scala:50)
  at sbt.compiler.MixedAnalyzingCompiler.timed(MixedAnalyzingCompiler.scala:74)
  at sbt.compiler.MixedAnalyzingCompiler.compileScala$1(MixedAnalyzingCompiler.scala:49)
  at sbt.compiler.MixedAnalyzingCompiler.compile(MixedAnalyzingCompiler.scala:64)
  at sbt.compiler.IC$$anonfun$compileInternal$1.apply(IncrementalCompiler.scala:160)
  at sbt.compiler.IC$$anonfun$compileInternal$1.apply(IncrementalCompiler.scala:160)
  at sbt.inc.IncrementalCompile$$anonfun$doCompile$1.apply(Compile.scala:66)
  at sbt.inc.IncrementalCompile$$anonfun$doCompile$1.apply(Compile.scala:64)
  at sbt.inc.IncrementalCommon.cycle(IncrementalCommon.scala:32)
  at sbt.inc.Incremental$$anonfun$1.apply(Incremental.scala:72)
  at sbt.inc.Incremental$$anonfun$1.apply(Incremental.scala:71)
  at sbt.inc.Incremental$.manageClassfiles(Incremental.scala:99)
  at sbt.inc.Incremental$.compile(Incremental.scala:71)
  at sbt.inc.IncrementalCompile$.apply(Compile.scala:54)
  at sbt.compiler.IC$.compileInternal(IncrementalCompiler.scala:160)
  at sbt.compiler.IC$.incrementalCompile(IncrementalCompiler.scala:138)
  at sbt.Compiler$.compile(Compiler.scala:155)
  at sbt.Compiler$.compile(Compiler.scala:141)
  at sbt.Defaults$.sbt$Defaults$$compileIncrementalTaskImpl(Defaults.scala:879)
  at sbt.Defaults$$anonfun$compileIncrementalTask$1.apply(Defaults.scala:870)
  at sbt.Defaults$$anonfun$compileIncrementalTask$1.apply(Defaults.scala:868)
  at scala.Function1$$anonfun$compose$1.apply(Function1.scala:47)
  at sbt.$tilde$greater$$anonfun$$u2219$1.apply(TypeFunctions.scala:40)
  at sbt.std.Transform$$anon$4.work(System.scala:63)
  at sbt.Execute$$anonfun$submit$1$$anonfun$apply$1.apply(Execute.scala:228)
  at sbt.Execute$$anonfun$submit$1$$anonfun$apply$1.apply(Execute.scala:228)
  at sbt.ErrorHandling$.wideConvert(ErrorHandling.scala:17)
  at sbt.Execute.work(Execute.scala:237)
  at sbt.Execute$$anonfun$submit$1.apply(Execute.scala:228)
  at sbt.Execute$$anonfun$submit$1.apply(Execute.scala:228)
  at sbt.ConcurrentRestrictions$$anon$4$$anonfun$1.apply(ConcurrentRestrictions.scala:159)
  at sbt.CompletionService$$anon$2.call(CompletionService.scala:28)
  at java.util.concurrent.FutureTask.run(FutureTask.java:266)
  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
  at java.util.concurrent.FutureTask.run(FutureTask.java:266)
  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
  at java.lang.Thread.run(Thread.java:745)
[error] Error while emitting Main.scala
[error] assertion failed:
[error]   Cannot create ClassBType from non-class symbol type Validated
[error]      while compiling: /Users/rui/Downloads/scala-test/src/main/scala/test/Main.scala
[error]         during phase: jvm
[error]      library version: version 2.12.0
[error]     compiler version: version 2.12.0
[error]   reconstructed args: -classpath /Users/rui/Downloads/scala-test/target/scala-2.12/classes -bootclasspath /Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home/jre/classes:/Users/rui/.coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.12.0/scala-library-2.12.0.jar
[error]
[error]   last tree to typer: TypeTree(class ListBuffer)
[error]        tree position: line 5 of /Users/rui/Downloads/scala-test/src/main/scala/test/Main.scala
[error]             tree tpe: scala.collection.mutable.ListBuffer[() => Unit]
[error]               symbol: final class ListBuffer in package mutable
[error]    symbol definition: final class ListBuffer extends AbstractBuffer with Buffer with GenericTraversableTemplate with BufferLike with ReusableBuilder with SeqForwarder with Serializable (a ClassSymbol)
[error]       symbol package: scala.collection.mutable
[error]        symbol owners: class ListBuffer
[error]            call site: constructor Main$delayedInit$body in class Main$delayedInit$body in package test
[error]
[error] == Source file context for tree position ==
[error]
[error]      2 import test.Validated._
[error]      3
[error]      4 object Main extends App {
[error]      5   val succ2: Validated[Exception, String] = VSuccess("yey")
[error]      6   ///val fail2: Validated[Exception, String] = VFailure(new Exception("error"))
[error]      7 }
[error] one error found
[error] (compile:compileIncremental) Compilation failed
[error] Total time: 0 s, completed Nov 17, 2016 11:46:57 PM
```

A strange thing is that it doesn't seem to happen in certain circumstances. For example, after this error occurs, if I modify **only** Validated.scala (for example, adding a comment), the error goes away and the app runs without a problem - even if both Validated.scala and Main.scala get recompiled, according to SBT. However, if I change Main.scala after that the problem appears again.
