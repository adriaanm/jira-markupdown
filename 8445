=> A => B is a valid type, just the wrong one. Right-associativity makes that equal to => (A => B) (I'd file a separate bug otherwise), while we want a different type, (=> A) => B; hence omitting parentheses changes the type. The REPL output below suggests that => A => B is indeed right-associative as expected:
{code}
scala> val v: ((=> Int) => Int) = f _
v: => Int => Int = <function1>

scala> val v: (=> (Int => Int)) = f _
<console>:1: error: no by-name parameter type allowed here
       val v: (=> (Int => Int)) = f _
               ^

scala> val v: (=> Int => Int) = f _
<console>:1: error: no by-name parameter type allowed here
       val v: (=> Int => Int) = f _
               ^
{code}
