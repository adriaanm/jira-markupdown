I believe this could be fixed by changing the way the script runner wraps a
script.  Currently, scripts are compiled with their contents dropped directly
into a main method, like this:
{code}
object Main {
  def main(argv: Array[String]): Unit = {
    val args = argv;
    // script goes here
  }
}
{code}
It would be nicer if the contents were inserted into an object, like this:
{code}
object Main {
  def main(argv: Array[String]): Unit = {
    val args = argv;
    new AnyRef {
      // script goes here
    }
  }
}
{code}
Such an encoding should solve this feature request, and it would also
support a number of other constructs that work in an object but not
in a method.

The relevant code is in ScriptRunner.scala, if anyone wants to try.
