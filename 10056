Here is a minimal example:

{code}
object S {
  class Test {
    def test(arg: Int) = ???
  }

  class ExtClass(f: Test) {
    def test(arg: String) = ???
  }

  implicit final def Implicit(t: Test) = new ExtClass(t)

  (new Test).test("works")
  (new Test).test(arg = "fails")
}
{code}

Note that {{test("works")}} compiles, while {{test(arg = "fails")}} does not. 

I ran with {{-Ytyper-debug}} (2.12.2). Full output below, but I believe the key line (from {{test(arg = "fails")}}) is this:

{code}
no second try: (arg: Int)Nothing and arg = "fails" because error not in result: source-C:\Users\Justin\Source\SI-7809\S.scala,line-13,offset=246!=source-C:\Users\Justin\Source\SI-7809\S.scala,line-13,offset=239
{code}

This is the full typer-debug output for {{test(arg = "fails")}}:

{noformat}
|    |-- new Test().test(arg = "fails") BYVALmode-EXPRmode (site: value <local S> in S)
|    |    |-- new Test().test BYVALmode-EXPRmode-FUNmode-POLYmode (silent: value <local S> in S)
|    |    |    |-- new Test() EXPRmode-POLYmode-QUALmode (silent: value <local S> in S)
|    |    |    |    |-- new Test BYVALmode-EXPRmode-FUNmode-POLYmode (silent: value <local S> in S)
|    |    |    |    |    |-- new Test EXPRmode-POLYmode-QUALmode (silent: value <local S> in S)
|    |    |    |    |    |    |-- Test FUNmode-TYPEmode (silent: value <local S> in S)
|    |    |    |    |    |    |    \-> S.Test
|    |    |    |    |    |    \-> S.Test
|    |    |    |    |    \-> ()S.Test
|    |    |    |    \-> S.Test
|    |    |    \-> (arg: Int)Nothing
|    |    |-- "fails" : pt=Int BYVALmode-EXPRmode (silent: value <local S> in S)
|    |    |    [search #4] start `"fails"`, searching for adaptation to pt=String("fails") => Int (silent: value <local S> in S) implicits disabled
|    |    |    [search #5] start `"fails"`, searching for adaptation to pt=(=> String("fails")) => Int (silent: value <local S> in S) implicits disabled
|    |    |    \-> <error>
|    |    no second try: (arg: Int)Nothing and arg = "fails" because error not in result: source-C:\Users\Justin\Source\SI-7809\S.scala,line-13,offset=246!=source-C:\Users\Justin\Source\SI-7809\S.scala,line-13,offset=239
\
{noformat}

And this is from {{test("works")}}:

{noformat}
|    |-- new Test().test("works") BYVALmode-EXPRmode (site: value <local S> in S)
|    |    |-- new Test().test BYVALmode-EXPRmode-FUNmode-POLYmode (silent: value <local S> in S)
|    |    |    |-- new Test() EXPRmode-POLYmode-QUALmode (silent: value <local S> in S)
|    |    |    |    |-- new Test BYVALmode-EXPRmode-FUNmode-POLYmode (silent: value <local S> in S)
|    |    |    |    |    |-- new Test EXPRmode-POLYmode-QUALmode (silent: value <local S> in S)
|    |    |    |    |    |    |-- Test FUNmode-TYPEmode (silent: value <local S> in S)
|    |    |    |    |    |    |    \-> S.Test
|    |    |    |    |    |    \-> S.Test
|    |    |    |    |    \-> ()S.Test
|    |    |    |    \-> S.Test
|    |    |    \-> (arg: Int)Nothing
|    |    |-- "works" : pt=Int BYVALmode-EXPRmode (silent: value <local S> in S)
|    |    |    [search #1] start `"works"`, searching for adaptation to pt=String("works") => Int (silent: value <local S> in S) implicits disabled
|    |    |    [search #2] start `"works"`, searching for adaptation to pt=(=> String("works")) => Int (silent: value <local S> in S) implicits disabled
|    |    |    \-> <error>
|    |    second try: (arg: Int)Nothing and "works"
|    |    [search #3] start `()S.Test`, searching for adaptation to pt=S.Test => ?{def test(x$1: ? >: String("works")): ?} (silent: value <local S> in S) implicits disabled
|    |    [search #3] considering Implicit
|    |    |-- Implicit BYVALmode-EXPRmode-FUNmode-POLYmode (silent: value <local S> in S) implicits disabled
|    |    |    \-> (t: S.Test)S.ExtClass
|    |    [adapt] Implicit adapted to (t: S.Test)S.ExtClass based on pt S.Test => ?{def test(x$1: ? >: String("works")): ?}
|    |    [search #3] success inferred value of type S.Test => ?{def test(x$1: ? >: String("works")): ?} is SearchResult(S.this.Implicit, )
|    |    |-- (t: S.Test)S.ExtClass EXPRmode-POLYmode-QUALmode (site: value <local S> in S)
|    |    |    \-> S.ExtClass
|    |    |-- S.this.Implicit(new S.this.Test()).test BYVALmode-EXPRmode-FUNmode-POLYmode (silent: value <local S> in S)
|    |    |    \-> (arg: String)Nothing
|    |    \-> Nothing
{noformat}
