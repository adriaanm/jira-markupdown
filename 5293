Sorry, for double post, but it's just unreadable, w/o line-breaks. [[BR]]
[[BR]]
Well, I'm currently working on a mutable TreeSet/Map? Implementation based on an AVL Tree. While it is on average a bit more costly (but still O(log n)) to insert a value into an AVL Tree compared to a Red-Black Tree, it can check containments faster than Red-Black Trees because they are more balanced.[[BR]]
[[BR]]
Well.. I've only implemented insert and contains yet, but we'll see what I can do over the weekend. Some performance results: n = 1 << 28 Creating Sets through insertion of n randomly generated numbers:[[BR]]
Immutable TreeSet: 14658 ms[[BR]]
My AVL TreeSet: 6129 ms[[BR]]
HashSet (immutable): 13397 ms[[BR]]
Checking containment of n randomly generated numers:[[BR]]
Immutable TreeSet: 6745 ms[[BR]]
My AVL TreeSet: 3948 ms[[BR]]
HashSet (immutable): 1797 ms[[BR]]
[[BR]]
So, it's at least not slower :D[[BR]]
