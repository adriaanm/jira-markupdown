Scala 2.11.0-RC1 exhibits absurd errors while compiling classes named java.lang.Throwable, java.lang.CloneNotSupportedException and java.lang.InterruptedException (yes, these 3, all others work fine). It used to be compilable in 2.10 and until 2.11.0-M8.

The following source "minimizes" the problem, but with enough meat to show that other classes of exceptions do work. Keeping only either of the three broken classes still produces the error.

Compiling the following with Scala 2.11.0-RC1 (just Scala, no need to have the Scala.js plugin to break it):

{code:scala}
package java.lang

class Throwable(s: String, private var e: Throwable) extends Object with java.io.Serializable {
  def this() = this(null, null)
  def this(s: String) = this(s, null)
  def this(e: Throwable) = this(null, e)

  private[this] var stackTrace: Array[StackTraceElement] = _

  fillInStackTrace()

  def initCause(cause: Throwable): Throwable = {
    e = cause
    this
  }

  def getMessage(): String = s
  def getCause(): Throwable = e
  def getLocalizedMessage(): String = getMessage()

  def fillInStackTrace(): Throwable = this

  def getStackTrace(): Array[StackTraceElement] = ???

  def setStackTrace(stackTrace: Array[StackTraceElement]): Unit = ???

  def printStackTrace(): Unit = ???
  def printStackTrace(out: java.io.PrintStream): Unit = ???
  def printStackTrace(s: java.io.PrintWriter): Unit = ???

  override def toString() = {
    val className = getClass.getName
    val message = getMessage()
    if (message eq null) className
    else className + ": " + message
  }
}


/* java.lang.*Exception.java */

class Exception(s: String, e: Throwable) extends Throwable(s, e) {
  def this(e: Throwable) = this(null, e)
  def this(s: String) = this(s, null)
  def this() = this(null, null)
}

class RuntimeException(s: String, e: Throwable) extends Exception(s, e) {
  def this(e: Throwable) = this(null, e)
  def this(s: String) = this(s, null)
  def this() = this(null, null)
}

class ArithmeticException(s: String) extends RuntimeException(s) {
  def this() = this(null)
}

class ClassCastException(s: String) extends RuntimeException(s) {
  def this() = this(null)
}

class CloneNotSupportedException(s: String) extends Exception(s) {
  def this() = this(null)
}

class InterruptedException(s: String) extends Exception(s) {
  def this() = this(null)
}

class NullPointerException(s: String) extends RuntimeException(s) {
  def this() = this(null)
}
{code}

produces the following 3 absurd errors:

{noformat}
[error] /home/doeraene/temp/bug/Throwables.scala:3: self constructor arguments cannot reference unconstructed `this`
[error] class Throwable(s: String, private var e: Throwable) extends Object with java.io.Serializable {
[error]                                                              ^
[error] /home/doeraene/temp/bug/Throwables.scala:62: self constructor arguments cannot reference unconstructed `this`
[error] class CloneNotSupportedException(s: String) extends Exception(s) {
[error]                                                     ^
[error] /home/doeraene/temp/bug/Throwables.scala:66: self constructor arguments cannot reference unconstructed `this`
[error] class InterruptedException(s: String) extends Exception(s) {
[error]                                               ^
[error] three errors found
{noformat}

It worked fine with 2.11.0-M8.

If you want to reproduce in the context of Scala.js, you can clone the branch scala-2.11.0-RC1 in my fork:
https://github.com/sjrd/scala-js/tree/scala-2.11.0-RC1
and in sbt:
{noformat}
> ++2.11.0-RC1
> scalajs-javalib/compile
{noformat}

I want to stress that this is a blocker for Scala.js. I just can't build Scala.js for RC1.
