{code}
object Fail {
  def nom (guard : => Boolean) (something : => Unit) { }
  def main(args: Array[String]) {
    nom {
      val i = 0
      (i != 3)
    }()
  }
}
{code}

On compilation of the program above, the Scala compiler spews a large backtrace starting with:
java.lang.Error: symbol value i$1 does not exist in $line1.$read$$iw$$iw$Fail.main
        at scala.tools.nsc.symtab.SymbolTable.abort(SymbolTable.scala:34)
        at scala.tools.nsc.backend.icode.GenICode$ICodePhase.scala$tools$nsc$backend$icode$GenICode$ICodePhase$$genLoad(GenICode.scala:1027)

full log is attached.


(I have no idea if this is a valid Scala program.  I am very new to the language.)

Replacing the last brackets () at the end of the `nom' call with {} brackets lets the program compile fine.

If the second lambda type is removed from nom's type and the () brackets removed from the nom call, the program also compiles fine.
