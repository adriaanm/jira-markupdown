Here is some code that gives a somewhat similar error.  I trimmed off all of the irrelevant parts of this file, so only the error-producing code is here. The only dependency is on the Servlet API 2.x.  This API has some crappiness built into it.  It uses Java containers, but without type parameters.

HttpServlet.getInitParameterNames() returns an Enumeration of Strings, but the API just specifies Enumeration.

Same thing with HttpServletRequest.getParameterNames.

The curious part of this code is that with the two almost identical blocks of code, the first one is in class member scope, while the second is resolved on an object.  The first one fails the compile, the second does not.:

   [scalac] c:\dev\sands\sandsgae\src\sands\server\ScalaServlet.scala:11: error:
 something is wrong (wrong class file?): trait Enumeration with type parameters
[E] gets applied to arguments [], phase = namer
   [scalac]             val name = names.nextElement.asInstanceOf[String]

Please ignore the Windows ugliness.  I tried this on Linux, same thing.

rev. 21306
```scala
import javax.servlet.http._

class ScalaServlet extends HttpServlet
{
    val initParameters =
        {
        var parms = Map[String,String]().withDefaultValue("")
        val names = getInitParameterNames
        while (names.hasMoreElements)
            {
            val name = names.nextElement.asInstanceOf[String]
            parms += name -> getInitParameter(name)
            }  
        parms      
        }

    private def doService(req: HttpServletRequest, resp: HttpServletResponse, user: User) =
        {
        var params = Map[String,String]().withDefaultValue("")
        val names = req.getParameterNames
        while (names.hasMoreElements)
            {
            val name = names.nextElement.asInstanceOf[String]
            params += name -> req.getParameter(name)
            }
        }
}
```
