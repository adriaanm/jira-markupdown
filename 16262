This code crashes the compiler (after complaining that Sp must be a trait):
```scala
package spectest {
  class Sp[@specialized A, B](val a: A, val b: B) { }
  class Fsp[@specialized A, B](a: A, b: B) extends Sp(a,b) {
    def ab = (a,b)
  }
}
```
Error message from r25234 is:
```scala
SpecTest.scala:3: warning: class Sp must be a trait. Specialized version of class Fsp will inherit generic spectest.Sp[Unit,B]
  class Fsp[@specialized A, B](a: A, b: B) extends Sp(a,b) {
        ^
error: java.lang.AssertionError: assertion failed: List(value a, value a)
	at scala.reflect.internal.Symbols$Symbol.suchThat(Symbols.scala:1154)
	at scala.reflect.internal.Types$class.rebind(Types.scala:2679)
	at scala.reflect.internal.Types$class.singleType(Types.scala:2704)
	at scala.reflect.internal.SymbolTable.singleType(SymbolTable.scala:11)
	at scala.tools.nsc.typechecker.Typers$Typer.stabilizeFun(Typers.scala:592)
	at scala.tools.nsc.typechecker.Typers$Typer.typedApply$1(Typers.scala:3359)
	at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:4107)
	at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:4274)
	at scala.tools.nsc.typechecker.Duplicators$BodyDuplicator.typed(Duplicators.scala:310)

...
```
