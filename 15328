The compiler fails compiling the following code:
```scala
abstract class ParametricMessage[M: Manifest](msg: M) { def message = msg }
case class ParametricMessage1[M: Manifest](msg: M, p1: Class[_]) extends ParametricMessage(msg)

[error] could not find implicit value for evidence parameter of type Manifest[M]
[error] case class ParametricMessage1[M: Manifest](msg: M, p1: Class[_]) extends ParametricMessage(msg)
[error]                                ^
```
This same line compile without problem in the Scala console. It is possible to workaround this issue by adding the type parameter to the extended class:
```scala
abstract class ParametricMessage[M: Manifest](msg: M) { def message = msg }
case class ParametricMessage1[M: Manifest](msg: M, p1: Class[_]) extends ParametricMessage[M](msg)
```
