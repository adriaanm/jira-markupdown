It looks like it's possible to overload applyDynamic using Paul's trick from SI-7059. The trick just needed a single small change!!

{code}
02:00 ~/Projects/Master/sandbox (master)$ cat Test.scala
import scala.language.dynamics

class A extends Dynamic {
  def applyDynamic(method: String): B = new B(method)
}
class B(method: String) {
  def apply(x: Int) = s"$method(x: Int)"
  def apply(x: String) = s"$method(x: String)"
}

object Test {
  def main(args: Array[String]): Unit = {
    val x = new A
    println(x.bippy(42))
    println(x.bippy("42"))
  }
}

02:00 ~/Projects/Master/sandbox (master)$ scalac Test.scala && scala Test
bippy(x: Int)
bippy(x: String)
{code}
