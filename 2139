This is on hold until a good & feasible solution is proposed (http://www.nabble.com/-scala--properties---bean-properties-td25028167.html)

Another idea is to define the validation logic in a separate private method, e.g.

{code}
class A {
  @BeanProperty @preGet(preHoovesGet) @preSet(preHoovesSet) var hooves = 0
  private def preHoovesSet(h: Int) = {
    require(h < 5)
    h
  }
  private def preHoovesGet(h: Int) = {
    log("reading hooves: "+ h)
    h
  }
}
{code}

the generated getter / setter would then have the form ({{`hooves`}} denotes the actual field)

{code}
def hooves: Int = preHoovesGet(`hooves`)
def hooves_=(h: Int) { `hooves` = preHoovesSet(h) }
{code}
