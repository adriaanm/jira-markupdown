I see no reason this should be allowed to happen, and a lot of reasons it shouldn't.
{code}
package foo
package _root_

object Test {
  import _root_.scala.Option
}
{code}
{noformat}
./a.scala:5: error: object scala is not a member of package foo._root_
  import _root_.scala.Option
                ^
one error found
{noformat}
So to be clear, that source should not compile, but it should not compile because _root_ should be a reserved word.  The whole point of _root_ is to know what you are importing.  Tying this into another ticket I opened recently:

{code}
// a.scala
package foo

import _root_.scala.Option

% scalac3 ./a.scala 
% mkdir -p foo/_root_
% scalac3 ./a.scala 
./a.scala:3: error: object scala is not a member of package foo._root_
import _root_.scala.Option
              ^
one error found
{code}
