An implicit with an inferred return type is (sometimes) visible before it's point of definition, despite the comments on scala/bug#801.

Example in the wild is in [specs2](https://github.com/etorreborre/specs2/blob/9430eee/matcher/src/main/scala/org/specs2/matcher/MatchResultMessages.scala#L12-L22)

- a clean compile succeeds
- an incremental compile that touches only that file fails
```scala
[error] specs2/matcher/src/main/scala/org/specs2/matcher/MatchResultMessages.scala:13: could not find implicit value for parameter mm: scalaz.Monoid[Product with Serializable with MatchResultMessages.this.MatchResultMessage]
[error]     Reducer.unitReducer { r: MatchResult[T] => r match {
[error]                         ^
[error] one error found
[error] (matcher/compile:compileIncremental) Compilation failed
```

See discussion on [Scala contributors](https://contributors.scala-lang.org/t/implicits-with-inferred-return-type-lead-to-undefined-behavior/615)
