@paplorinc I just saw your comments after I posted. 

Unfortunately we had to introduce some indirection in the dispatch of trait methods.

Gory details:

https://github.com/scala/scala/pull/5177
https://github.com/scala/scala-dev/issues/143
https://github.com/scala/scala/pull/5317
https://github.com/scala/scala/pull/5429
https://github.com/scala/scala-dev/issues/228

 Here's the inlining log for my benchmark of `Map#get`
```scala
info]                                 @ 8   scala.collection.mutable.HashMap::get (29 bytes)   inline (hot)
[info]                                   @ 2   scala.collection.mutable.HashMap::findEntry (6 bytes)   inline (hot)
[info]                                     @ 2   scala.collection.mutable.HashTable::findEntry$ (6 bytes)   inline (hot)
[info]                                       @ 2   scala.collection.mutable.HashTable::findEntry (19 bytes)   inline (hot)
[info]                                         @ 5   scala.collection.mutable.HashMap::elemHashCode (6 bytes)   inline (hot)
[info]                                          \-> TypeProfile (577289/577289 counts) = scala/collection/mutable/HashMap
[info]                                           @ 2   scala.collection.mutable.HashTable$HashUtils::elemHashCode$ (6 bytes)   inline (hot)
[info]                                             @ 2   scala.collection.mutable.HashTable$HashUtils::elemHashCode (5 bytes)   inline (hot)
[info]                                               @ 1   scala.runtime.Statics::anyHash (65 bytes)   inline (hot)
[info]                                                 @ 61   java.lang.Integer::hashCode (8 bytes)   inline (hot)
[info]                                                   @ 4   java.lang.Integer::hashCode (2 bytes)   inlining too deep
[info]                                         @ 10   scala.collection.mutable.HashMap::index (6 bytes)   inline (hot)
[info]                                           @ 2   scala.collection.mutable.HashTable::index$ (6 bytes)   inline (hot)
[info]                                             @ 2   scala.collection.mutable.HashTable::index (34 bytes)   inline (hot)
[info]                                               @ 1   scala.collection.mutable.HashMap::table (5 bytes)   accessor
[info]                                               @ 13   scala.collection.mutable.HashMap::seedvalue (5 bytes)   accessor
[info]                                               @ 18   scala.collection.mutable.HashMap::improve (7 bytes)   inline (hot)
[info]                                                 @ 3   scala.collection.mutable.HashTable$HashUtils::improve$ (7 bytes)   inline (hot)
[info]                                                   @ 3   scala.collection.mutable.HashTable$HashUtils::improve (27 bytes)   inlining too deep
[info]                                               @ 26   java.lang.Integer::bitCount (49 bytes)   (intrinsic)
[info]                                         @ 15   scala.collection.mutable.HashTable::findEntry0 (44 bytes)   inline (hot)
[info]                                           @ 1   scala.collection.mutable.HashMap::table (5 bytes)   accessor
[info]                                           @ 15   scala.collection.mutable.DefaultEntry::key (5 bytes)   accessor
[info]                                            \-> TypeProfile (38245/38245 counts) = scala/collection/mutable/DefaultEntry
[info]                                           @ 21   scala.collection.mutable.HashMap::elemEquals (7 bytes)   inline (hot)
[info]                                             @ 3   scala.collection.mutable.HashTable::elemEquals$ (7 bytes)   inline (hot)
[info]                                               @ 3   scala.collection.mutable.HashTable::elemEquals (12 bytes)   inline (hot)
[info]                                                 @ 2   scala.runtime.BoxesRunTime::equals (13 bytes)   inline (hot)
[info]                                                   @ 9   scala.runtime.BoxesRunTime::equals2 (52 bytes)   too big
[info]                                           @ 30   scala.collection.mutable.DefaultEntry::next (5 bytes)   inline (hot)
[info]                                             @ 1   scala.collection.mutable.DefaultEntry::next (5 bytes)   accessor
[info]                                   @ 22   scala.collection.mutable.DefaultEntry::value (5 bytes)   accessor
[info]                                   @ 25   scala.Some::<init> (10 bytes)   inline (hot)
[info]                                     @ 6   scala.Option::<init> (9 bytes)   inline (hot)
[info]                                       @ 1   java.lang.Object::<init> (1 bytes)   inline (hot)
[info]                                       @ 5   scala.Product::$init$ (1 bytes)   inline (hot)
```

Hot calls into higher level methods (like `groupBy`) can run into the inliing depth limit at a slightly different spot.

That HotSpot limit is known to be a bit on the low side for historical reasons. The implementation of "lambda forms" in the java.lang.invoke implementation ran into it, but rather than raising it added special cases into HotSpot for lambda form frames.


