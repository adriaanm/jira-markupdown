In 2.7.5 {{None.getClass.getGenericSuperclass}} throws an exception.

{code}
scala> None.getClass.getGenericSuperclass 
java.lang.ClassNotFoundException: scala.Nothing
	at java.net.URLClassLoader$$1.run(URLClassLoader.java:276)
	at java.net.URLClassLoader$$1.run(URLClassLoader.java:265)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:264)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:325)
	at sun.misc.Launcher$$AppClassLoader....
{code}

Spring framework calls this if you try to put a None in a Scala bean.

I tried this with 2.8.0.r18028-b20090614020147 and it works:

{code}
scala> None.getClass.getGenericSuperclass
res0: java.lang.reflect.Type = scala.Option<scala.runtime.Nothing$$>
{code}

I did a recursive grep through the current trunk and didn't find a
single call to getGenericSuperclass.  So this ticket is a request to
add a one line test case to trunk just to ensure that this call
continues to work and returns the correct result.  I have a Spring
project that currently fails that's on 2.7.x and I'd like to be able
to count on this behavior working in 2.8.x and adding a test case
seems to be the best way to do that.

Thanks,
Blair
