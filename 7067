```scala
def codify(tree: Tree): Tree = debugTrace("codified " + tree + " -> ") {
  val targetType = definitions.CodeClass.primaryConstructor.info.paramTypes.head
  val reifier = new Reifier()
  val arg = gen.mkAsInstanceOf(reifier.reifyTopLevel(tree), targetType, wrapInApply = false)
  val treetpe = // this really should use packedType(tree.tpe, context.owner) 
                // where packedType is defined in Typers. But we can do that only if liftCode is moved to Typers.
    if (tree.tpe.typeSymbol.isAnonymousClass) tree.tpe.typeSymbol.classBound
    else tree.tpe
  New(TypeTree(appliedType(definitions.CodeClass.typeConstructor, List(treetpe.widen))),
    List(List(arg)))
}
```

The comment says it all. Bugfix is postponed until liftcode becomes a macro (and, consequently, gets moved to Typers).
