desugars to:
```scala
Source.fromFile(file).getLines().flatMap(line => getStr(line).map(item => item))
```
which gives the same error, as does the more simplified form:
```scala
def foo(it: Iterator[String]) = it.flatMap(Some(_))
```
if you wanted to report this as a bug, this would be the proper line of code to put in a minimal bug report.

however it's not a bug; this is working as designed. Iterator.flatMap expects a function of type  A => Iterator[B], but you're giving it an A => Option[B].  There is an implicit conversion from Option to Iterable, but there is no implicit conversion from Option to Iterator.

to get back to your original example, I'd suggest writing:
```scala
for { line <- Source.fromFile(file).getLines(); item <- getStr(line).iterator } yield item
```
if you want the result of the whole expression to be an Iterator.
