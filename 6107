BTW try
```scala
io.Source.stdin.getLines.foreach(println)
```
It shows first line only after we entered second line.

AFAIK it happens 'cause `BufferedSource.BufferedLineIterator` has
```scala
var nextLine = bufReader.readLine
```
So when we create `BufferedLineIterator` by calling `getLines` we also wait for a user input.

I guess the correct code is something like this:
```scala
class BufferedLineIterator extends Iterator[String] {
  val bufReader = BufferedSource.this.bufferedReader()
  var nextLine = null
  var unread = true

  override def hasNext() = {
    if (unread) {
      nextLine = bufReader.readLine
      unread = false
    }
    nextLine != null
  }

  override def next(): String = {
    val result = nextLine
    if (unread) {
      nextLine = bufReader.readLine
    } else {
      unread = true
    }
    result
  }
}
```

Should I create a new bug for this or these bugs are same?
