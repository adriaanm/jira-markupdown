This compiles in 2.10, but not in 2.11 because of the weird "private members aren't inherited" change. Notice it doesn't compile even as S.foo, and that doesn't depend on inheritance - it only depends on companions working.
{code}
trait S { private def foo = 1 }
object S extends S {
  def bar1 = foo   // not found: value foo
  def bar2 = S.foo // value foo is not a member of object S
}
{code}
Encountered in the wild.
