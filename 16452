Given the following (incorrect) class:

{code}
class Foo extends Function2[Int, Int, Int] {
  def apply(x: Int, y: Int) = x + y
  override def tupled: (Int, Int) => Int = super.tupled
}
{code}

The 2.9.1 generates the following incorrect and confusing error message:

{code}
[error] /Users/paul/scala/foo/src/main/scala/Foo.scala:5: type mismatch;
[error]  found   : (Int, Int) => Int
[error]  required: (Int, Int) => Int
[error]   override def tupled: (Int, Int) => Int = super.tupled
[error]                                                  ^
{code}

This is a regression from 2.9.0, which generates:

{code}
[error] /Users/paul/scala/foo/src/main/scala/Foo.scala:5: type mismatch;
[error]  found   : ((Int, Int)) => Int
[error]  required: (Int, Int) => Int
[error]   override def tupled: (Int, Int) => Int = super.tupled
[error]                                                  ^
[error] one error found
{code}

An SBT project that demonstrates this issue is [checked into GitHub|https://github.com/paulbutcher/baderrormessage]. See the correct error message with {{++ 2.9.0 compile}} and the incorrect one with {{++ 2.9.1 compile}}.
