This is tempting, but flawed. Why should `PartialOrdering` know about it's subclass? What would be done when a further subclass of `Ordering` is introduced?

The implicit scope (of type classes) just isn't cut out for type-class inheritance. A better solution would be to move the definitions from `Ordering` into the companion objects of the respective data structures. But even this isn't perfect -- what about `Ordering\[java.lang.String]` ?
