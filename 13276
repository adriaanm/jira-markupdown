The following code does not compile with 2.7.0-final:

{code}
// Java
abstract class JavaABC {
    abstract void foo(java.lang.Object o);
}
{code}

{code}
// Scala
class ScalaClass extends JavaABC {
  def foo(o : java.lang.Object) : Unit = System.out.println(o)
}
{code}

{code}
ScalaClass.scala:1: error: class ScalaClass needs to be abstract, since there is a deferred declaration of method foo in class JavaABC of type (Any)Unit which is not implemented in a subclass
{code}

It definitely seems that if a Scala method provides the
exact same parameter types as a Java method then it should
compile.

Is the problem that the java.lang.Object is being treated
as a Any instead of a AnyRef?
