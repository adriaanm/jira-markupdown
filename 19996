When compiling from SBT after cleaning target directory, the following error is shown:
{code}
[info] ======= Position error
[info] Unpositioned tree #1837097
[info]    unpositioned [L   0 P#1837108] #1837097 [NoPosition]    Apply      // Apply(method apply)
[info]       enclosing [L  57        ] #1837108 [2104:2152]     Apply      // 
[info]         sibling [L  57 P#1837108] #1837079 [2104:2111]     Apply      // s, glob=
[info]         sibling [L   0 P#1837108] #1837097 [NoPosition]    Apply      // Apply(method apply)
[info]         sibling [L   0 P#1837108] #1837102 [NoPosition]    Apply      // Apply(method apply)
[info]         sibling [L  57 P#1837108] #1837107 [2142:2151]     Apply      // 
[info] 
[info] While validating #1839457
[info] [L   1        ] #1839457 [0:5806]        PackageDef // area
[info] 
[info] Children:
[info]   [L   1 P#1839457] #226585 [8:28]          Select     // area
[info]   [L   3 P#1839457] #226588 [30:51]         Import     // java.io.Writer
[info]   [L   4 P#1839457] #226591 [52:79]         Import     // java.net.InetAddress
[info]   [L   5 P#1839457] #226594 [80:101]        Import     // java.util.Date
[info]   [L   7 P#1839457] #226598 [103:136]       Import     // com.zktechnology.zkproto._
[info]   [L   8 P#1839457] #226603 [137:178]       Import     // fcc.ima.rima.pet.PeticionExplicita
[info]   [L   9 P#1839457] #226608 [179:217]       Import     // fcc.ima.rima.rec.ProcesoTextual
[info]   [L  10 P#1839457] #226612 [218:262]       Import     // fcc.ima.util.ExcepcionSinPilaLlamadas
[info]   [L  11 P#1839457] #226616 [263:294]       Import     // fcc.vision.jython.Jython
[info]   [L  12 P#1839457] #226621 [295:335]       Import     // fcc.vision.modelo.util.UtilJython
[info]   [L  13 P#1839457] #226625 [336:369]       Import     // fcc.vision.zkproto.Cliente
[info]   [L  14 P#1839457] #226630 [370:414]       Import     // org.apache.commons.logging.LogFactory
[info]   [L  15 P#1839457] #226635 [415:464]       Import     // org.apache.thrift.protocol.TBinaryProtocol
[info]   [L  16 P#1839457] #226640 [465:507]       Import     // org.apache.thrift.transport.TSocket
[info]   [L  17 P#1839457] #226644 [508:542]       Import     // org.python.core.PyException
[info]   [L  19 P#1839457] #226648 [544:585]       Import     // scala.collection.JavaConversions._
[info]   [L  20 P#1839457] #226652 [586:620]       Import     // scala.util.control.NonFatal
[info]   [L  22 P#1839457] #1836425 [622:860]       ModuleDef  // ClientesZK {
[info]   [L  29 P#1839457] #1839456 [862:5806]      ClassDef   // ClientesZK extends ProcesoTextual {
[info] =======
scala.reflect.internal.Positions$ValidateException: Unpositioned tree #1837097
	at scala.reflect.internal.Positions$class.positionError$1(Positions.scala:102)
	at scala.reflect.internal.Positions$class.validate$1(Positions.scala:112)
	at scala.reflect.internal.Positions$class.validate$1(Positions.scala:142)
	at scala.reflect.internal.Positions$class.validate$1(Positions.scala:142)
	at scala.reflect.internal.Positions$class.validate$1(Positions.scala:142)
	at scala.reflect.internal.Positions$class.validate$1(Positions.scala:142)
	at scala.reflect.internal.Positions$class.validate$1(Positions.scala:142)
	at scala.reflect.internal.Positions$class.validate$1(Positions.scala:142)
	at scala.reflect.internal.Positions$class.validate$1(Positions.scala:142)
	at scala.reflect.internal.Positions$class.validate$1(Positions.scala:142)
	at scala.reflect.internal.Positions$class.validate$1(Positions.scala:142)
	at scala.reflect.internal.Positions$class.validate$1(Positions.scala:142)
	at scala.reflect.internal.Positions$class.validate$1(Positions.scala:142)
	at scala.reflect.internal.Positions$class.validate$1(Positions.scala:142)
	at scala.reflect.internal.Positions$class.validate$1(Positions.scala:142)
	at scala.reflect.internal.Positions$class.validate$1(Positions.scala:142)
	at scala.reflect.internal.Positions$class.validate$1(Positions.scala:142)
	at scala.reflect.internal.Positions$class.validatePositions(Positions.scala:147)
	at scala.reflect.internal.SymbolTable.validatePositions(SymbolTable.scala:16)
	at scala.tools.nsc.typechecker.Analyzer$typerFactory$$anon$3.apply(Analyzer.scala:103)
	at scala.tools.nsc.Global$GlobalPhase$$anonfun$applyPhase$1.apply$mcV$sp(Global.scala:
{code}
Strangely, if I compile again, the error disappears.

Source code of offending file:
{code}
package jima.produccion.area

import java.io.Writer
import java.net.InetAddress
import java.util.Date

import com.zktechnology.zkproto._
import fcc.ima.rima.pet.PeticionExplicita
import fcc.ima.rima.rec.ProcesoTextual
import fcc.ima.util.ExcepcionSinPilaLlamadas
import fcc.vision.jython.Jython
import fcc.vision.modelo.util.UtilJython
import fcc.vision.zkproto.Cliente
import org.apache.commons.logging.LogFactory
import org.apache.thrift.protocol.TBinaryProtocol
import org.apache.thrift.transport.TSocket
import org.python.core.PyException

import scala.collection.JavaConversions._
import scala.util.control.NonFatal

object ClientesZK {
	/** Formato de linea de cliente*/
	private val reCliente = raw"_id=(\d+).*;code=([^;]+).*;last_pull=(\d+).*id_zone=(-?\d+).*".r
	/** Formato de linea de zona*/
	private val reZona = raw"_id=([^;]+);name=([^;]+).*".r
}

class ClientesZK extends ProcesoTextual {
	import ClientesZK._
	private val traza = LogFactory.getLog(getClass)
        .....
}
{code}
It's the first time I see this error, and it appears to be an internal compiler error.

More data:
- Scala version: 2.11.7.
- OpenJDK Runtime Environment (build 1.8.0_72-b15)
- OpenJDK 64-Bit Server VM (build 25.72-b15, mixed mode)
