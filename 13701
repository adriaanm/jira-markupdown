this is pretty minor in the grand scheme of things, but I'll go ahead and report it anyway...

javac doesn't mind if you give it the same file twice:
```scala
  ~> javac J.java J.java 
```

but scalac gets confused, regardless of whether the repeated file is Scala source or Java source:
```scala
  ~> scalac S.scala S.scala 
S.scala:1: error: S is already defined as object S
object S
       ^
one error found
  ~> scalac J.java J.java S.scala
J.java:1: error: J is already defined as class J
class J { }
      ^
one error found
```

(this situation actually arose for me in practice because of a peculiarity in the way my build system was generating lists of files to be compiled. working around it wasn't hard)
