Maybe you guys have some good reason to be focusing elsewhere, but naive old extempore here would say the problem is that the argument types are not subtypes of the calculated lub.  If I modify the lub calculation to pick a lub which is lubby, everything is fine.

{noformat}
// After lub modification
import scala.collection.mutable.ListBuffer

class A {
  def foo[T](a:T, b:T):T = a
  def f1 = foo(ListBuffer(), List())
  def f2 = foo(ListBuffer(), ListBuffer())
  def f3 = foo(List(), List())
  
  // scalap
  // def f1 : scala.collection.Seq[scala.Nothing] = { /* compiled code */ }
  // def f2 : scala.collection.mutable.ListBuffer[scala.Nothing] = { /* compiled code */ }
  // def f3 : scala.collection.immutable.List[scala.Nothing] = { /* compiled code */ }
}
{noformat}
Tell me what I'm missing.
