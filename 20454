Reproduce code:
```
object Test1 { 1 -> 2 }       // ok
object Test2 { 1.->(2) }      // ok
object Test3 { 1.->[Int](2) } // ok
object Test4 { 1 ->[Int] 2 }  // fails

object Test5 { List(1,2).foreach(println) }       // ok
object Test6 { List(1,2) foreach println }        // ok
object Test7 { List(1,2).foreach[Unit](println) } // ok
object Test8 { List(1,2) foreach[Unit] println }  // fails
```

Reproduce steps:
```
scala -Yrangepos -e "1 ->[Int] 2"
```

Expected result:
compiles

Actual result:
```
======= Position error
Enclosing tree [28] does not include tree [27]
== Enclosing tree [28] of type TypeApply at [0:1]scalacmd6534136997205619280.scala

[L   1        ] #28     [0:1]           TypeApply  // 1 

== Enclosed tree [27] of type Select at [0:4]scalacmd6534136997205619280.scala

[L   1        ] #27     [0:4]           Select     // ->[In


While validating #67
[L   1        ] #67     [0:11]          PackageDef // 1 ->[Int] 2

Children:
  [L   1 P#   67] #66     [0:0]           Ident      // 1
  [L   1 P#   67] #65     [0:11]          ModuleDef  // 1 ->[Int] 2
=======
error: Compile server encountered fatal condition: Enclosing tree [28] does not include tree [27]
```

Note: This example produces a syntax error in 2.10.x but is ok in 2.11+ without `-Yrangepos`.
