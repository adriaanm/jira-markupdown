The following code produces a VerifyError at runtime:
```scala
case class ParentType(parameter: String)

object ChildType extends ParentType(ChildType.something) {
  val something = "1.2.3.4"
}

object Main {
  def main(args: Array[String]): Unit = {
    println(ChildType) // <- That's line 9
  }
}
```

This is the interesting part of the error:
```scala
java.lang.VerifyError: (class: ChildType$$, method: <init> signature: ()V) Expecting to find object/array on stack
        at Main$$.main(Main.scala:9)
        at Main.main(Main.scala)
```

In my opinion scalac should correctly compile this (= allow SubType to be derived from ParentType and passing the value of 'something' directly to ParentType upon it's creation).

Versions in use:
Scala: 2.8.1, 2.8.0, 2.7.7
Java: 1.6.0_18, 64 Bit Server VM, OpenJDK
Operating system: Linux, Fedora 12, 64 Bit

This issue was reported on the scala-user mailing list:
http://www.scala-lang.org/node/8328

There is a similar issue already in trac: scala/bug#3913
