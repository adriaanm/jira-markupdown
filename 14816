Using Scala version 2.8.0.r20087-b20091210111324 (OpenJDK 64-Bit Server VM, Java 1.6.0_0)

Given A.scala:
{code}
class A {
  implicit def e: E = new E
  def x(i: Int)(implicit y: E): String = ""
}
class E
{code}

B.scala:
{code}
object B extends A {
  val y = x(3)
}
{code}

 1. Compile A.scala, B.scala
 1. Remove 'implicit' from A.x:
{code}
  def x(i: Int)(y: E): String = ""
{code}
 1. Mark A.scala updated.  B.scala is not recompiled, missing an error.
 1. If B.scala is explicitly marked as updated, the following error is correctly generated:
{code}
B.scala:2: error: missing arguments for method x in class A;
follow this method with `_' if you want to treat it as a partially applied function
        val y = x(3)
                 ^
{code}
