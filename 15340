In defining class paraterms, it seems 'val' and 'var' can be omitted on scala 2.8RC. 
For example,
{code}
  $$ scala
  Welcome to Scala version 2.8.0.RC2 (Java HotSpot(TM) Client VM, Java 1.6.0_16).
  Type in expressions to have them evaluated.
  Type :help for more information.
  
  scala> class X(private x:Int)
  defined class X
{code}

On the other hand,
{code}
  $$ scala
  Welcome to Scala version 2.7.7.final (Java HotSpot(TM) Client VM, Java 1.6.0_16).
  Type in expressions to have them evaluated.
  Type :help for more information.

  scala> class X(private x:Int)
  <console>:1: error: 'val' expected but identifier found.
       class X(private x:Int)
{code}

I guess that "class X(private x:Int)" will be parsed by Parser#paramClausesr1 method, and it has the following comments,
{code}
  /** ParamClauses      ::= {ParamClause} [[nl] `(' implicit Params `)']
   *  ParamClause       ::= [nl] `(' [Params] ')'
   *  Params            ::= Param {`,' Param}
   *  Param             ::= {Annotation} Id [`:' ParamType] [`=' Expr]
   *  ClassParamClauses ::= {ClassParamClause} [[nl] `(' implicit ClassParams `)']
   *  ClassParamClause  ::= [nl] `(' [ClassParams] ')'
   *  ClassParams       ::= ClassParam {`,' ClassParam}
   *  ClassParam        ::= {Annotation}  [{Modifier} (`val' | `var')] Id [`:' ParamType] [`=' Expr]
   */
   def paramClauses(owner: Name, contextBounds: List[Tree], ofCaseClass: Boolean): List[List[ValDef]] = {
   ...
{code}

It seems to me, according to the above BNF definitions, "class X(private x:Int)" should be rejected.

Is this a bug, or has the syntax change been planed on 2.8?


r1 https://lampsvn.epfl.ch/trac/scala/browser/scala/tags/R_2_8_0_RC2/src/compiler/scala/tools/nsc/ast/parser/Parsers.scala?rev=21944#L1713
