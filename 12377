Thanks, 
I found some more material: https://groups.google.com/forum/#!searchin/scala-language/implicit$20same$20name|sort:relevance/scala-language/Q5nn-vi4tCU/FLx8fowgTHUJ
and this http://scalapuzzlers.com/#pzzlr-033

I finally understood that in this example, B.Imp is shadowing A.Imp, regardless of it's signature.
So Imp(i: Int) is not available because it has been shadowed by Imp(i : String).

and replacing 
{code}
import A._
import B._
{code}

with 

{code}
import B._
import A._
{code}

would have worked.

Now, why the shadowing works on the name without the signature, I do not know, and I think there is matter to discussion, but I agree this is another debate. 

I will comment the SO as well.
