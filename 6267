In a trait, the methods are abstract and they have no code.  That's presumably why lookupImplFor aborts, and that's also how I ended up hacking in the implementation class the last time around.

GenICode:
```scala
      case DefDef(mods, name, tparams, vparamss, tpt, rhs) =>
        debuglog("Entering method " + name)
        val m = new IMethod(tree.symbol)
        ...
        if (!m.isAbstractMethod && !m.native) {
          // stuff which leads to m.code being populated
        }
        else
          ctx1.method.setCode(null)
```
I'll look around some more.
