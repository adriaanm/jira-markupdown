The following code should not compile:
```scala
val (is: Option[String], not: Option[String]) = ("a", "b") match {
  case ("b", _) => (Some("Dog"), None)
  case _ => (Some((1,2)), Some("Dog"))
}

is.foreach(v => println(v.length))
```
Note that 'is' is typed as an Option[String], but it is assigned either Option[String] or Option[(Int, Int)]

This leads to a runtime error.
