Another example from the mailing list: 

{code}
scala> val e: java.lang.Enum[_] = java.util.concurrent.TimeUnit.SECONDS

scala> e match { case _ => 0 }
<console>:9: error: type arguments [_$1] do not conform to class Enum's type parameter bounds [E <: Enum[E]]
              e match { case _ => 0 }
              ^
[[syntax trees at end of                 refchecks]] // <console>
package $line4 {
  object $read extends scala.AnyRef {
    def <init>(): $line4.$read.type = {
      $read.super.<init>();
      ()
    };
    object $iw extends scala.AnyRef {
      def <init>(): type = {
        $iw.super.<init>();
        ()
      };
      object $iw extends scala.AnyRef {
        def <init>(): type = {
          $iw.super.<init>();
          ()
        };
        private[this] val res0: Int = {
          case <synthetic> val x1: Enum[_$1] = $line3.$read.$iw.$iw.e;
          case4(){
            matchEnd3(0)
          };
          matchEnd3(x: Int){
            x
          }
        };
        <stable> <accessor> def res0: Int = $iw.this.res0
      }
    }
  }
}
{code}

This is somewhat related to SI-7694; the pattern matcher translation now happens *before* refchecks, and the TypeTree in the tpt of the synthetic temporary `x1` is subject to bounds checking.
