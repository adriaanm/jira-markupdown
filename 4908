hmm, this seems somewhat limited as an implementation.

Anytime I want to use a CardLayout I find myself wanting to use the following functions (much more than the arbitrary String lookup of the Components)

* first
* last
* next
* previous

and being able to access the current Component that is shown. This I do with the following helper method


{code}
  def current = getComponents.filter(_.isVisible).headOption
{code}

If these functions were made available to subclasses of CardPanel, then very clean code to replace the following would be possible


{code}
  addKeyListener(new KeyAdapter {
    override def keyPressed(e: KeyEvent) {
      e.getKeyCode match {
        case KeyEvent.VK_ENTER if current == Some(panel3) =>
          log.info("finished...")

        case KeyEvent.VK_ENTER =>
          cards.next(IntroductionView.this)

        case KeyEvent.VK_LEFT if current != Some(panel0) =>
          cards.previous(IntroductionView.this)

        case _ =>
      }
    }
  })
{code}
