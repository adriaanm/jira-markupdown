The potential complementary bug doesn't exist:

{code}
scala> class X(val a: Int) extends AnyVal { def ==(other: X) = true }
defined class X

scala> new X(0) == new X(1)
res7: Boolean = true
{code}

The tree scrutinized by {{PostErasureTransformer}} here is:

{code}
  X.this.extension$==(new X(0.$asInstanceOf[Int]()).a().$asInstanceOf[Int](), new X(1.$asInstanceOf[Int]()).a().$asInstanceOf[Int]())
{code}

But in any case the match should be modified to replace {{cmp == nme.EQ || cmp == nme.NE}} with a symbol based check against {{Object_== / Object_!=}}.
