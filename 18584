*Reproduce code:*
{code}
trait TypedType[T]
trait Foo{
  def x = implicitly[TypedType[Int]]
  implicit val idMapper : Null
}
{code}
*Expected result:*
could not find implicit value for parameter e: TypedType[Int]	
*Actual result:*
compiles fine

In fact this code actually runs and prints null:
{code}
trait TypedType[T]
object Foo extends App{
  def x = implicitly[TypedType[Int]]
  implicit val nullImplicit : Null = null
  println(x)
}
{code}

This code on the other hand fails as expected:
{code}
trait TypedType[T]
trait Foo{
  def x = implicitly[TypedType[Int]] // <error>
}
{code}
