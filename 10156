Closing, please open a new issue if you think we should pursue the  better-than-Java error suppression when touching types with erroneous parents. I reckon such a scheme should work uniformly for:
```scala
trait Foo { def foo }
trait C extends Fooo {
  foo
}

object Test {
   val c = C
   import c._
   foo
```

So we'd need to taint the type of `c` as incomplete somehow (while retaining it's `C`-ness to avoid other cascading errors...

Given that the primary error often is the first in the list, I'd like to declare that as a small fish that we need not fry right now.
