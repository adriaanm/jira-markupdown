```scala
object Main extends App {
  class A(val i: Int)
  object A {
    def A(i: Int): A = new A(i)
  }
  import A._
  A(1).i
}
```
fails with 
```
[error] /tmp/rendererFYbR1CBqUc/src/main/scala/test.scala:11: Main.A.type does not take parameters
[error]   A(1).i
```
in both 2.10.x and 2.9.x 
so it looks like incosistency between implicit and regular method resolution was fixed in 2.10 but this leads to more confusing results, doesn't it?
shouldn't def A be considered if object A is not applicable?
