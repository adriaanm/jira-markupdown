I think this is the use case (shown in your version):

{code}
scala> :cp /tmp
Added '/tmp'.  Your new classpath is:
".:/tmp"
Nothing to replay.

scala> getClass.getResource("/sample/Test.class")
res0: java.net.URL = file:/tmp/sample/Test.class

scala> sample.Test main null
<console>:8: error: not found: value sample
              sample.Test main null
              ^

{code}

That is, we want to put something on the compiler's class path, not just the runtime class path of the interpreter.

The trick is to do that without blowing away the interpreter.

Replaying might be OK; sometimes I find I have `res6` references that depend on how things are replayed.

My fix was to use a custom `ClassPath` for `ReplGlobal` that lets you modify it in-flight. The replay option might turn out to be more robust.
