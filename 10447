The inference failure does not appear to be a bug; the type of `arg` contains a pair of overloaded `foreach` members; one contributed by `Tree`, and the second contributed by `List[List[Tree]]`

This amounts to:
```scala
trait A { def foo(f: Int => String)}
sealed abstract class B1
final class B extends B1 { def foo(f: String => Int)}

object Test {
  def foo(a: A) = a match {
    case b: B1 =>
      b.foo(x => x)
  }
}
```

It is a pity that our static checks don't detect the "fruitless type test" here as they would if `B` were final.
