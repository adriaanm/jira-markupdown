I need a kind of thing, where you could have a variable, which is only available to be written from private context, but you could still read it from context you've specified via modifiers.

Example of what i'm talking about
{code:scala}
private var _value = 123
def value: Int = _value
{code}

That piece of code always bugs me, especially because i have to use it a lot throughout my code.

A suggest using something like this instead
{code:scala}
sealed var value = 123
{code}

I know this is must be possible to do, simple thing and i don't introduce any new keywords, 'sealed' is used only for classes now, so nothing can go wrong.
Watching, how often this pattern is used in my code i think this is a good feature and it should exist, with all of it's benefits.
Also Scala has 'lazy' modifier for vals, which is almost the same thing compiler-wise(even more simple, make getter with whatever modifiers you have and setter - private of similar to 'sealed' in classes).
