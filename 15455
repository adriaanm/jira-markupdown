Currently when declaring something one faces a choice: either say nothing about the type or fully specify it.

This causes redundancy in some cases, like the following:
```scala
var x : Map[Int, Int] = new HashMap[Int, Int]()
```

In this case, the "[Int, Int]" part is redundant, but omitting the type doesn't give the desired type.

The proposal to solve this is to allow specifying a type pattern instead of the type, like this:
```scala
var x : Map[_, _] = new HashMap[Int, Int]()
```

If multiple matches are possible, either raise an error or take the structural type which is the union of the matches.

If no matches are possible, raise an error.
