Replying to [comment:6 odersky]:
> The problem is the recursive call to class foo in the anonymous class that's created
> for bar's call by name parameter. To resolve that call lambda lift tries to find member `foo' of B. But since `foo' is defined in the constructor, it is not a member of `B'.

To my naive eye it looks like always lifting functions defined inside constructor or super calls into the companion object rather than the instance would solve this issue.  As I understand it, that was the solution to SI-1909.  If methods defined in these places can't reference "this" anyway since it doesn't exist yet, what is lost by making it static?
