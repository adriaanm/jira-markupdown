this is indeed a bug -- using unique names for the type parameters makes the error message clearer:

{code}
package test

trait AnotherChild[A3] extends AChild[A3]

// error: class ActualClass needs to be abstract, since method f in class AChild of type 
// (x$$1: test.TopLevelParent[UpHere]#Inner2)Unit is not defined
class ActualClass[A] extends AnotherChild[A] {
  def f(ic: test.TopLevelParent[A]#Inner2): Unit = () //Inner2
}
{code}


{code}
package test;

public abstract class TopLevelParent<UpHere>{
    public class Inner1 {
    }

    public class Inner2 extends Inner1 {
    }
}

abstract class AChild<A1> extends TopLevelParent<A1> {
    abstract void f(Inner2 ic);
}

class child2<A2> extends AChild<A2> {
    void f(Inner2 ic){
    }
}
{code}
