Here's a test case which compiles for me but not at the time I tried your 8177 branch.
```scala
trait HasA { type A; var p: A = _ }

package p1 {
  class AA[T](final val x: HasA { type A = T }) { def foo: x.A = ??? }
  class B extends AA[Int](null) { def bar: B.this.x.A = foo }
}

package p2 {
  object Types { type HasAT[T] = HasA { type A = T } }
  class AA[T](final val x: Types.HasAT[T]) { def foo: x.A = ??? }
  class B extends AA[Int](null) { def bar: B.this.x.A = foo }
}
```
In your branch I changed the last line of isEligibleForPrefixUnification to
```scala
case _                     => (tp ne tp.dealias) && isEligibleForPrefixUnification(tp.dealias)
```
Which allowed that to compile and all tests still passed, so if it introduces something bad it's on the untested side of the ledger.
