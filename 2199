The function you need is present in Ordering, it's just not marked implicit:
{code}
  def ordered[A <: Ordered[A]] : Ordering[A] = new Ordering[A] {
    def compare(x : A, y : A) = x.compare(y);
  }
{code}
However I can't just mark it implicit because this breaks the coexistence of Ordering and Ordered by creating ambiguities with all the other implicits in Ordering.  As yet I don't have an idea how to address this.

For the moment you can create and pass it explicitly:
{code}
val tree = TreeMap.empty[Text, String](Ordering.ordered[Text])
{code}
