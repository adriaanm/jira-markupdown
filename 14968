Actual behaviour: When you override a method you can rename parameters. Then when you invoke the overriden method and pass parameters by name, the parameters will be assigned depending on the type of the expression or variable you use. As you almost always use type inference (+ implicits and other magic + refactoring) => you cannot be sure which type you use: base or derived. As a result you can get sometimes quite strange behaviour.

Expected behaviour: when you invoke overriden method and pass parameters by name and parameters were renamed then a warning should be shown.

consider example:

scala> class A { def f(s1: String, s2: String) = s1+s2 }

scala> class B extends A { override def f(s2: String, s1: String) = s2+s1 }

scala> (new B:B).f(s1= "a", s2 = "b")

res0: java.lang.String = ba

scala> (new B:A).f(s1= "a", s2 = "b")

res1: java.lang.String = ab
