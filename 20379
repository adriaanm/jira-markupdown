As the title says:
```
sealed trait Root[F[_]]
case object ListRoot extends Root[List]
def void[F[_]](root: Root[F]): F[Unit] = root match {
               case ListRoot => Nil
} 

// pattern type is incompatible with expected type;
// found   : ListRoot.type
// required: Root[F]
// case ConstInt => 1
```
