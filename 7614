Yes, the terminology we have to describe evaluation semantics is unreasonably impoverished.  I have no better word, but if ambiguity is a concern I call by-name parameters thunks (whether that's an accurate use of that word or not, people at least tend to know what I mean.)

I have asked martin for by-name + varargs before, the use case I often encounter being logging - I'd really like to be able to write

  def log(fmt: String, args: =>Any*) = if (logging) println(fmt.format(args: _*))

  log("%s: %s %s", foo, bar, baz)

A single instance could serve to hold all three (or N) methods, something like

{code}
class AnonVarargs extends (Int => T) {
  def apply(index: Int) = index match {
    case 0 => foo
    case 1 => bar
    case 2 => baz
  }
}
{code}

There was some objection which I no longer remember.
