When the container is a generic class instead of a generic trait, the warning still occurs.
```scala
class Foo3[UnusedTypeParameter] {
  sealed trait T
  object O extends T
  def f(t: T) = t match { case O => 1 }
}
```

It also occurs if the type parameter is referenced
```scala
class Foo4[A] {
  sealed trait T
  object O extends T
  def f[A](t: T, v: A) = t match { case O => v }
}
```
