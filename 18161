{code}
// Cyclic.java
abstract class Cyclic {
  static interface Inner<T extends Inner> { }
}
{code}

{code}
// Test.scala
import scala.reflect.runtime.universe._

object Test extends App {
  println(typeOf[Cyclic].members)
}
{code}

running this program yields
{code}
scala.reflect.internal.Symbols$CyclicReference: illegal cyclic reference involving type T
	at scala.reflect.internal.Symbols$Symbol$$anonfun$info$3.apply(Symbols.scala:1218)
{code}
