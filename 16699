This is a simple function:

{code}
def parse: Int = {
  var texts = Array("1","2","3","123")

  //either foreach or for(text <- texts) DO raise same exception
  texts.foreach{ text =>
    return try { text.toInt } catch { case _ => -1 }
  }
  0
}
{code}

Please do not mind about the purpose of the function. I tried but could not know how to code to show the purpose. I shortened it from my code.

The code can be compiled. It raises exception at runtime. I got this exception:

{code}
java.lang.VerifyError: (class: $anonfun$parse$1, method: apply signature: (Ljava/lang/String;)Lscala/runtime/Nothing$;) Inconsistent stack height 0 != 3
        at .parse(<console>:11)
        at .<init>(<console>:9)
        at .<clinit>(<console>)
        at .<init>(<console>:11)
        at .<clinit>(<console>)
        at $print(<console>)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:601)
        at scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:704)
        at scala.tools.nsc.interpreter.IMain$Request$$anonfun$14.apply(IMain.scala:920)
        at scala.tools.nsc.interpreter.Line$$anonfun$1.apply$mcV$sp(Line.scala:43)
        at scala.tools.nsc.io.package$$anon$2.run(package.scala:25)
        at java.lang.Thread.run(Thread.java:722)
{code}

I guess this issue is similar to this one: https://issues.scala-lang.org/browse/SI-203
