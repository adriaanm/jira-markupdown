Here's the same using `p matcher str find` (which is what `findFirst` calls) and it has the same result, or lack thereof:
```scala
scala> import java.util.regex._
import java.util.regex._

scala> Pattern compile expr
res0: java.util.regex.Pattern = (?s).*\({0,1}(\d{3})\){0,1}[ \.-]{0,1}(\d{3})[ \.-]{0,1}(\d{4}).*(?:Host:|Server:)\s+(?:((?:\w+\s{0,1})+)).*\s+(\d{1,2}/\d{1,2}/\d{2,4}).*\s+(\d{1,2}:\d{2}\s[AP]M).*\s+\d+/(\d{5})

scala> res0 matcher str
res1: java.util.regex.Matcher = java.util.regex.Matcher[pattern=(?s).*\({0,1}(\d{3})\){0,1}[ \.-]{0,1}(\d{3})[ \.-]{0,1}(\d{4}).*(?:Host:|Server:)\s+(?:((?:\w+\s{0,1})+)).*\s+(\d{1,2}/\d{1,2}/\d{2,4}).*\s+(\d{1,2}:\d{2}\s[AP]M).*\s+\d+/(\d{5}) region=0,259 lastmatch=]

scala> .find
apm@mara:~/tmp$ 
```

That is one gnarly pattern.

Maybe the `matches` method gives up early and says, Nothing could possibly match that.

