The REPL normally catches exceptions:
```scala
scala> case object A { override def toString = ??? }
scala> A
scala.NotImplementedError: an implementation is missing
scala>
```

MatchError is fine too:
```scala
scala> object B { override def toString = ("str":Any) match { case 1 => "ok" } }
defined module B

scala> B
scala.MatchError: str (of class java.lang.String)

scala>
```

but not this MatchError:
```scala
scala> :paste
// Entering paste mode (ctrl-D to finish)

trait X {
  override def toString = this match{
    case Z(z) => z.toString
  }
}
case class Y(y: Int) extends X
case class Z(z: Int) extends X

// Exiting paste mode, now interpreting.

defined trait X
defined class Y
defined class Z

scala> Y(0)
Exception in thread "main" 
Exception: scala.MatchError thrown from the UncaughtExceptionHandler in thread "main"
12:01 morbo:~ $ 
```

Any ideas?
