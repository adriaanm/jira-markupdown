Poking around I found a a variation which crashes the compiler in mixin rather than generating a VerifyError. I think this will naturally be scooped up by the fix you're already on, but for completeness.
{code}
class O1 { def f = "" } // O1 must be a class
class O2 extends O1 {
  class T1 { def g = O2.super[O1].f } // ok
  trait T2 { def g = O2.super[O1].f } // crash
}
/****

class O2$T2$class
  at scala.tools.nsc.transform.Mixin$MixinTransformer.scala$tools$nsc$transform$Mixin$MixinTransformer$$postTransform(Mixin.scala:1202)
  at scala.tools.nsc.transform.Mixin$MixinTransformer$$anonfun$transform$1.apply(Mixin.scala:1248)
  at scala.tools.nsc.transform.Mixin$MixinTransformer$$anonfun$transform$1.apply(Mixin.scala:1248)
  at scala.reflect.internal.SymbolTable.atPhase(SymbolTable.scala:201)

****/
{code}
