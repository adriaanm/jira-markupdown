Here's a reduced example:

Base.java 
{code}
abstract class Base {
  abstract Class foo(Object o);
}
{code}

Derived.scala 
{code}
class Derived extends Base {
  def foo(a: AnyRef) = classOf[String]
}
{code}

Compilation
{code}
$$ scalac Base.java Derived.scala 
Derived.scala:2: error: type mismatch;
 found   : java.lang.Class[String](classOf[java.lang.String])
 required: java.lang.Class
  def foo(a: AnyRef) = classOf[String]
                              ^
one error found
{code}
