{code}
import scala.language.dynamics

class Base { def someInt: Int }
class Test extends Base {
  implicit val foo: String = ""
  class DynWithImplicit extends Dynamic {
    def selectDynamic(k: String)(implicit w: String): String = ???
  }
  
  // error message comes too late (delayed until pickling):
  // expanding the selectDynamic will result in the error being correctly reported during typer  
  def someInt = (new DynWithImplicit).gimmeAnInt 
  //    ^ error: erroneous or inaccessible type 

}
{code}
