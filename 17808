{code}
import scala.annotation.tailrec

object Foo {
  implicit class Foo[A](val x: Int) extends AnyVal {
    def bippy() = {
      @tailrec def loop(x: A): Unit = loop(x)
      ()
    }
  }
  // uncaught exception during compilation: Types$TypeError("type mismatch;
  //  found   : A(in method bippy$extension)
  //  required: A(in class Foo)") @ scala.tools.nsc.typechecker.Contexts$Context.issueCommon(Contexts.scala:396)
  // error: scala.reflect.internal.Types$TypeError: type mismatch;
  //  found   : A(in method bippy$extension)
  //  required: A(in class Foo)
}
{code}
