_81 is a fictional value which was sought but not found; it ties F#A and F#C together with a common prefix. Your code is written as if an F#A and an F#C are as intimate with one another as an f.A and an f.C, and as you discovered, they aren't. You might try something like
```scala
class Bar[F <: Foo](val f: F) {
  def apply(a: f.A, c: f.C) = c.getB(a)
}
```
You should be able to write
```scala
class Bar[F <: Foo](val f: F)(a: f.A, c: f.C) { }
```
but there's scala/bug#5712 so it works for methods but not classes.
