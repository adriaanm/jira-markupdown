The scaladoc for scala.util.parsing.combinator.Parsers shows this signature for rep1sep:
```scala
def  rep1sep[T](p : => Parser[T], q : => Parser[Any]) : Parser[List[T]]
```

but the doc describes an extra first parameter before p:
```scala
    rep1sep(first, p, q) starts by using `first', followed by repeatedly uses of `p' interleaved with `q' to parse the input, until `p' fails. 

Parameters
    first - a `Parser' that is to be applied to the first element of input
...
```

Similarly, the scaladoc for rep1 uses 'f' but the signature names it 'first':
```scala
rep1(f, p) first uses `f' (which must succeed) and then repeatedly uses `p' 
```
