This looks to be a bug in the array-related changes to cleanup, which deals with reflective calls.  Below is a distilled crasher.  You can work around it in scalacheck by not doing this:
{code}
  lazy val property = new {
    def update(propName: String, p: Prop) = props += ((name+"."+propName, p))
  }
{code}

Instead something more like this:
{code}
  class PropertySpecifier() {
    def update(propName: String, p: Prop) = props += ((name+"."+propName, p))
  }    
  lazy val property = new PropertySpecifier()
{code}
...which you should be doing anyway, the tiny savings in typing is not worth slower and sketchier.

Small crasher:
{code}
object o {  
  val props = new scala.collection.mutable.ListBuffer[(String,String)]
  lazy val property = new {
    def update(propName: String, p: String) = props += ((propName, p))
  }
  def crash = property("a") = "b"
}
{code}
