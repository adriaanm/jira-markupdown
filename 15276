The error goes away if you remove @specialized, or if you remove the supertype, or if you make findOffset protected.

The file:

{code}
class SparseArray[@specialized T:ClassManifest] extends collection.mutable.Map[Int,T] with collection.mutable.MapLike[Int,T,SparseArray[T]] {
  override def get(x: Int) = {
    val ind = findOffset(x)
    if(ind < 0) None else Some(error("ignore"))
  }

  /**
   * Returns the offset into index and data for the requested vector
   * index.  If the requested index is not found, the return value is
   * negative and can be converted into an insertion point with -(rv+1).
   */
  private def findOffset(i : Int) : Int = {
    error("impl doesn't matter")
  }

  override def apply(i : Int) : T = { error("ignore") }
  override def update(i : Int, value : T) = error("ignore")
  override def empty = new SparseArray[T];
  def -=(ind: Int) = error("ignore")
  def +=(kv: (Int,T)) = error("ignore")
  override final def iterator = error("ignore")
}


{code}


the stack trace:

{code}
scala.tools.nsc.symtab.Types$$TypeError: method findOffset cannot be accessed in SparseArray$$mcV$$sp
        at scala.tools.nsc.typechecker.Contexts$$Context.error(Contexts.scala:274)
        at scala.tools.nsc.typechecker.Infer$$Inferencer.error(Infer.scala:214)
        at scala.tools.nsc.typechecker.Infer$$Inferencer.errorTree(Infer.scala:218)
        at scala.tools.nsc.typechecker.Infer$$Inferencer.accessError$$1(Infer.scala:256)
        at scala.tools.nsc.typechecker.Infer$$Inferencer.checkAccessible(Infer.scala:273)
        at scala.tools.nsc.typechecker.Typers$$Typer.makeAccessible(Typers.scala:588)
        at scala.tools.nsc.typechecker.Typers$$Typer.typedSelect$$1(Typers.scala:3473)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:3949)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:4042)
        at scala.tools.nsc.typechecker.Duplicators$$BodyDuplicator.typed(Duplicators.scala:248)
        at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$typedApply$$1$$1.apply(Typers.scala:3248)
        at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$typedApply$$1$$1.apply(Typers.scala:3248)
        at scala.tools.nsc.typechecker.Typers$$Typer.silent(Typers.scala:702)
        at scala.tools.nsc.typechecker.Typers$$Typer.typedApply$$1(Typers.scala:3248)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:3888)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:4042)
        at scala.tools.nsc.typechecker.Duplicators$$BodyDuplicator.typed(Duplicators.scala:290)
        at scala.tools.nsc.typechecker.Typers$$Typer.transformedOrTyped(Typers.scala:4186)
        at scala.tools.nsc.typechecker.Typers$$Typer.typedValDef(Typers.scala:1555)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:3703)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:4042)
        at scala.tools.nsc.typechecker.Duplicators$$BodyDuplicator.typed(Duplicators.scala:228)
        at scala.tools.nsc.typechecker.Typers$$Typer.typedStat$$1(Typers.scala:2032)
        at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$20.apply(Typers.scala:2100)
        at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$20.apply(Typers.scala:2100)
        at scala.collection.immutable.List.loop$$1(List.scala:116)
        at scala.collection.immutable.List.mapConserve(List.scala:133)
        at scala.tools.nsc.typechecker.Typers$$Typer.typedStats(Typers.scala:2100)
        at scala.tools.nsc.typechecker.Typers$$Typer.typedBlock(Typers.scala:1857)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:3733)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:4042)
        at scala.tools.nsc.typechecker.Duplicators$$BodyDuplicator.typed(Duplicators.scala:210)
        at scala.tools.nsc.typechecker.Typers$$Typer.transformedOrTyped(Typers.scala:4186)
        at scala.tools.nsc.typechecker.Typers$$Typer.typedDefDef(Typers.scala:1740)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:3706)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:4042)
        at scala.tools.nsc.typechecker.Duplicators$$BodyDuplicator.typed(Duplicators.scala:222)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:4090)
        at scala.tools.nsc.typechecker.Duplicators.retyped(Duplicators.scala:32)
        at scala.tools.nsc.transform.SpecializeTypes$$$$anon$$6.duplicateBody(SpecializeTypes.scala:1176)
        at scala.tools.nsc.transform.SpecializeTypes$$$$anon$$6.transform(SpecializeTypes.scala:1053)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transformTrees$$1.apply(Trees.scala:831)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transformTrees$$1.apply(Trees.scala:831)
        at scala.collection.immutable.List.loop$$1(List.scala:116)
        at scala.collection.immutable.List.mapConserve(List.scala:133)
        at scala.collection.immutable.List.loop$$1(List.scala:120)
        at scala.collection.immutable.List.mapConserve(List.scala:133)
        at scala.collection.immutable.List.loop$$1(List.scala:120)
        at scala.collection.immutable.List.mapConserve(List.scala:133)
        at scala.tools.nsc.ast.Trees$$Transformer.transformTrees(Trees.scala:831)
        at scala.tools.nsc.transform.SpecializeTypes$$$$anon$$6$$$$anonfun$$transform$$3.apply(SpecializeTypes.scala:1038)
        at scala.tools.nsc.transform.SpecializeTypes$$$$anon$$6$$$$anonfun$$transform$$3.apply(SpecializeTypes.scala:1038)
        at scala.tools.nsc.ast.Trees$$Transformer.atOwner(Trees.scala:857)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:36)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:29)
        at scala.tools.nsc.transform.SpecializeTypes$$$$anon$$6.transform(SpecializeTypes.scala:1038)
        at scala.tools.nsc.ast.Trees$$Transformer.transformTemplate(Trees.scala:833)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transform$$2.apply(Trees.scala:727)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transform$$2.apply(Trees.scala:726)
        at scala.tools.nsc.ast.Trees$$Transformer.atOwner(Trees.scala:857)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:36)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:29)
        at scala.tools.nsc.ast.Trees$$Transformer.transform(Trees.scala:725)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.transform(TypingTransformers.scala:51)
        at scala.tools.nsc.transform.SpecializeTypes$$$$anon$$6.transform(SpecializeTypes.scala:1160)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transformStats$$1.apply(Trees.scala:849)
        at scala.tools.nsc.ast.Trees$$Transformer$$$$anonfun$$transformStats$$1.apply(Trees.scala:847)
        at scala.collection.immutable.List.loop$$1(List.scala:116)
        at scala.collection.immutable.List.mapConserve(List.scala:133)
        at scala.collection.immutable.List.loop$$1(List.scala:120)
        at scala.collection.immutable.List.mapConserve(List.scala:133)
        at scala.tools.nsc.ast.Trees$$Transformer.transformStats(Trees.scala:847)
        at scala.tools.nsc.transform.SpecializeTypes$$$$anon$$6$$$$anonfun$$transform$$2.apply(SpecializeTypes.scala:1025)
        at scala.tools.nsc.transform.SpecializeTypes$$$$anon$$6$$$$anonfun$$transform$$2.apply(SpecializeTypes.scala:1023)
        at scala.tools.nsc.ast.Trees$$Transformer.atOwner(Trees.scala:857)
        at scala.tools.nsc.transform.TypingTransformers$$TypingTransformer.atOwner(TypingTransformers.scala:36)
        at scala.tools.nsc.transform.SpecializeTypes$$$$anon$$6.transform(SpecializeTypes.scala:1023)
        at scala.tools.nsc.transform.SpecializeTypes$$SpecializationTransformer$$$$anonfun$$transform$$7.apply(SpecializeTypes.scala:1392)
        at scala.tools.nsc.transform.SpecializeTypes$$SpecializationTransformer$$$$anonfun$$transform$$7.apply(SpecializeTypes.scala:1391)
        at scala.tools.nsc.symtab.SymbolTable.atPhase(SymbolTable.scala:104)
        at scala.tools.nsc.transform.SpecializeTypes$$SpecializationTransformer.transform(SpecializeTypes.scala:1391)
        at scala.tools.nsc.ast.Trees$$Transformer.transformUnit(Trees.scala:850)
        at scala.tools.nsc.transform.Transform$$Phase.apply(Transform.scala:31)
        at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$applyPhase$$1.apply(Global.scala:272)
        at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$applyPhase$$1.apply(Global.scala:272)
        at scala.tools.nsc.reporters.Reporter.withSource(Reporter.scala:49)
        at scala.tools.nsc.Global$$GlobalPhase.applyPhase(Global.scala:272)
        at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$run$$1.apply(Global.scala:248)
        at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$run$$1.apply(Global.scala:248)
        at scala.collection.Iterator$$class.foreach(Iterator.scala:632)
        at scala.collection.mutable.ListBuffer$$$$anon$$1.foreach(ListBuffer.scala:305)
        at scala.tools.nsc.Global$$GlobalPhase.run(Global.scala:248)
        at scala.tools.nsc.Global$$Run.compileSources(Global.scala:729)
        at scala.tools.nsc.Global$$Run.compile(Global.scala:815)
        at scala.tools.nsc.Main$$.process(Main.scala:109)
        at scala.tools.nsc.Main$$.main(Main.scala:123)
        at scala.tools.nsc.Main.main(Main.scala)
{code}
