Another example where this isn't working. The `context.scope` checked by `nonImplicitSynonymInScope` doesn't contain the template member `x`.
```scala
object Test1 {
  object A { implicit val x: Int = 1 }
  import A.x
  def x: Int = 0
  implicitly[Int]
}
```

By contrast, this does shadow:
```scala
object Test2 {
  object A { implicit val x: Int = 1 }
  
  {
    import A.x
    def x: Int = 0
    implicitly[Int]
  }
}
```
