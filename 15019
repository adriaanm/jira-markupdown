I was able to trigger the problem by creating a project called test within eclipse, add a package named testpack, and created two files in the package.  The first named support.scala
{code}
package testpack

trait BufferSupport {
  type Buffer = { 
    def append(s: String): Unit
    def getLength(): Int
	def replace(offset: Int, length: Int, text: String): Unit      
  }
  
  implicit def stringBuilderToBuffer(bldr: StringBuilder) =
	  new BuilderAdapter(bldr)
}

class BuilderAdapter(sb: StringBuilder) {
  def append(s: String): Unit = sb.append(s)
  def getLength(): Int = sb.length
  def replace(offset: Int, length: Int, text: String): Unit = 
    sb.replace(offset, length, text)
}
{code}
The second called !SupportUser.scala
{code}
package testpack

class SupportService extends BufferSupport {
	
  val s = "ABCDEFGHIJK"
	  
  def writeTo(buffer: Buffer)(implicit ld: String): Unit = {
    buffer append s
  }
}

class SupportClient {
  import BufferSupport._  // The offending line
  val sb = new StringBuilder
  val ss = new SupportService
  ss.writeTo(sb)("\n")
  println(sb.toString)
}

{code}

When adding the import to !SupportClient, eclipse freezes and has to be killed.  The errors found are

{code}
java.lang.StackOverflowError
at sun.nio.cs.UTF_8$$Encoder.encodeArrayLoop(UTF_8.java:341)
at sun.nio.cs.UTF_8$$Encoder.encodeLoop(UTF_8.java:447)
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:544)
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:252)
at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:106)
at java.io.OutputStreamWriter.write(OutputStreamWriter.java:190)
at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:111)
at java.io.PrintStream.newLine(PrintStream.java:495)
at java.io.PrintStream.println(PrintStream.java:774)
at scala.Console$$.println(Console.scala:198)
at scala.tools.eclipse.ScalaPresentationCompiler$$EclipseTyperRun.compileSourceFor(ScalaPresentationCompiler.scala:142)
at scala.tools.eclipse.ScalaPresentationCompiler$$EclipseTyperRun.compileSourceFor(ScalaPresentationCompiler.scala:130)
at scala.tools.nsc.typechecker.Typers$$Typer.typedIdent$$1(Typers.scala:3683)
at scala.tools.nsc.typechecker.Typers$$Typer.typedIdent$$1(Typers.scala:3684)
at scala.tools.nsc.typechecker.Typers$$Typer.typedIdent$$1(Typers.scala:3684)
at scala.tools.nsc.typechecker.Typers$$Typer.typedIdent$$1(Typers.scala:3684)
at scala.tools.nsc.typechecker.Typers$$Typer.typedIdent$$1(Typers.scala:3684)
at scala.tools.nsc.typechecker.Typers$$Typer.typedIdent$$1(Typers.scala:3684)
at scala.tools.nsc.typechecker.Typers$$Typer.typedIdent$$1(Typers.scala:3684)
at scala.tools.nsc.typechecker.Typers$$Typer.typedIdent$$1(Typers.scala:3684)
at scala.tools.nsc.typechecker.Typers$$Typer.typedIdent$$1(Typers.scala:3684)
at scala.tools.nsc.typechecker.Typers$$Typer.typedIdent$$1(Typers.scala:3684)
at scala.tools.nsc.typechecker.Typers$$Typer.typedIdent$$1(Typers.scala:3684)
at scala.tools.nsc.typechecker.Typers$$Typer.typedIdent$$1(Typers.scala:3684)
at scala.tools.nsc.typechecker.Typers$$Typer.typedIdent$$1(Typers.scala:3684)
at scala.tools.nsc.typechecker.Typers$$Typer.typedIdent$$1(Typers.scala:3684)
at scala.tools.nsc.typechecker.Typers$$Typer.typedIdent$$1(Typers.scala:3684)
at scala.tools.nsc.typechecker.Typers$$Typer.typedIdent$$1(Typers.scala:3684)
at scala.tools.nsc.typechecker.Typers$$Typer.typedIdent$$1(Typers.scala:3684)
at scala.tools.nsc.typechecker.Typers$$Typer.typedIdent$$1(Typers.scala:3684)
{code}
and
{code}
java.lang.Error: no-symbol does not have owner
at scala.tools.nsc.symtab.Symbols$$NoSymbol$$.owner(Symbols.scala:1985)
at scala.tools.nsc.typechecker.Typers$$Typer.typedIdent$$1(Typers.scala:3694)
at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:4042)
at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:4124)
at scala.tools.nsc.typechecker.Typers$$Typer.typedTypeConstructor(Typers.scala:4237)
at scala.tools.nsc.typechecker.Typers$$Typer.typedTypeConstructor(Typers.scala:4260)
at scala.tools.nsc.typechecker.Typers$$Typer.parentTypes(Typers.scala:1121)
at scala.tools.nsc.typechecker.Namers$$Namer.templateSig(Namers.scala:676)
at scala.tools.nsc.typechecker.Namers$$Namer.classSig(Namers.scala:747)
at scala.tools.nsc.typechecker.Namers$$Namer.typeSig(Namers.scala:1132)
at scala.tools.nsc.typechecker.Namers$$Namer$$$$anonfun$$typeCompleter$$1.apply(Namers.scala:517)
at scala.tools.nsc.typechecker.Namers$$Namer$$$$anonfun$$typeCompleter$$1.apply(Namers.scala:515)
at scala.tools.nsc.typechecker.Namers$$$$anon$$1.complete(Namers.scala:1304)
at scala.tools.nsc.typechecker.Namers$$$$anon$$1.complete(Namers.scala:1302)
at scala.tools.nsc.symtab.Symbols$$Symbol.info(Symbols.scala:733)
at scala.tools.nsc.symtab.Symbols$$Symbol.initialize(Symbols.scala:843)
at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:3768)
at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:4124)
at scala.tools.nsc.typechecker.Typers$$Typer.typedStat$$1(Typers.scala:2126)
at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$20.apply(Typers.scala:2194)
at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$20.apply(Typers.scala:2194)
at scala.collection.immutable.List.loop$$1(List.scala:116)
at scala.collection.immutable.List.mapConserve(List.scala:133)
at scala.tools.nsc.typechecker.Typers$$Typer.typedStats(Typers.scala:2194)
at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:3775)
at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:4124)
at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:4177)
at scala.tools.nsc.typechecker.Analyzer$$typerFactory$$$$anon$$3.apply(Analyzer.scala:82)
at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$applyPhase$$1.apply(Global.scala:270)
at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$applyPhase$$1.apply(Global.scala:270)
at scala.tools.nsc.reporters.Reporter.withSource(Reporter.scala:48)
at scala.tools.nsc.Global$$GlobalPhase.applyPhase(Global.scala:270)
at scala.tools.nsc.interactive.Global$$TyperRun$$$$anonfun$$applyPhase$$1$$$$anonfun$$apply$$3.apply(Global.scala:530)
at scala.tools.nsc.interactive.Global$$TyperRun$$$$anonfun$$applyPhase$$1$$$$anonfun$$apply$$3.apply(Global.scala:530)
at scala.tools.nsc.symtab.SymbolTable.atPhase(SymbolTable.scala:102)
at scala.tools.nsc.interactive.Global$$TyperRun$$$$anonfun$$applyPhase$$1.apply(Global.scala:530)
at scala.tools.nsc.interactive.Global$$TyperRun$$$$anonfun$$applyPhase$$1.apply(Global.scala:530)
at scala.tools.nsc.reporters.Reporter.withSource(Reporter.scala:48)
at scala.tools.nsc.interactive.Global$$TyperRun.applyPhase(Global.scala:529)
at scala.tools.nsc.interactive.Global$$TyperRun.typeCheck(Global.scala:483)
at scala.tools.nsc.interactive.Global$$TyperRun.typedTree(Global.scala:520)
at scala.tools.nsc.interactive.Global.typedTree(Global.scala:321)
at scala.tools.nsc.interactive.Global$$$$anonfun$$getTypedTree$$1.apply(Global.scala:331)
at scala.tools.nsc.interactive.Global$$$$anonfun$$getTypedTree$$1.apply(Global.scala:331)
at scala.tools.nsc.interactive.Global.respond(Global.scala:276)
at scala.tools.nsc.interactive.Global.getTypedTree(Global.scala:331)
at scala.tools.nsc.interactive.CompilerControl$$$$anon$$3.apply(CompilerControl.scala:95)
at scala.tools.nsc.interactive.CompilerControl$$$$anon$$3.apply(CompilerControl.scala:94)
at scala.tools.nsc.interactive.Global.pollForWork(Global.scala:132)
at scala.tools.nsc.interactive.Global$$$$anon$$2.run(Global.scala:192)
{code}
I tried to create the same issue in the interpreter (command line not eclipse) but it flagged the import as 'not found: value !BufferSupport' as expected.
