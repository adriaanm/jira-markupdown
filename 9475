Regressed in 4c86dbbc49.
```

commit 4c86dbbc49
Author: Hubert Plociniczak <hubert.plociniczak@gmail.com>
Date:   7 months ago

    Closes SI-6358. Move accessor generation for lazy vals to typers.

    Until now lazy accessors were handled somehow special because their symbol
was created in typers but the corresponding tree was only added in Refchecks.
This irregularity caused serious problem s for value classes. Also it now looks
just better when lazy value is treated in a similar way as other fields.

    I needed to adapt reifier so that it handles the new implementation
correctly. Previously it had to recreate lazy val only by removing defdef and
renaming. Now we basically need to recreate laz y val from scratch.

    There is one minor change to cps plugin but that is still fine because lazy
vals were never really part of the transformation.

    Some range positions needed to be fixed manually. We could do it at the
creation time but that would require a lot more "if (symbol.isLazy)" conditions
for MethodSyntheis and Symbol/Tree creati on and would just unnecessary
complicate api. If someone has a better idea, please speak up. Range positions
changes were necessary because previously accessors were created at refchecks
and they w eren't checked by validator (even though they were wrong).

    This commit removes lazy val implementation restriction introduced for
    2.10.0. (cherry-picked from 981424b)
```
