Replying to [comment:1 ijuma]:
> Replying to [ticket:1879 ijuma]:
> > I will try to produce a reduced set of Java files that can cause this behaviour
> 
> I don't think I will be able to do this. I generated the oauth-core.jar locally and the problem went away. That seems to imply that it's not only related to the source code, but the class files as generated by some java compilers.

I can confirm that I've run into what seems to be exactly this bug on some of my code.  Indeed it is tricky to reproduce - I currently have a setup where my code compiles ONLY IF I include a seemingly superfluous classOf[] reference before the compiler hits the problematic code block.

So it definitely has to do with the ordering that the compiler loads classes (and in particular, it's only inner classes that are affected).

I've distilled it down to something short: the following snippet works fine:

{code}
$$ scala
Welcome to Scala version 2.7.3.final (Java HotSpot(TM) Server VM, Java 1.6.0_12).
Type in expressions to have them evaluated.
Type :help for more information.

scala> classOf[edu.stanford.nlp.util.ArrayCoreMap]
res0: java.lang.Class[edu.stanford.nlp.util.ArrayCoreMap] = class edu.stanford.nlp.util.ArrayCoreMap

scala> exit
{code}

But if I load another class first:

{code}
$$ scala
Welcome to Scala version 2.7.3.final (Java HotSpot(TM) Server VM, Java 1.6.0_12).
Type in expressions to have them evaluated.
Type :help for more information.

scala> classOf[edu.stanford.nlp.util.CoreMap]     
res0: java.lang.Class[edu.stanford.nlp.util.CoreMap] = interface edu.stanford.nlp.util.CoreMap

scala> classOf[edu.stanford.nlp.util.ArrayCoreMap]
error: error while loading ArrayCoreMap, class file '/home/dramage/Projects/dev/javanlp/projects/core/classes/edu/stanford/nlp/util/ArrayCoreMap.class' is broken
(class edu.stanford.nlp.util.TypesafeMap$$Key not found.)
{code}

Sorry I can't share those (Java) files easily.

