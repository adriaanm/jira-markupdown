I've got it to compile this way:
```scala
class Test[@specialized A] (implicit val m: Manifest[A]) {
  val array = new Array[A](10)
}
```

but decompilation generates the following code for Int: 
```scala
    public final int array$$mcI$$sp[] = (int[])m().newArray(10);
```

is it possible to generate new intr10 directly for specialized types?
