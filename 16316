*NOTE: this was an orphaned page on the wiki but is actually a bug report. I (ymasory) have no idea who wrote it so I'm putting in JIRA where it belongs.*

Ran eclipse from the terminal with the \-clean switch

h3. Observed issue

An infinite loop of Eclipse instances, each process dying 3 seconds after it was created, but first creating a new process that did the same thing. Hence, only "killall eclipse" would get rid of it.

The terminal displays the following stack trace upon each launch of the soon-to-die Eclipse process:

{noformat}
[org.eclipse.equinox.weaving.hook] info adding AspectJ hooks ...
org.osgi.framework.BundleException: The state indicates the bundle is resolved
   at org.eclipse.osgi.framework.internal.core.AbstractBundle.getResolutionFailureException(AbstractBundle.java:1296)
   at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:309)
   at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:280)
   at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:272)
   at org.eclipse.equinox.internal.simpleconfigurator.ConfigApplier.startBundles(ConfigApplier.java:307)
   at org.eclipse.equinox.internal.simpleconfigurator.ConfigApplier.install(ConfigApplier.java:108)
   at org.eclipse.equinox.internal.simpleconfigurator.SimpleConfiguratorImpl.applyConfiguration(SimpleConfiguratorImpl.java:129)
   at org.eclipse.equinox.internal.simpleconfigurator.SimpleConfiguratorImpl.applyConfiguration(SimpleConfiguratorImpl.java:143)
   at org.eclipse.equinox.internal.simpleconfigurator.Activator.start(Activator.java:48)
   at org.eclipse.osgi.framework.internal.core.BundleContextImpl$1.run(BundleContextImpl.java:783)
   at java.security.AccessController.doPrivileged(Native Method)
   at org.eclipse.osgi.framework.internal.core.BundleContextImpl.startActivator(BundleContextImpl.java:774)
   at org.eclipse.osgi.framework.internal.core.BundleContextImpl.start(BundleContextImpl.java:755)
   at org.eclipse.osgi.framework.internal.core.BundleHost.startWorker(BundleHost.java:352)
   at org.eclipse.osgi.framework.internal.core.AbstractBundle.resume(AbstractBundle.java:370)
   at org.eclipse.osgi.framework.internal.core.Framework.resumeBundle(Framework.java:1068)
   at org.eclipse.osgi.framework.internal.core.StartLevelManager.resumeBundles(StartLevelManager.java:557)
   at org.eclipse.osgi.framework.internal.core.StartLevelManager.incFWSL(StartLevelManager.java:464)
   at org.eclipse.osgi.framework.internal.core.StartLevelManager.doSetStartLevel(StartLevelManager.java:248)
   at org.eclipse.osgi.framework.internal.core.StartLevelManager.dispatchEvent(StartLevelManager.java:445)
   at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:227)
   at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:337)

{noformat}

h3. Workaround

I'm not completely sure what the issue is, but it is definitely related to multiple versions of the aspect plugins being installed (such as when you upgrade an existing install). Apparently, when osgi tries to rebuild whatever gets cleaned by "clean" (which I still don't quite understand), it gets very confused by multiple versions of the these plugins appearing in the file

{noformat}
<eclipse install dir>/eclipse/configuration/org.eclipse.equinox.simpleconfigurator/bundles.info
{noformat}

Removing or commenting out the references to the older plugin versions solves the problem: no crash when running with \-clean.

h3. Additional

I wanted this to be documented, in case there is some sort of interaction regarding the Scala plugin installation. 
