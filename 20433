Trying to compile the following gives a SOE on 2.12.1. Making it a reference class works around the problem.
```scala
class One[F[_]](val f: F[One[F]]) extends AnyVal
class Two[A]()
object One {
  val _ = new One[Two](new Two)
}
```
```
java.lang.StackOverflowError
	at scala.reflect.internal.Types$Type.baseTypeIndex(Types.scala:903)
	at scala.reflect.internal.tpe.TypeMaps$AsSeenFromMap.scala$reflect$internal$tpe$TypeMaps$AsSeenFromMap$$matchesPrefixAndClass(TypeMaps.scala:632)
	at scala.reflect.internal.tpe.TypeMaps$AsSeenFromMap.loop$3(TypeMaps.scala:602)
	at scala.reflect.internal.tpe.TypeMaps$AsSeenFromMap.classParameterAsSeen(TypeMaps.scala:611)
	at scala.reflect.internal.tpe.TypeMaps$AsSeenFromMap.apply(TypeMaps.scala:486)
	at scala.reflect.internal.tpe.TypeMaps$AsSeenFromMap.apply(TypeMaps.scala:457)
	at scala.reflect.internal.tpe.TypeMaps$TypeMap.mapOver(TypeMaps.scala:115)
	at scala.reflect.internal.tpe.TypeMaps$AsSeenFromMap.apply(TypeMaps.scala:487)
	at scala.reflect.internal.tpe.TypeMaps$AsSeenFromMap.apply(TypeMaps.scala:457)
	at scala.reflect.internal.tpe.TypeMaps$AsSeenFromMap.correspondingTypeArgument(TypeMaps.scala:574)
	at scala.reflect.internal.tpe.TypeMaps$AsSeenFromMap.loop$3(TypeMaps.scala:606)
	at scala.reflect.internal.tpe.TypeMaps$AsSeenFromMap.classParameterAsSeen(TypeMaps.scala:611)
	at scala.reflect.internal.tpe.TypeMaps$AsSeenFromMap.apply(TypeMaps.scala:486)
	at scala.reflect.internal.tpe.TypeMaps$TypeMap.mapOver(TypeMaps.scala:129)
	at scala.reflect.internal.tpe.TypeMaps$AsSeenFromMap.apply(TypeMaps.scala:487)
	at scala.reflect.internal.Types$Type.asSeenFrom(Types.scala:677)
	at scala.reflect.internal.Types$Type.memberType(Types.scala:710)
	at scala.tools.nsc.transform.Erasure.jsig$1(Erasure.scala:326)
	at scala.tools.nsc.transform.Erasure.boxedSig$1(Erasure.scala:243)
	at scala.tools.nsc.transform.Erasure.argSig$1(Erasure.scala:281)
	at scala.tools.nsc.transform.Erasure.$anonfun$javaSig$8(Erasure.scala:295)
	at scala.tools.nsc.transform.Erasure.classSig$1(Erasure.scala:295)
	at scala.tools.nsc.transform.Erasure.jsig$1(Erasure.scala:336)
	at scala.tools.nsc.transform.Erasure.jsig$1(Erasure.scala:332)
	at scala.tools.nsc.transform.Erasure.boxedSig$1(Erasure.scala:243)
	at scala.tools.nsc.transform.Erasure.argSig$1(Erasure.scala:281)
	at scala.tools.nsc.transform.Erasure.$anonfun$javaSig$8(Erasure.scala:295)
	at scala.tools.nsc.transform.Erasure.classSig$1(Erasure.scala:295)
	at scala.tools.nsc.transform.Erasure.jsig$1(Erasure.scala:336)
	at scala.tools.nsc.transform.Erasure.jsig$1(Erasure.scala:332)
	at scala.tools.nsc.transform.Erasure.boxedSig$1(Erasure.scala:243)
	at scala.tools.nsc.transform.Erasure.argSig$1(Erasure.scala:281)
	at scala.tools.nsc.transform.Erasure.$anonfun$javaSig$8(Erasure.scala:295)
	at scala.tools.nsc.transform.Erasure.classSig$1(Erasure.scala:295)
	at scala.tools.nsc.transform.Erasure.jsig$1(Erasure.scala:336)
	at scala.tools.nsc.transform.Erasure.jsig$1(Erasure.scala:332)
	at scala.tools.nsc.transform.Erasure.boxedSig$1(Erasure.scala:243)
    // and so on
[error] Error while emitting App.scala
[error] null
[error] one error found
[error] (compile:compileIncremental) Compilation failed
```
