I've come across some typos in the Scala Language Specification Syntax Summary section.  The version referenced is 2.6.0.final.  I haven't checked them all but at least some of the typos are also duplicated in the productions embedded in the text of the specification.  

Note: While keywords are generally bolded, they are inconsistently quoted. e.g. val appears as both *val* and * 'val' *

{code}
Type ::= InfixType ‘=>’ Type
    | ‘(’ [‘=>’ Type] ‘)’ ‘=>’ Type
    | InfixType [ExistentialClause]
{code}

I think this should be something like:

{code}
Type ::= InfixType ‘=>’ Type
    | ‘(’ [[‘=>’] Type {‘,’ [‘=>’] Type}] ‘)’ ‘=>’ Type
    | InfixType [ExistentialClause]
{code}

----

{code}
ExistentialClause ::= forSome ‘{’ ExistentialDcl {semi ExistentialDcl}} ‘}’
{code}

has an extra } i.e. {semi !ExistentialDcl}~~}~~

----

{code}
SimpleExpr1 ::= Literal
    | Path
    | ‘_’
    | ‘(’ [Exprs [‘,’]] ‘)’
    | SimpleExpr ‘.’ id
    | SimpleExpr TypeArgs
    | SimpleExpr1 ArgumentExprs
    | XmlExpr
{code}

{code}
SimplePattern ::= ‘_’
    | varid
    | Literal
    | StableId
    | StableId ‘(’ [Patterns [‘,’]] ‘)’
    | StableId ‘(’ [Patterns ‘,’] ‘_’ ‘*’ ‘)’
    | ‘(’ [Patterns [‘,’]] ‘)’
    | XmlPattern
{code}

!XmlExpr, !XmlPattern and related productions are not present in the Syntax Summary section (although they are in Chapter 10)

----

{code}
ParamClause ::= [nl] ‘(’ [Params] ’)’}
{code}

has a stray '}'

----

{code}
FunDef ::= FunSig ‘:’ Type ‘=’ Expr
    | FunSig [nl] ‘{’ Block ‘}’
    | this ParamClause ParamClauses
{code}

I think Type is optional and this should instead be:

{code}
FunDef ::= FunSig [‘:’ Type] ‘=’ Expr
    | FunSig [nl] ‘{’ Block ‘}’
    | this ParamClause ParamClauses
{code}

----

There's no list of reserved words in the syntax summary, but the list in Section 1.1 is missing 'lazy'.
