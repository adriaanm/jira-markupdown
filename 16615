{code}
import scala.tools.nsc.reporters._
import scala.tools.nsc.Settings
import reflect.runtime.Mirror.ToolBox

object Test extends App {
  val code = scala.reflect.Code.lift{
    2 match {
      case 2 => println("okay")
      case _ => println("not okay")
    }
  };

  val reporter = new ConsoleReporter(new Settings)
  val toolbox = new ToolBox(reporter)
  val ttree = toolbox.typeCheck(code.tree)
  toolbox.runExpr(ttree)
}
{code}

{code}
scala.reflect.internal.Types$TypeError: not found: object <none>
  at scala.tools.nsc.typechecker.Contexts$Context.error(Contexts.scala:286)
  at scala.tools.nsc.typechecker.Infer$Inferencer.error(Infer.scala:207)
  at scala.tools.nsc.typechecker.Typers$Typer.typedIdent$1(Typers.scala:3892)
  at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:4247)
  at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:4330)
  at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$typedPattern$1.apply(Typers.scala:4430)
  at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$typedPattern$1.apply(Typers.scala:4430)
  at scala.tools.nsc.typechecker.Contexts$Context.withImplicitsDisabled(Contexts.scala:155)
  at scala.tools.nsc.typechecker.Typers$Typer.typedPattern(Typers.scala:4430)
  at scala.tools.nsc.typechecker.Typers$Typer.typedCase(Typers.scala:1898)
  at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$typedCases$1.apply(Typers.scala:1928)
  at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$typedCases$1.apply(Typers.scala:1927)
  at scala.collection.immutable.List.loop$1(List.scala:151)
  at scala.collection.immutable.List.mapConserve(List.scala:167)
  at scala.tools.nsc.typechecker.Typers$Typer.typedCases(Typers.scala:1927)
  at scala.tools.nsc.typechecker.Typers$Typer.typedMatch$1(Typers.scala:3209)
  at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:4080)
  at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:4330)
  at scala.reflect.runtime.ToolBoxes$ToolBox.importAndTypeCheck(ToolBoxes.scala:138)
  at scala.reflect.runtime.ToolBoxes$ToolBox.typeCheck(ToolBoxes.scala:144)
  at scala.reflect.runtime.ToolBoxes$ToolBox.typeCheck(ToolBoxes.scala:149)
  at Test$delayedInit$body.apply(Test3.scala:15)
  at scala.Function0$class.apply$mcV$sp(Function0.scala:34)
  at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12)
  at scala.App$$anonfun$main$1.apply(App.scala:61)
  at scala.App$$anonfun$main$1.apply(App.scala:61)
  at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)
  at scala.collection.immutable.List.foreach(List.scala:77)
  at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:31)
  at scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:42)
  at scala.App$class.main(App.scala:61)
  at Test$.main(Test3.scala:5)
  at Test.main(Test3.scala)
  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
  at java.lang.reflect.Method.invoke(Method.java:597)
  at scala.tools.nsc.util.ScalaClassLoader$$anonfun$run$1.apply(ScalaClassLoader.scala:90)
  at scala.tools.nsc.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:38)
  at scala.tools.nsc.util.ScalaClassLoader$URLClassLoader.asContext(ScalaClassLoader.scala:159)
  at scala.tools.nsc.util.ScalaClassLoader$class.run(ScalaClassLoader.scala:90)
  at scala.tools.nsc.util.ScalaClassLoader$URLClassLoader.run(ScalaClassLoader.scala:159)
  at scala.tools.nsc.CommonRunner$class.run(ObjectRunner.scala:28)
  at scala.tools.nsc.ObjectRunner$.run(ObjectRunner.scala:45)
  at scala.tools.nsc.CommonRunner$class.runAndCatch(ObjectRunner.scala:35)
  at scala.tools.nsc.ObjectRunner$.runAndCatch(ObjectRunner.scala:45)
  at scala.tools.nsc.MainGenericRunner.runTarget$1(MainGenericRunner.scala:70)
  at scala.tools.nsc.MainGenericRunner.process(MainGenericRunner.scala:92)
  at scala.tools.nsc.MainGenericRunner$.main(MainGenericRunner.scala:101)
  at scala.tools.nsc.MainGenericRunner.main(MainGenericRunner.scala)
{code}
