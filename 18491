The fix for SI-7740 also scrubs causes (and suppressions, for Java 7).

The old behavior:

{code}
scala> def sample = throw new RuntimeException("Point of failure")
sample: Nothing

scala>   def wrapper: String = try { sample } catch { case e: Throwable => throw new RuntimeException(e) }
wrapper: String

scala>   def rewrapper: String = try { wrapper } catch { case e: Throwable => throw new RuntimeException(e) }
rewrapper: String

scala>   def rewrapperer: String = rewrapper
rewrapperer: String

scala> rewrapperer
java.lang.RuntimeException: java.lang.RuntimeException: java.lang.RuntimeException: Point of failure
    at .rewrapper(<console>:9)
    at .rewrapperer(<console>:10)
    at .<init>(<console>:12)
    at .<clinit>(<console>)
    at .$print$lzycompute(<console>:7)
    at .$print(<console>:6)
    at $print(<console>)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
    at scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:761)
    at scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:976)
    at scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:623)
    at scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:622)
    at scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)
    at scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)
    at scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:622)
    at scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:541)
    at scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:537)
    at scala.tools.nsc.interpreter.ILoop.reallyInterpret$1(ILoop.scala:715)
    at scala.tools.nsc.interpreter.ILoop.interpretStartingWith(ILoop.scala:760)
    at scala.tools.nsc.interpreter.ILoop.command(ILoop.scala:661)
    at scala.tools.nsc.interpreter.ILoop.processLine(ILoop.scala:427)
    at scala.tools.nsc.interpreter.ILoop.loop(ILoop.scala:444)
    at scala.tools.nsc.interpreter.ILoop$$anonfun$process$1.apply$mcZ$sp(ILoop.scala:829)
    at scala.tools.nsc.interpreter.ILoop$$anonfun$process$1.apply(ILoop.scala:815)
    at scala.tools.nsc.interpreter.ILoop$$anonfun$process$1.apply(ILoop.scala:815)
    at scala.reflect.internal.util.ScalaClassLoader$.savingContextLoader(ScalaClassLoader.scala:95)
    at scala.tools.nsc.interpreter.ILoop.process(ILoop.scala:815)
    at scala.tools.nsc.MainGenericRunner.runTarget$1(MainGenericRunner.scala:81)
    at scala.tools.nsc.MainGenericRunner.process(MainGenericRunner.scala:94)
    at scala.tools.nsc.MainGenericRunner$.main(MainGenericRunner.scala:103)
    at scala.tools.nsc.MainGenericRunner.main(MainGenericRunner.scala)
Caused by: java.lang.RuntimeException: java.lang.RuntimeException: Point of failure
    at .wrapper(<console>:8)
    ... 34 more
Caused by: java.lang.RuntimeException: Point of failure
    at .sample(<console>:7)
    ... 35 more
{code}

Shows the causes, versus the new behavior, which is too succinct:

{code}
scala> rewrapperer
java.lang.RuntimeException: java.lang.RuntimeException: java.lang.RuntimeException: Point of failure
  at .rewrapper(<console>:14)
  at .rewrapperer(<console>:15)
{code}

This is minor because you can always:

{code}
scala> lastException.printStackTrace
{code}
