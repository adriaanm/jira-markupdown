There should be an implicit conversion from type X to Option[X] (always in scope). Eliminates syntactic sugar around options, e.g.
```scala
val o: Option[String] = "xyz"//syntax error
//so instead of
val o1: Option[String] = Some("xyz")
//have the implicit in scope, and simply assign the value
implicit def convertToOption[T](s: T): Option[T] = {if (s==null) None else Some[T](s)}
val o2: Option[String] = "xyz"
```

This sounds simple, but in reality mixing types and their respective Options requires you to wrap a lot of things in Some() calls with no real purpose except for to make the compiler happy (=syntactic sugar)

So why not make this common implicit part of the library? Otherwise everybody will be implementing one in their code:)
