There is improved doc for {{util.control.Exception}}.

Is this the use case?
{code}
scala> import util._,control._,Exception._
import util._
import control._
import Exception._

scala> Try(throw new LinkageError)
java.lang.LinkageError
  at .$line9$$read$$$anonfun$1(<console>:21)
  at scala.util.Try$.apply(Try.scala:210)
  ... 27 elided

scala> catching(classOf[LinkageError]) withTry { throw new LinkageError; "" }
res1: scala.util.Try[String] = Failure(java.lang.LinkageError)

scala> Try(throw new ControlThrowable{})
$anon$1

scala> throw new ControlThrowable{}
$anon$1

scala> catchingPromiscuously(classOf[ControlThrowable]) withTry { throw new ControlThrowable{} }
res4: scala.util.Try[Nothing] = Failure($anon$1)

scala> catching(classOf[ControlThrowable]) withTry { throw new ControlThrowable{} }
$anon$1

{code}
