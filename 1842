I'm wondering if I can stimulate some interest in addressing this "super on trait fields" feature in an upcoming release.

It would be extremely useful when extending combinator parsers where a base language trait defines some parsers as vals (or lazy vals), then an extension language trait wants to override the parser to add some new constructs, but default back to the base language parser.

There are some work-arounds where the vals are wrapped by defs, but the boilerplate gets in teh way of the cleanest expression of this kind of composition.
