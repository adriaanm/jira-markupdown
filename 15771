I spent some time helping someone figure out what was causing a bug because the position to which the compiler pointed was confusing.

To sum it up, when an argument is of the wrong type, the compiler points to the start of the last parameter list, which makes it look like what is being passed in that last parameter list is incorrect, instead of the result of the method call. 

IMHO, even pointing to the first parameter list is a bit confusing, though not being in the middle of a confusion of parenthesis helps. I'd like for it to point to the method that is returning the wrong type, instead of the argument list. Failing that, to always point to the first argument list.

Here's some code sample showing the difference in source code position of the error messages:

{code}
scala> def f(x: String) = x
f: (x: String)String

scala> def g(x: String)(y: String): Int = x.length + y.length
g: (x: String)(y: String)Int

scala> f(g("abc")("def"))
<console>:8: error: type mismatch;
 found   : Int
 required: String
       f(g("abc")("def"))
                 ^

scala> f(5)
<console>:7: error: type mismatch;
 found   : Int(5)
 required: String
       f(5)
         ^

scala> def h(x: String) = x.length
h: (x: String)Int

scala> f(h("abc"))
<console>:8: error: type mismatch;
 found   : Int
 required: String
       f(h("abc"))
          ^
{code}
