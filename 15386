The following crashes scalac as shown below.  The inducement is a path dependent type which arrived by way of a var, followed by a method which takes a Manifest (or an OptManifest.) Not sure what is supposed to happen in general with path dependent types and vars.
```scala
import scala.reflect._

class X {
  class X2 { }
}

class A {
  lazy val b = new X
  def f = new b.X2
}

object Test {
  var in: A = new A
  def f2[T: Manifest](x: T) = ()
  
  def main(args: Array[String]): Unit = {
    f2(in.f)    
  }
}
```
```scala
Exception in thread "main" java.lang.AssertionError: assertion failed
	at scala.Predef$$.assert(Predef.scala:78)
	at scala.tools.nsc.ast.TreeGen.mkAttributedQualifier(TreeGen.scala:83)
	at scala.tools.nsc.ast.TreeGen.mkAttributedQualifier(TreeGen.scala:46)
	at scala.tools.nsc.ast.TreeGen.mkAttributedRef(TreeGen.scala:108)
	at scala.tools.nsc.ast.TreeGen.mkAttributedStableRef(TreeGen.scala:147)
	at scala.tools.nsc.ast.TreeGen.mkAttributedQualifier(TreeGen.scala:61)
	at scala.tools.nsc.ast.TreeGen.mkAttributedQualifier(TreeGen.scala:46)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch.mot$$1(Implicits.scala:814)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch.manifestOfType(Implicits.scala:858)
	at scala.tools.nsc.typechecker.Implicits$$ImplicitSearch.implicitManifestOrOfExpectedType(Implicits.scala:868)

[etc]
```
