case classes and copy are red herrings.
```scala
object Foo{
  trait TypedType[T]
  implicit def intColumnType: TypedType[Int] = null
  case class ConstColumn[T](v: T){
    def bar() = 5
    def baz = 5
  }
  implicit def valueToConstColumn[T : TypedType](v: T) = ConstColumn(v)
  5.copy()
  5.bar()
  5.baz

  "test".copy()
  "test".bar()
  "test".baz
}
```
```
scalac-hash v2.11.0-M5 sandbox/test.scala
[info] v2.11.0-M5 => /Users/jason/usr/scala-v2.11.0-M5-0-gd6fe890
sandbox/test.scala:13: error: could not find implicit value for evidence parameter of type Foo.TypedType[String]
  "test".copy()
  ^
sandbox/test.scala:14: error: could not find implicit value for evidence parameter of type Foo.TypedType[String]
  "test".bar()
  ^
sandbox/test.scala:15: error: could not find implicit value for evidence parameter of type Foo.TypedType[String]
  "test".baz
  ^
sandbox/test.scala:15: error: value baz is not a member of String
  "test".baz
         ^
four errors found
```

The error messages you desired appeared in 2.11.0-M6. I'm 99% sure this was due to my changes in https://github.com/scala/scala/pull/3024.
```
% scalac-hash v2.11.0-M6 sandbox/test.scala
[info] v2.11.0-M6 => /Users/jason/usr/scala-v2.11.0-M6-0-g686fb48
sandbox/test.scala:13: error: could not find implicit value for evidence parameter of type Foo.TypedType[String]
  "test".copy()
  ^
sandbox/test.scala:13: error: value copy is not a member of String
  "test".copy()
         ^
sandbox/test.scala:14: error: could not find implicit value for evidence parameter of type Foo.TypedType[String]
  "test".bar()
  ^
sandbox/test.scala:14: error: value bar is not a member of String
  "test".bar()
         ^
sandbox/test.scala:15: error: could not find implicit value for evidence parameter of type Foo.TypedType[String]
  "test".baz
  ^
sandbox/test.scala:15: error: value baz is not a member of String
  "test".baz
         ^
6 errors found
```

But, the only constant is change, and after the fix for scala/bug#3346:
```
git show master~13
commit 54707cb45018170e31eb188a9a694ab9b0728f71
Merge: 5b2c464 210dbc7
Author: Eugene Burmako <xeno.by@gmail.com>
Date:   Fri Oct 18 07:22:58 2013 -0700

    Merge pull request #3030 from xeno-by/topic/fundep-views

    SI-3346 implicit parameters can now guide implicit view inference

% scalac-hash master~13 sandbox/test.scala
[info] master~13 => /Users/jason/usr/scala-v2.11.0-M6-20-g54707cb
sandbox/test.scala:13: error: value copy is not a member of String
  "test".copy()
         ^
sandbox/test.scala:14: error: value bar is not a member of String
  "test".bar()
         ^
sandbox/test.scala:15: error: value baz is not a member of String
  "test".baz
         ^
three errors found
```

No implicit error messages. But at least it is uniform.

My only suggestion is to compile with `-Xlog-implicits`:
```
scalac-hash master~13 -Xlog-implicits sandbox/test.scala
[info] master~13 => /Users/jason/usr/scala-v2.11.0-M6-20-g54707cb
sandbox/test.scala:13: valueToConstColumn is not a valid implicit value for String("test") => ?{def copy: ?} because:
could not find implicit value for evidence parameter of type Foo.TypedType[String]
  "test".copy()
  ^
sandbox/test.scala:13: valueToConstColumn is not a valid implicit value for (=> String("test")) => ?{def copy: ?} because:
could not find implicit value for evidence parameter of type Foo.TypedType[String]
  "test".copy()
  ^
sandbox/test.scala:13: error: value copy is not a member of String
  "test".copy()
         ^
sandbox/test.scala:14: valueToConstColumn is not a valid implicit value for String("test") => ?{def bar: ?} because:
could not find implicit value for evidence parameter of type Foo.TypedType[String]
  "test".bar()
  ^
sandbox/test.scala:14: valueToConstColumn is not a valid implicit value for (=> String("test")) => ?{def bar: ?} because:
could not find implicit value for evidence parameter of type Foo.TypedType[String]
  "test".bar()
  ^
sandbox/test.scala:14: error: value bar is not a member of String
  "test".bar()
         ^
sandbox/test.scala:15: valueToConstColumn is not a valid implicit value for String("test") => ?{def baz: ?} because:
could not find implicit value for evidence parameter of type Foo.TypedType[String]
  "test".baz
  ^
sandbox/test.scala:15: valueToConstColumn is not a valid implicit value for (=> String("test")) => ?{def baz: ?} because:
could not find implicit value for evidence parameter of type Foo.TypedType[String]
  "test".baz
  ^
sandbox/test.scala:15: error: value baz is not a member of String
  "test".baz
         ^
three errors found
```
