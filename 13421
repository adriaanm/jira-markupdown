`a <ins>= b` and similar methods should be desugared to `a = a </ins> b` when the right methods are in place. However, when `apply` and `update` are not defined in the static type of the lhs (but inherited), the desugaring fails. This happens for mutable Maps (see discussion on http://article.gmane.org/gmane.comp.lang.scala.user/5890). Simple example follows.
```scala
trait A {
  def apply(x: Int): Int
  def update(x: Int, y: Int): Unit
}

trait B extends A

abstract class Foo {
  val a: A = null
  val b: B = null

  a(0) += 1
  b(0) += 1 // this one does not type check.
}
```
