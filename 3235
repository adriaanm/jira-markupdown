Replying to [comment:11 rytz]:
> All this is only true when you use `-sourcepath` in your project. If you do so, you definitely should follow the naming convention for the source files (i.e. store `class A` in `A.scala`). For package objects, the naming convention is to name the file `package.scala`.
> 
> So I'd say `wontfix`.

I didn't knew about the naming convention for package objects, sorry about that (it seems that the Scala conventions guide that I've downloaded is outdated).

Despite that I believe that it will be common for new users to try to name the file of a package object using the name of the package object as this is the thing that they are used to do for files that contain classes etc. You might choose not to fix this issue but at least you should consider improving the error message as suggested by Miles in a previous comment.

I completely understand that you might not have the resources to do this now, but I believe that scheduling it for after 2.8 is a better thing to do than closing this issue.

Regarding the `-sourcepath` option I believe that users might not have a choice to stop using it. The problem here is that users might not use `-sourcepath` directly but use tools (like Eclipse, ANT, Maven) that use `-sourcepath`.

Another unrelated thing with `-soucepath` is that in Eclipse we have a major issue (SI-2767) with classes that are defined in files that do not follow the naming conventions. The presentation compiler reports bogus error messages saying that he cannot find those classes. Can you please elaborate on what problems are caused when you do not follow the naming conventions and use `-sourcepath` to compile you project.

