I've been worrying about my suggestion to run {{Timer}} as a daemon thread. I think the test case below shows that it is not the right solution. The TIMEOUT message is never received, presumably because the {{Timer}} exits when the main thread exits, even though the {{Timer}} still needs to send a message.

{code}
import scala.actors.Actor._
import scala.actors.TIMEOUT

println("main-1")
actor {
  println("actor-1")
  reactWithin(2000) {
    case TIMEOUT => println("actor-2")
  }
}
println("main-2")
{code}

Output:

{code}
$$ scala -version
Scala code runner version 2.8.0.r17430-b20090404021712 -- Copyright 2002-2009, LAMP/EPFL
$$ scala actors.scala 
main-1
main-2
actor-1
$$
{code}
