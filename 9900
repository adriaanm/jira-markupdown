Compiling `S1` independently of `Runner` shows that refchecks forbids this overriding error.

{code}
// S.scala
package s {
  class J { protected[s] def m() = 5 }
  package nest {
    // narrows access to protected[nest], shutting out package s
    class S1 extends J { override protected[nest] def m() = 10 }
  }
}
{code}

{noformat}
% ~/scala/2.11/bin/scalac sandbox/t7698.scala
sandbox/t7698.scala:6: error: overriding method m in class J of type ()Int;
 method m has weaker access privileges; it should be at least protected[s]
    class S1 extends J { override protected[nest] def m() = 10 }
                                                      ^
{noformat}

I don't think it is really worth finessing the error message at the call site for this.
