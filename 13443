I cannot get the JScience library to work with Scala in either Eclipse or the scala shell.  Both situations are described here.

1. Eclipse (Using the latest beta plugin as of 5/15/2008)

When trying to use the JScience library (http://jscience.org/) in a Scala project in Eclipse and I get the following error:
{code}
assertion failed: internal error: illegal class file dependency
{code}
A simple example program that would demonstrate this would be:

{code}
package myscala

import org.jscience.physics.amount._

object ScalaApp
{
  def main(args : Array[String])  {    println(Constants.c)
  }
} 
{code}

Other libraries (e.g. cern colt) work, so it must be something about jscience.  One idea I had was that jscience uses unicode characters for some constants.  Could this character encoding mess up Scala compatibility?

2. Scala shell/command line interface (scala 2.7.1 final)

Working example (using cern colt 1.2.0 (http://acs.lbl.gov/~hoschek/colt-download/releases/))

{code}
% scala -classpath /path/to/colt/lib/colt-1.2.0.jar
scala> val fac = cern.colt.matrix.DoubleFactory2D.sparse
scala> val A = fac.random(4,4)
scala> val algebra = new cern.colt.matrix.linalg.Algebra
scala> val B = algebra.inverse(A)
scala> val C = algebra.mult(A, B)
{code}

With each of the above you’ll get some sort of good output.  The last command should print a 4x4 identity matrix.

Failure mode (Using JScience 4.3.1 (http://jscience.org/))

{code}
% scala -classpath /path/to/jscience/lib/jscience.jar
scala> var c = org.jscience.physics.amount.Constants.c 
{code}

This should set c to the speed of light, but instead you get a huge stack dump and the scala command line interpreter exits.

The first few lines of the dump are (I’ll leave out the rest for brevity):

{code}
Exception in thread "main" java.lang.AssertionError: assertion failed
        at scala.Predef$$.assert(Predef.scala:87)
        at scala.tools.nsc.symtab.classfile.ClassfileParser.parse(ClassfileParser.scala:59)
{code}
