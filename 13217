Is there any sensible reason why compiler won't enforce to "catch" the return value of a function, if it is non-Unit.
```scala
e.g.
def m: Int = 5
m // works anywhere, but why?
val x = m // value of m should be "catched"

of course, in case m is called when it's a part of the return value of its enclosing function/method, then you wouldn't need it either:

def k = 5 * m // should work
```

Maybe this is better to be enforced with some optional plugin mechanism, though. But I really would like to see this, if there is no good reasons not to.
