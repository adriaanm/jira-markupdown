Additional issue found in the book, at page 67, for the _Zipping lists_ example :

{code: language=scala}
def zip[B](that: List[B]): List[(a,b)] =
  if (this.isEmpty || that.isEmpty) Nil
  else (this.head, that.head) :: (this.tail zip that.tail)
{code}

should be probably changed to :
{code: language=scala}

def zip[B](that: List[B]): List[(A,B)] =
  if (this.isEmpty || that.isEmpty) Nil
  else (this.head, that.head) :: (this.tail zip that.tail)
{code}

