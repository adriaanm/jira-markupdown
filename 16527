If I assign the result of a match block mixed with cps and non-cps branches, it is OK:
```scala
def mixCPS(isCPS:Boolean) = reset {
  val matchResult = isCPS match {
    case false => 
      println("non-cps")
      "non-cps"
    case _ =>
      println("cps1")
      shiftUnit0[Unit, Unit]()
      println("cps2")
      "cps"
  }
  println("result:" + matchResult)
}
mixCPS(true) // OK!
mixCPS(false) // OK!
```

If I don't assign the result to anything, it cannot be compiled:
```scala
def mixCPS2(isCPS:Boolean) = reset {
  isCPS match {
    case false => 
      println("non-cps")
      "non-cps"
    case _ =>
      println("cps1")
      shiftUnit0[Unit, Unit]()
      println("cps2")
      "cps"
  }
  println("done")
}
/*
<console>:12: error: type mismatch;
 found   : java.lang.String
 required: java.lang.String @scala.util.continuations.cpsParam[Unit,Unit]
           case false =>
*/
```

Even if I assign the match result to _, it is OK.
```scala
def mixCPS3(isCPS:Boolean) = reset {
  val _ = isCPS match {
    case false => 
      println("non-cps")
      "non-cps"
    case _ =>
      println("cps1")
      shiftUnit0[Unit, Unit]()
      println("cps2")
      "cps"
  }
  println("done")
}
mixCPS3(true) // OK!
mixCPS3(false) // OK!
```
