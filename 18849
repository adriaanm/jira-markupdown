List serialization fails: If a List is put into an Infinispan persistent cache, the following exception happens:

java.io.NotActiveException: Fields were never written

A detailed bug report is available here: https://community.jboss.org/message/845306?_sscc=t

A similar bug is reported here: https://issues.jboss.org/browse/JBMAR-133#issues/

As far as I can tell this is not a bug in Infinispan, but in writeObject() of "::":

As for the spec:

http://docs.oracle.com/javase/6/docs/platform/serialization/spec/output.html#861 

"even if no optional data is written, defaultWriteObject or writeFields must still be invoked once."

and 

      http://docs.oracle.com/javase/6/docs/platform/serialization/spec/input.html#2971 

"even if no optional data is read, defaultReadObject or readFields must still be invoked once. "

I have added the calls (see the attached patch), and now my application works.

ant test fails with:

     [mima]    scala$xml$dtd$ElementValidator$$find$2(java.lang.String,scala.Option)Boolean
     [mima]    in class scala.xml.dtd.ElementValidator's type has changed; was
     [mima]    (java.lang.String,scala.Option)Boolean, is now:
     [mima]    (java.lang.String,scala.collection.Seq)Boolean

Another minor issue: Compilation fails with ant 1.8.1, it works with ant 1.9.3 (the README says 1.7 is OK).
