```
import scala.slick.direct._

case class Coffee(name: String)

object Test extends App {
  def test() {
    val query: Queryable[Coffee] = ???
    query.map(_.name).filter(_ == "")
  }
}

-------------------------------------------------
I believe the first bad commit is scala/scala@6015418 (removing resetAllAttrs from reify).
-------------------------------------------------
% scalac-hash 6015418~1 -Yreify-debug -uniqid @args.txt 2>&1 > good.txt
% scalac-hash 6015418 -Yreify-debug -uniqid @args.txt 2>&1 > bad.txt
diff -u {good,bad}.txt
--- good.txt    2014-02-19 17:30:36.000000000 +0100
+++ bad.txt 2014-02-19 17:30:54.000000000 +0100
@@ -365,9 +365,9 @@
       def apply[U >: Nothing#2986 <: Universe#8159 with Singleton#5702]($m$untyped: Mirror#8252[U]): U#Tree = {
         val $u: U = $m$untyped.universe;
         val $m: $u.Mirror = $m$untyped.asInstanceOf[$u.Mirror];
-        val free$query1 = $u.build.newFreeTerm("query", query#15744, $u.build.FlagsRepr.apply(17592190238720L), "defined by test in Test.scala:7:9");
+        val free$query1 = $u#19444.build#12680.newFreeTerm#12699("query", query#15744, $u#19444.build#12680.FlagsRepr#12773.apply#12775(17592190238720L), "defined by test in Test.scala:7:9");
         $u.build.setTypeSignature(free$query1, $u.TypeRef($u.ThisType($m.staticPackage("scala.slick.direct").asModule.moduleClass), $m.staticClass("scala.slick.direct.Queryable"), scala.collection.immutable.List.apply($m.staticClass("Coffee").asType.toTypeConstructor)));
-        $u.Apply($u.Select($u.Apply($u.Select($u.build.Ident($m.staticModule("scala.slick.direct.QueryOps")), $u.TermName("query")), scala.collection.immutable.List.apply($u.Apply.apply($u.Select.apply($u.Apply.apply($u.Select.apply($u.build.Ident($m.staticModule("scala.slick.direct.QueryOps")), $u.TermName.apply("query")), scala.collection.immutable.List.apply($u.build.Ident(free$query1))), $u.TermName.apply("map")), scala.collection.immutable.List.apply($u.Function.apply(scala.collection.immutable.List.apply($u.ValDef.apply($u.Modifiers.apply($u.build.FlagsRepr.apply(2105344L), $u.TypeName.apply(""), immutable#5682.this.Nil), $u.TermName.apply("x$1"), $u.TypeTree.apply(), $u.EmptyTree)), $u.Select.apply($u.Ident.apply($u.TermName.apply("x$1")), $u.TermName.apply("name"))))))), $u.TermName("filter")), scala.collection.immutable.List.apply($u.Function(scala.collection.immutable.List.apply($u.ValDef($u.Modifiers($u.build.FlagsRepr(2105344L), $u.TypeName(""), scala.collection.immutable.List.apply()), $u.TermName("x$2"), $u.TypeTree(), $u.EmptyTree)), $u.Apply($u.Select($u.Ident($u.TermName("x$2")), $u.TermName("$eq$eq")), scala.collection.immutable.List.apply($u.Literal($u.Constant("")))))))
+        $u.Apply($u.Select($u.Apply($u.Select($u.build.Ident($m.staticModule("scala.slick.direct.QueryOps")), $u.TermName("query")), scala.collection.immutable.List.apply($u#19444.Apply#10440.apply#10443($u#19444.Select#10477.apply#10480($u#19444.Apply#10440.apply#10443($u#19444.Select#10477.apply#10480($u#19444.build#12680.Ident#12721($m#19445.staticModule#19420("scala.slick.direct.QueryOps")), $u#19444.TermName#9933.apply#9936("query")), scala#22.collection#2627.immutable#5681.List#14910.apply#19532($u#19444.build#12680.Ident#12721(free$query1))), $u#19444.TermName#9933.apply#9936("map")), scala#22.collection#2627.immutable#5681.List#14910.apply#19532($u#19444.Function#10298.apply#10301(scala#22.collection#2627.immutable#5681.List#14910.apply#19532($u#19444.ValDef#10118.apply#10121($u#19444.Modifiers#10973.apply#10977($u#19444.build#12680.FlagsRepr#12773.apply#12775(2105344L), $u#19444.TypeName#9940.apply#9943(""), immutable#5682.this.Nil#14130), $u#19444.TermName#9933.apply#9936("x$1"), $u#19444.TypeTree#10605.apply#10608(), $u#19444.EmptyTree#9997)), $u#19444.Select#10477.apply#10480($u#19444.Ident#10485.apply#10488($u#19444.TermName#9933.apply#9936("x$1")), $u#19444.TermName#9933.apply#9936("name"))))))), $u.TermName("filter")), scala.collection.immutable.List.apply($u.Function(scala.collection.immutable.List.apply($u.ValDef($u.Modifiers($u.build.FlagsRepr(2105344L), $u.TypeName(""), scala.collection.immutable.List.apply()), $u.TermName("x$2"), $u.TypeTree(), $u.EmptyTree)), $u.Apply($u.Select($u.Ident($u.TermName("x$2")), $u.TermName("$eq$eq")), scala.collection.immutable.List.apply($u.Literal($u.Constant("")))))))
       }
     };
     new $treecreator3()
```
