In 2.7.0-RC1 and -RC2 I get an AssertionError when referencing a classfile that has a method signature of the form `L`_identifier_`<L`_identifier_`;>.`_identifier_`;`. `ClassFileParser` expects a `;` after the `>`, and crashes when it sees a `.` instead.
```scala
Exception in thread "main" java.lang.AssertionError: assertion failed
        at scala.Predef$$.assert(Predef.scala:87)
        at scala.tools.nsc.symtab.classfile.ClassfileParser.accept$$1(ClassfileParser.scala:451)
        at scala.tools.nsc.symtab.classfile.ClassfileParser.sig2type$$1(ClassfileParser.scala:517)
        at scala.tools.nsc.symtab.classfile.ClassfileParser.sig2type$$1(ClassfileParser.scala:533)
        at scala.tools.nsc.symtab.classfile.ClassfileParser.scala$$tools$$nsc$$symtab$$classfile$$ClassfileParser$$$$sigToType(ClassfileParser.scala:564)
        at scala.tools.nsc.symtab.classfile.ClassfileParser.parseAttribute$$1(ClassfileParser.scala:592)
        at scala.tools.nsc.symtab.classfile.ClassfileParser$$$$anonfun$$parseAttributes$$1.apply(ClassfileParser.scala:746)
        at scala.tools.nsc.symtab.classfile.ClassfileParser$$$$anonfun$$parseAttributes$$1.apply(ClassfileParser.scala:746)
        at scala.Iterator$$class.foreach(Iterator.scala:382)
        at scala.RandomAccessSeq$$$$anon$$12.foreach(RandomAccessSeq.scala:136)
        at scala.Iterable$$class.foreach(Iterable.scala:256)
        at scala.Range.foreach(Range.scala:30)
        at scala.tools.nsc.symtab.classfile.ClassfileParser.parseAttributes(ClassfileParser.scala:746)
        at scala.tools.nsc.symtab.classfile.ClassfileParser.parseMethod(ClassfileParser.scala:440)
        at scala.tools.nsc.symtab.classfile.ClassfileParser$$$$anonfun$$parseClass$$2.apply(ClassfileParser.scala:372)
        at scala.tools.nsc.symtab.classfile.ClassfileParser$$$$anonfun$$parseClass$$2.apply(ClassfileParser.scala:372)
        at scala.Iterator$$class.foreach(Iterator.scala:382)
        at scala.RandomAccessSeq$$$$anon$$12.foreach(RandomAccessSeq.scala:136)
        at scala.Iterable$$class.foreach(Iterable.scala:256)
        at scala.Range.foreach(Range.scala:30)
        at scala.tools.nsc.symtab.classfile.ClassfileParser.parseClass(ClassfileParser.scala:372)
        at scala.tools.nsc.symtab.classfile.ClassfileParser.parse(ClassfileParser.scala:83)
        at scala.tools.nsc.symtab.SymbolLoaders$$ClassfileLoader$$$$anonfun$$doComplete$$3.apply(SymbolLoaders.scala:292)
        at scala.tools.nsc.symtab.SymbolLoaders$$ClassfileLoader$$$$anonfun$$doComplete$$3.apply(SymbolLoaders.scala:292)
        at scala.tools.nsc.symtab.SymbolLoaders.completeClassfile(SymbolLoaders.scala:278)
        at scala.tools.nsc.symtab.SymbolLoaders$$ClassfileLoader.doComplete(SymbolLoaders.scala:291)
        at scala.tools.nsc.symtab.SymbolLoaders$$SymbolLoader.complete(SymbolLoaders.scala:80)
        at scala.tools.nsc.symtab.SymbolLoaders$$SymbolLoader.load(SymbolLoaders.scala:100)
        at scala.tools.nsc.symtab.Symbols$$Symbol.exists(Symbols.scala:370)
        at scala.tools.nsc.typechecker.Typers$$Typer.qualifies$$1(Typers.scala:2706)
        at scala.tools.nsc.typechecker.Typers$$Typer.typedIdent$$1(Typers.scala:2721)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:3096)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3167)
        at scala.tools.nsc.typechecker.Typers$$Typer.typedTypeConstructor(Typers.scala:3248)
        at scala.tools.nsc.typechecker.Typers$$Typer.parentTypes(Typers.scala:858)
        at scala.tools.nsc.typechecker.Namers$$Namer.templateSig(Namers.scala:526)
        at scala.tools.nsc.typechecker.Namers$$Namer.classSig(Namers.scala:541)
        at scala.tools.nsc.typechecker.Namers$$Namer.typeSig(Namers.scala:803)
        at scala.tools.nsc.typechecker.Namers$$Namer$$$$anonfun$$typeCompleter$$1.apply(Namers.scala:403)
        at scala.tools.nsc.typechecker.Namers$$Namer$$$$anonfun$$typeCompleter$$1.apply(Namers.scala:401)
        at scala.tools.nsc.typechecker.Namers$$$$anon$$1.complete(Namers.scala:987)
        at scala.tools.nsc.symtab.Symbols$$Symbol.info(Symbols.scala:492)
        at scala.tools.nsc.symtab.Symbols$$Symbol.initialize(Symbols.scala:602)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:2886)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3167)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3204)
        at scala.tools.nsc.typechecker.Typers$$Typer.typedStat$$1(Typers.scala:1515)
        at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$19.apply(Typers.scala:1560)
        at scala.tools.nsc.typechecker.Typers$$Typer$$$$anonfun$$19.apply(Typers.scala:1560)
        at scala.List$$.loop$$1(List.scala:254)
        at scala.List$$.mapConserve(List.scala:271)
        at scala.tools.nsc.typechecker.Typers$$Typer.typedStats(Typers.scala:1560)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed1(Typers.scala:2892)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3167)
        at scala.tools.nsc.typechecker.Typers$$Typer.typed(Typers.scala:3204)
        at scala.tools.nsc.typechecker.Analyzer$$typerFactory$$$$anon$$2.apply(Analyzer.scala:40)
        at scala.tools.nsc.Global$$GlobalPhase.applyPhase(Global.scala:247)
        at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$run$$1.apply(Global.scala:233)
        at scala.tools.nsc.Global$$GlobalPhase$$$$anonfun$$run$$1.apply(Global.scala:233)
        at scala.Iterator$$class.foreach(Iterator.scala:382)
        at scala.collection.mutable.ListBuffer$$$$anon$$1.foreach(ListBuffer.scala:255)
        at scala.tools.nsc.Global$$GlobalPhase.run(Global.scala:233)
        at scala.tools.nsc.Global$$Run.compileSources(Global.scala:545)
        at scala.tools.nsc.Global$$Run.compile(Global.scala:629)
        at scala.tools.nsc.Main$$.process(Main.scala:86)
        at scala.tools.nsc.Main$$.main(Main.scala:107)
        at scala.tools.nsc.Main.main(Main.scala)
```

I originally got this error when accessing [http://mina.apache.org/report/trunk/xref/org/apache/mina/transport/socket/nio/NioSocketConnector.html MINA's `NioSocketConnector`] from Scala code, but I've also created a smaller test class.

Java code with unparsable method signature:
```scala
class ParentClass<T> {
    class ParentInnerClass {}
}

public class HardToParse extends ParentClass<Object>
{
    // sig: "()LParentClass<Ljava.lang.Object;>.ParentInnerClass;"
    ParentInnerClass method() {
	return null;
    }
}
```

Scala code that crashes the compiler:
```scala
class ForceParse extends HardToParse
```

I haven't checked whether it's possible to reproduce this problem with a pure Scala solution.
