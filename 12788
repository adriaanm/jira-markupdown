Reading "actors.corePoolSize" causes security exception when running under Java Security Sandbox (such as Applet or a j2ee server)...

{code}
java.lang.ExceptionInInitializerError
	at scala.actors.Actor$$class.start(Actor.scala:612)
	at scala.actors.Actor$$$$anon$$0.start(Actor.scala:73)
	at scala.actors.Actor$$.actor(Actor.scala:76)
	at realty.Admin.<init>(admin.scala:341)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at java.lang.Class.newInstance0(Unknown Source)
	at java.lang.Class.newInstance(Unknown Source)
	at sun.applet.AppletPanel.createApplet(Unknown Source)
	at sun.plugin.AppletViewer.createApplet(Unknown Source)
	at sun.applet.AppletPanel.runLoader(Unknown Source)
	at sun.applet.AppletPanel.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.security.AccessControlException: access denied (java.util.PropertyPermission actors.corePoolSize read)
	at java.security.AccessControlContext.checkPermission(Unknown Source)
	at java.security.AccessController.checkPermission(Unknown Source)
	at java.lang.SecurityManager.checkPermission(Unknown Source)
	at java.lang.SecurityManager.checkPropertyAccess(Unknown Source)
	at java.lang.System.getProperty(Unknown Source)
	at scala.actors.FJTaskScheduler2.<init>(FJTaskScheduler2.scala:22)
	at scala.actors.Scheduler$$.<init>(Scheduler.scala:31)
	at scala.actors.Scheduler$$.<clinit>(Scheduler.scala)
	... 15 more
{code}

The library should catch AccessControlException and treat it as if no "actors.corePoolSize" property present.
