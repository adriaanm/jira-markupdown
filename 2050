Sort of.

On the command line (I'm back on 2.7.5 in both Eclipse and command line) I see two errors:

  * The root cause: missing dependency causing the class not to load
  * Because the class did not load, the red-herring error about no constructor

But in Eclipse I only see the second error message.

In my opinion the bug is around the behavior when the class I'm trying to use fails to load. If that is a recoverable error where we will still be able to get the methods and types and stuff out of the class file, then great things should continue, but maybe with a warning. But as is shown here, it is *not* a recoverable error, and the attempt to recover is causing us to run into the second message, which makes no sense at all, especially if (as is the case in the Eclipse plugin) it is the only error message you see.

So the behavior is different between command line and Eclipse. Eclipse is showing a subset of the errors. That is making it hard for the user to see what to do to resolve the problem. It ends up looking like a deep bug in the compiler when its really a combination of a bug / iffy feature (attempting to recover from failed class load but failing to do anything useful) in the complier AND a bug / iffy feature (only displaying a subset of the error messages so you don't always get the same info you'd get from the command-line compiler) in the Eclipse plugin.

Does that help?
