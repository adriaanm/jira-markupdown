I can offer some noobish ideas.

There is no "relevant section in the spec which *dis*allows this".
Matching members is Definition 5.1.4 in Section 5.1.3.
The third new example matches on #2, the first doesn't match either #2/#4
(which goes to: "one of the methods is generic and the other is not").
The second example is disallowed because of erasure (as the error says).

The first example is useful because you can distinguish c.f(7) and c.f("s").
On the Scala side, the sigs don't match, and on the classfile side, the methods are
disambiguated by return type.

Elsewhere, Paul has supplied a similarly perverse example:
```scala
object Test {

  def m(x: String): Int = x.length

  def m(x: String with T forSome {type T}): String = x.reverse

  def main(a: Array[String]) {
    println(m("abc"): Int)
    println(m("abc"): String)
  }
}
```
