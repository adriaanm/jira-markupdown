I have been able to cause similar crashes which seem related to type handling in the REPL. in the REPL both in 2.8.0-final and in the latest 2.9.0 nightly build, though the exceptions in each case look different. I was running the following code in the REPL. Also tested on compiled files - this error doesn't occur there so I assume this is REPL specified.
{code}
case class Gender(rep:String) {
  override def toString = rep
}
case class Male extends Gender("Male")
case class Female extends Gender("Female")
{code}

In both 2.8.0 and 2.9.0 the output looks like this:

{code}
$$ ./scala -deprecation
Welcome to Scala version 2.8.0.final (Java HotSpot(TM) 64-Bit Server VM, Java 1.6.0_20).
Type in expressions to have them evaluated.
Type :help for more information.

scala> case class Gender(rep:String) {
     |   override def toString = rep
     | }
defined class Gender

scala> case class Male extends Gender("Male")
<console>:1: warning: case classes without a parameter list have been deprecated;
use either case objects or case classes with `()' as parameter list.
       case class Male extends Gender("Male")
                       ^
<console>:7: warning: case classes without a parameter list have been deprecated;
use either case objects or case classes with `()' as parameter list.
       case class Male extends Gender("Male")
                       ^
<console>:7: warning: case class `class Male' has case class ancestor `class Gender'.  
This has been deprecated for unduly complicating both usage and implementation.  
You should instead use extractors for pattern matching on non-leaf nodes.
       case class Male extends Gender("Male")
                  ^
defined class Male

scala> case class Female extends Gender("Female")
<console>:1: warning: case classes without a parameter list have been deprecated;
use either case objects or case classes with `()' as parameter list.
       case class Female extends Gender("Female")
                         ^
<console>:7: warning: case classes without a parameter list have been deprecated;
use either case objects or case classes with `()' as parameter list.
       case class Female extends Gender("Female")
                         ^
<console>:7: warning: case class `class Female' has case class ancestor `class Gender'.  
This has been deprecated for unduly complicating both usage and implementation.  
You should instead use extractors for pattern matching on non-leaf nodes.
       case class Female extends Gender("Female")
                  ^
{code}

2.8.0 stacktrace here: [http://pastebin.com/JT8kbBrX]
[[BR]]
2.9.0 stacktrace here: [http://pastebin.com/Z31Xqw9e]


